{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/scottmiller/Documents/GitHub/LSIL_PAP/lsilPAP5.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}21 Dec 2018, 11:34:59
{txt}
{com}. 
. cd "$d2"
{res}/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data
{txt}
{com}. 
. ** HH level dataset
. ********************************************* 
. clear
{txt}
{com}. use "$d3/r_HH_Merged_Ind.dta"
{txt}
{com}. encode idx, gen(idx_n)
{txt}
{com}. 
. 
. * Communication
. 
. *** Strata dummies - No interaction
. local varlist COM3 COM8 index_HH_comm
{txt}
{com}. foreach v in `varlist' {c -(}
{txt}  2{com}.         
.         reg `v' r_treat i.strata, cluster(idx_n)
{txt}  3{com}.         
.         quietly {c -(} 
{txt}  4{com}.                 ereturn list
{txt}  5{com}.                 scalar t_a = invttail(`e(df_r)',0.025) // alpha t-value
{txt}  6{com}.                 scalar t_b = invttail(`e(df_r)',0.2) // beta t-value
{txt}  7{com}.  
.                 scalar mde_`v' = (t_a + t_b)*_se[r_treat]
{txt}  8{com}.                 {c )-} 
{txt}  9{com}. 
.         * Calculate MDE as % of mean & # of standard deviations
.         quietly {c -(}       
{txt} 10{com}.                 sum `v'
{txt} 11{com}.                 scalar mean_`v' = mde_`v' / r(mean) // % of treatment mean
{txt} 12{com}.                 scalar sd_`v' = mde_`v' / r(sd)  // # of treatment sd's
{txt} 13{com}.                 {c )-}
{txt} 14{com}. {c )-} 

{txt}Linear regression                               Number of obs     = {res}     1,261
                                                {txt}{help j_robustsingular:F(23, 77) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0645
                                                {txt}Root MSE          =    {res} 1.7087

{txt}{ralign 78:(Std. Err. adjusted for {res:78} clusters in idx_n)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}        COM3{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .1458154{col 26}{space 2} .1358728{col 37}{space 1}    1.07{col 46}{space 3}0.287{col 54}{space 4} -.124742{col 67}{space 3} .4163728
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}-.0609721{col 26}{space 2} .1265831{col 37}{space 1}   -0.48{col 46}{space 3}0.631{col 54}{space 4}-.3130311{col 67}{space 3}  .191087
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .9323202{col 26}{space 2} .0701982{col 37}{space 1}   13.28{col 46}{space 3}0.000{col 54}{space 4} .7925377{col 67}{space 3} 1.072103
{txt}{space 8}122  {c |}{col 14}{res}{space 2} 1.340655{col 26}{space 2}  .262653{col 37}{space 1}    5.10{col 46}{space 3}0.000{col 54}{space 4} .8176464{col 67}{space 3} 1.863664
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .6221142{col 26}{space 2} .4165071{col 37}{space 1}    1.49{col 46}{space 3}0.139{col 54}{space 4}-.2072574{col 67}{space 3} 1.451486
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .4684761{col 26}{space 2} .2547057{col 37}{space 1}    1.84{col 46}{space 3}0.070{col 54}{space 4}-.0387078{col 67}{space 3}   .97566
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .9182028{col 26}{space 2}  .398266{col 37}{space 1}    2.31{col 46}{space 3}0.024{col 54}{space 4} .1251538{col 67}{space 3} 1.711252
{txt}{space 8}222  {c |}{col 14}{res}{space 2} 1.167684{col 26}{space 2} .4549831{col 37}{space 1}    2.57{col 46}{space 3}0.012{col 54}{space 4} .2616969{col 67}{space 3} 2.073671
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .1518345{col 26}{space 2} .2671093{col 37}{space 1}    0.57{col 46}{space 3}0.571{col 54}{space 4}-.3800481{col 67}{space 3} .6837171
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 1.367833{col 26}{space 2} .2471102{col 37}{space 1}    5.54{col 46}{space 3}0.000{col 54}{space 4} .8757737{col 67}{space 3} 1.859892
{txt}{space 8}321  {c |}{col 14}{res}{space 2} 1.198373{col 26}{space 2} .1875815{col 37}{space 1}    6.39{col 46}{space 3}0.000{col 54}{space 4}   .82485{col 67}{space 3} 1.571895
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 1.468644{col 26}{space 2} .3125135{col 37}{space 1}    4.70{col 46}{space 3}0.000{col 54}{space 4} .8463496{col 67}{space 3} 2.090938
{txt}{space 8}411  {c |}{col 14}{res}{space 2} 1.333691{col 26}{space 2} .1934535{col 37}{space 1}    6.89{col 46}{space 3}0.000{col 54}{space 4} .9484764{col 67}{space 3} 1.718907
{txt}{space 8}412  {c |}{col 14}{res}{space 2}  1.71103{col 26}{space 2} .3063582{col 37}{space 1}    5.59{col 46}{space 3}0.000{col 54}{space 4} 1.100993{col 67}{space 3} 2.321067
{txt}{space 8}421  {c |}{col 14}{res}{space 2}  1.60733{col 26}{space 2} .3419861{col 37}{space 1}    4.70{col 46}{space 3}0.000{col 54}{space 4}  .926349{col 67}{space 3} 2.288312
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 1.309589{col 26}{space 2} .2678089{col 37}{space 1}    4.89{col 46}{space 3}0.000{col 54}{space 4}  .776313{col 67}{space 3} 1.842864
{txt}{space 8}511  {c |}{col 14}{res}{space 2}  2.24672{col 26}{space 2} .1921498{col 37}{space 1}   11.69{col 46}{space 3}0.000{col 54}{space 4} 1.864101{col 67}{space 3} 2.629339
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 2.306285{col 26}{space 2} .0974745{col 37}{space 1}   23.66{col 46}{space 3}0.000{col 54}{space 4} 2.112189{col 67}{space 3} 2.500382
{txt}{space 8}521  {c |}{col 14}{res}{space 2}  .821607{col 26}{space 2} .2661852{col 37}{space 1}    3.09{col 46}{space 3}0.003{col 54}{space 4} .2915645{col 67}{space 3} 1.351649
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 1.216484{col 26}{space 2} .1962031{col 37}{space 1}    6.20{col 46}{space 3}0.000{col 54}{space 4} .8257935{col 67}{space 3} 1.607174
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.711605{col 26}{space 2} .7878538{col 37}{space 1}    2.17{col 46}{space 3}0.033{col 54}{space 4} .1427874{col 67}{space 3} 3.280422
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.585183{col 26}{space 2} .1982809{col 37}{space 1}    7.99{col 46}{space 3}0.000{col 54}{space 4} 1.190355{col 67}{space 3} 1.980011
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .7465796{col 26}{space 2} .5527288{col 37}{space 1}    1.35{col 46}{space 3}0.181{col 54}{space 4}-.3540441{col 67}{space 3} 1.847203
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.265191{col 26}{space 2} .2646371{col 37}{space 1}    4.78{col 46}{space 3}0.000{col 54}{space 4} .7382313{col 67}{space 3} 1.792151
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0609721{col 26}{space 2} .1265831{col 37}{space 1}    0.48{col 46}{space 3}0.631{col 54}{space 4} -.191087{col 67}{space 3} .3130311
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,149
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0225
                                                {txt}Root MSE          =    {res} 3.4802

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx_n)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}        COM8{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} -.082373{col 26}{space 2} .1940784{col 37}{space 1}   -0.42{col 46}{space 3}0.672{col 54}{space 4} -.467886{col 67}{space 3} .3031399
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}-.1350744{col 26}{space 2} .1753574{col 37}{space 1}   -0.77{col 46}{space 3}0.443{col 54}{space 4}-.4834003{col 67}{space 3} .2132514
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .3394134{col 26}{space 2} .4576773{col 37}{space 1}    0.74{col 46}{space 3}0.460{col 54}{space 4}-.5697064{col 67}{space 3} 1.248533
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .5156854{col 26}{space 2} .2996299{col 37}{space 1}    1.72{col 46}{space 3}0.089{col 54}{space 4}-.0794926{col 67}{space 3} 1.110863
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 1.672049{col 26}{space 2} 1.791705{col 37}{space 1}    0.93{col 46}{space 3}0.353{col 54}{space 4}-1.886953{col 67}{space 3} 5.231052
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .7731392{col 26}{space 2} .7768434{col 37}{space 1}    1.00{col 46}{space 3}0.322{col 54}{space 4}-.7699647{col 67}{space 3} 2.316243
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .2167702{col 26}{space 2}   .29685{col 37}{space 1}    0.73{col 46}{space 3}0.467{col 54}{space 4} -.372886{col 67}{space 3} .8064263
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .4373621{col 26}{space 2} .5155117{col 37}{space 1}    0.85{col 46}{space 3}0.398{col 54}{space 4}-.5866386{col 67}{space 3} 1.461363
{txt}{space 8}311  {c |}{col 14}{res}{space 2}-.1152052{col 26}{space 2} .3039181{col 37}{space 1}   -0.38{col 46}{space 3}0.706{col 54}{space 4}-.7189013{col 67}{space 3} .4884908
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .5762558{col 26}{space 2} .2325041{col 37}{space 1}    2.48{col 46}{space 3}0.015{col 54}{space 4}  .114415{col 67}{space 3} 1.038097
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .3525724{col 26}{space 2} .1893144{col 37}{space 1}    1.86{col 46}{space 3}0.066{col 54}{space 4}-.0234773{col 67}{space 3} .7286221
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 1.446326{col 26}{space 2} 1.210507{col 37}{space 1}    1.19{col 46}{space 3}0.235{col 54}{space 4}-.9581976{col 67}{space 3}  3.85085
{txt}{space 8}411  {c |}{col 14}{res}{space 2}  .330282{col 26}{space 2}  .409003{col 37}{space 1}    0.81{col 46}{space 3}0.421{col 54}{space 4}-.4821522{col 67}{space 3} 1.142716
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .2937579{col 26}{space 2} .5001212{col 37}{space 1}    0.59{col 46}{space 3}0.558{col 54}{space 4}-.6996714{col 67}{space 3} 1.287187
{txt}{space 8}421  {c |}{col 14}{res}{space 2}-.4017679{col 26}{space 2} .1945738{col 37}{space 1}   -2.06{col 46}{space 3}0.042{col 54}{space 4} -.788265{col 67}{space 3}-.0152709
{txt}{space 8}422  {c |}{col 14}{res}{space 2}-.2144634{col 26}{space 2}  .216701{col 37}{space 1}   -0.99{col 46}{space 3}0.325{col 54}{space 4}-.6449132{col 67}{space 3} .2159864
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .6436544{col 26}{space 2} .3903191{col 37}{space 1}    1.65{col 46}{space 3}0.103{col 54}{space 4}-.1316665{col 67}{space 3} 1.418975
{txt}{space 8}512  {c |}{col 14}{res}{space 2} .1807551{col 26}{space 2} .3977661{col 37}{space 1}    0.45{col 46}{space 3}0.651{col 54}{space 4}-.6093583{col 67}{space 3} .9708685
{txt}{space 8}521  {c |}{col 14}{res}{space 2}-.6785344{col 26}{space 2} .1979663{col 37}{space 1}   -3.43{col 46}{space 3}0.001{col 54}{space 4} -1.07177{col 67}{space 3}-.2852987
{txt}{space 8}522  {c |}{col 14}{res}{space 2}-.4021839{col 26}{space 2} .2218545{col 37}{space 1}   -1.81{col 46}{space 3}0.073{col 54}{space 4}-.8428707{col 67}{space 3} .0385029
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.6032029{col 26}{space 2} .1933763{col 37}{space 1}   -3.12{col 46}{space 3}0.002{col 54}{space 4}-.9873211{col 67}{space 3}-.2190847
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .4087487{col 26}{space 2} .3893222{col 37}{space 1}    1.05{col 46}{space 3}0.297{col 54}{space 4}-.3645919{col 67}{space 3} 1.182089
{txt}{space 8}621  {c |}{col 14}{res}{space 2}  -.62621{col 26}{space 2} .1856045{col 37}{space 1}   -3.37{col 46}{space 3}0.001{col 54}{space 4}-.9948906{col 67}{space 3}-.2575293
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .2970269{col 26}{space 2} .5077194{col 37}{space 1}    0.59{col 46}{space 3}0.560{col 54}{space 4}-.7114953{col 67}{space 3} 1.305549
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .9267411{col 26}{space 2} .1753574{col 37}{space 1}    5.28{col 46}{space 3}0.000{col 54}{space 4} .5784153{col 67}{space 3} 1.275067
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     1,207
                                                {txt}{help j_robustsingular:F(23, 77) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0711
                                                {txt}Root MSE          =    {res}  .8643

{txt}{ralign 78:(Std. Err. adjusted for {res:78} clusters in idx_n)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}index_HH_c~m{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .0704076{col 26}{space 2} .0826914{col 37}{space 1}    0.85{col 46}{space 3}0.397{col 54}{space 4} -.094252{col 67}{space 3} .2350672
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} -.055351{col 26}{space 2} .0785524{col 37}{space 1}   -0.70{col 46}{space 3}0.483{col 54}{space 4}-.2117689{col 67}{space 3} .1010669
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .6957739{col 26}{space 2} .0707541{col 37}{space 1}    9.83{col 46}{space 3}0.000{col 54}{space 4} .5548844{col 67}{space 3} .8366634
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .8127161{col 26}{space 2} .1802013{col 37}{space 1}    4.51{col 46}{space 3}0.000{col 54}{space 4} .4538895{col 67}{space 3} 1.171543
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .4996762{col 26}{space 2} .3306624{col 37}{space 1}    1.51{col 46}{space 3}0.135{col 54}{space 4}-.1587568{col 67}{space 3} 1.158109
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .3564701{col 26}{space 2} .1901555{col 37}{space 1}    1.87{col 46}{space 3}0.065{col 54}{space 4}-.0221778{col 67}{space 3} .7351181
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .4969672{col 26}{space 2} .2197564{col 37}{space 1}    2.26{col 46}{space 3}0.027{col 54}{space 4} .0593762{col 67}{space 3} .9345581
{txt}{space 8}222  {c |}{col 14}{res}{space 2}  .675006{col 26}{space 2} .2619348{col 37}{space 1}    2.58{col 46}{space 3}0.012{col 54}{space 4} .1534272{col 67}{space 3} 1.196585
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .1215496{col 26}{space 2} .1837277{col 37}{space 1}    0.66{col 46}{space 3}0.510{col 54}{space 4} -.244299{col 67}{space 3} .4873981
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .7656771{col 26}{space 2} .1066372{col 37}{space 1}    7.18{col 46}{space 3}0.000{col 54}{space 4} .5533354{col 67}{space 3} .9780188
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .6487949{col 26}{space 2} .1077321{col 37}{space 1}    6.02{col 46}{space 3}0.000{col 54}{space 4} .4342728{col 67}{space 3}  .863317
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 1.117599{col 26}{space 2} .4671138{col 37}{space 1}    2.39{col 46}{space 3}0.019{col 54}{space 4} .1874568{col 67}{space 3} 2.047742
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .8506997{col 26}{space 2} .1265183{col 37}{space 1}    6.72{col 46}{space 3}0.000{col 54}{space 4} .5987696{col 67}{space 3}  1.10263
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .8432514{col 26}{space 2} .1626964{col 37}{space 1}    5.18{col 46}{space 3}0.000{col 54}{space 4} .5192815{col 67}{space 3} 1.167221
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .5838529{col 26}{space 2} .1172869{col 37}{space 1}    4.98{col 46}{space 3}0.000{col 54}{space 4} .3503047{col 67}{space 3}  .817401
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .5200205{col 26}{space 2} .0627656{col 37}{space 1}    8.29{col 46}{space 3}0.000{col 54}{space 4} .3950382{col 67}{space 3} .6450028
{txt}{space 8}511  {c |}{col 14}{res}{space 2}  1.13387{col 26}{space 2} .1160657{col 37}{space 1}    9.77{col 46}{space 3}0.000{col 54}{space 4} .9027538{col 67}{space 3} 1.364987
{txt}{space 8}512  {c |}{col 14}{res}{space 2}  .855121{col 26}{space 2}  .131754{col 37}{space 1}    6.49{col 46}{space 3}0.000{col 54}{space 4} .5927653{col 67}{space 3} 1.117477
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .2241487{col 26}{space 2} .0916339{col 37}{space 1}    2.45{col 46}{space 3}0.017{col 54}{space 4} .0416822{col 67}{space 3} .4066151
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .5212512{col 26}{space 2} .1046913{col 37}{space 1}    4.98{col 46}{space 3}0.000{col 54}{space 4} .3127843{col 67}{space 3} .7297182
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .2099497{col 26}{space 2} .0733106{col 37}{space 1}    2.86{col 46}{space 3}0.005{col 54}{space 4} .0639697{col 67}{space 3} .3559296
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .6554661{col 26}{space 2} .1051402{col 37}{space 1}    6.23{col 46}{space 3}0.000{col 54}{space 4} .4461052{col 67}{space 3} .8648269
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .2635233{col 26}{space 2} .1042912{col 37}{space 1}    2.53{col 46}{space 3}0.014{col 54}{space 4}  .055853{col 67}{space 3} .4711936
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .7388562{col 26}{space 2} .1964882{col 37}{space 1}    3.76{col 46}{space 3}0.000{col 54}{space 4} .3475982{col 67}{space 3} 1.130114
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.4171794{col 26}{space 2} .0785524{col 37}{space 1}   -5.31{col 46}{space 3}0.000{col 54}{space 4}-.5735973{col 67}{space 3}-.2607615
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. quietly {c -(}
{txt}
{com}. 
. * Strata table
. frmttable using MDE.doc, statmat(A) sdec(4) title("Communication") ///
> ctitle("","MDE","% of mean","# of sd's.") ///
> rtitle("HH info sales"\"HH info activities"\"HH level index") replace
{res}
{txt}{center:Communication}
{txt}{center:{hline 53}}
{center:{txt}{lalign 20:}{txt}{center 8:MDE}{txt}{center 11:% of mean}{txt}{center 12:# of sd's.}}
{txt}{center:{hline 53}}
{center:{txt}{lalign 20:HH info sales}{res}{center 8:0.3855}{res}{center 11:0.2815}{res}{center 12:0.2203}}
{center:{txt}{lalign 20:HH info activities}{res}{center 8:0.5496}{res}{center 11:0.5005}{res}{center 12:0.1570}}
{center:{txt}{lalign 20:HH level index}{res}{center 8:0.2346}{res}{center 11:}{res}{center 12:0.2643}}
{txt}{center:{hline 53}}


{com}. 
. 
. * Goat Sales
. 
. ** HH vars
. gl hh_goatsales LS8 LS9 co_opgoatno co_opsalevalue ///
>                                 net_goat_income index_HH_goatsales ///
>                                 visits_sale time_passed transp_cost index_salecost ///
> 
{txt}
{com}. 
. 
. ** HH vars
. local listsize : list sizeof global(hh_goatsales)
{txt}
{com}. tokenize $hh_goatsales
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}. 
.         reg ``i'' r_treat i.strata, cluster(idx)
{txt}  3{com}.         
.         quietly {c -(}
{txt}  4{com}.                 ereturn list
{txt}  5{com}.                 scalar t_a = invttail(`e(df_r)',0.025) // alpha t-value
{txt}  6{com}.                 scalar t_b = invttail(`e(df_r)',0.2) // beta t-value
{txt}  7{com}.                 scalar mde_``i'' = (t_a + t_b)*_se[r_treat]
{txt}  8{com}.                 
.         * Calculate MDE as % of mean & # of standard deviations
.                 sum ``i''
{txt}  9{com}.                 scalar mean_``i'' = mde_``i'' / r(mean) // % of treatment mean
{txt} 10{com}.                 scalar sd_``i'' = mde_``i'' / r(sd)  // # of treatment sd's
{txt} 11{com}. 
.         * matrix for table
.                 matrix mat_`i' = (mde_``i'',mean_``i'',sd_``i'')
{txt} 12{com}.                 {c )-}
{txt} 13{com}. {c )-}

{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0452
                                                {txt}Root MSE          =    {res} 1.8403

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}         LS8{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .1575913{col 26}{space 2}  .107217{col 37}{space 1}    1.47{col 46}{space 3}0.145{col 54}{space 4}-.0553821{col 67}{space 3} .3705648
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}  .599629{col 26}{space 2} .1180027{col 37}{space 1}    5.08{col 46}{space 3}0.000{col 54}{space 4} .3652311{col 67}{space 3} .8340269
{txt}{space 8}121  {c |}{col 14}{res}{space 2}-.0833333{col 26}{space 2} .1050744{col 37}{space 1}   -0.79{col 46}{space 3}0.430{col 54}{space 4}-.2920508{col 67}{space 3} .1253841
{txt}{space 8}122  {c |}{col 14}{res}{space 2}-.0532591{col 26}{space 2} .1349007{col 37}{space 1}   -0.39{col 46}{space 3}0.694{col 54}{space 4}-.3212227{col 67}{space 3} .2147045
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .1998763{col 26}{space 2} .1309098{col 37}{space 1}    1.53{col 46}{space 3}0.130{col 54}{space 4}  -.06016{col 67}{space 3} .4599126
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .3695681{col 26}{space 2} .1081969{col 37}{space 1}    3.42{col 46}{space 3}0.001{col 54}{space 4} .1546483{col 67}{space 3} .5844879
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .3333333{col 26}{space 2} .1791373{col 37}{space 1}    1.86{col 46}{space 3}0.066{col 54}{space 4}-.0225009{col 67}{space 3} .6891675
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .2708333{col 26}{space 2} .1304524{col 37}{space 1}    2.08{col 46}{space 3}0.041{col 54}{space 4} .0117057{col 67}{space 3} .5299609
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .8634075{col 26}{space 2} .5137321{col 37}{space 1}    1.68{col 46}{space 3}0.096{col 54}{space 4}-.1570581{col 67}{space 3} 1.883873
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 1.189013{col 26}{space 2} .5404045{col 37}{space 1}    2.20{col 46}{space 3}0.030{col 54}{space 4} .1155653{col 67}{space 3}  2.26246
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .9822837{col 26}{space 2} .3526923{col 37}{space 1}    2.79{col 46}{space 3}0.007{col 54}{space 4} .2817038{col 67}{space 3} 1.682864
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .9806792{col 26}{space 2}  .148343{col 37}{space 1}    6.61{col 46}{space 3}0.000{col 54}{space 4}  .686014{col 67}{space 3} 1.275344
{txt}{space 8}411  {c |}{col 14}{res}{space 2}    .1875{col 26}{space 2} .1351683{col 37}{space 1}    1.39{col 46}{space 3}0.169{col 54}{space 4}-.0809951{col 67}{space 3} .4559951
{txt}{space 8}412  {c |}{col 14}{res}{space 2}   .15625{col 26}{space 2} .1735286{col 37}{space 1}    0.90{col 46}{space 3}0.370{col 54}{space 4}-.1884433{col 67}{space 3} .5009433
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .5208333{col 26}{space 2} .2906373{col 37}{space 1}    1.79{col 46}{space 3}0.076{col 54}{space 4} -.056482{col 67}{space 3} 1.098149
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .2449258{col 26}{space 2} .1607659{col 37}{space 1}    1.52{col 46}{space 3}0.131{col 54}{space 4}-.0744159{col 67}{space 3} .5642675
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .5729167{col 26}{space 2} .2379165{col 37}{space 1}    2.41{col 46}{space 3}0.018{col 54}{space 4} .1003247{col 67}{space 3} 1.045509
{txt}{space 8}512  {c |}{col 14}{res}{space 2}   .40625{col 26}{space 2} .1845801{col 37}{space 1}    2.20{col 46}{space 3}0.030{col 54}{space 4} .0396043{col 67}{space 3} .7728957
{txt}{space 8}521  {c |}{col 14}{res}{space 2}   .28125{col 26}{space 2} .2306551{col 37}{space 1}    1.22{col 46}{space 3}0.226{col 54}{space 4}-.1769181{col 67}{space 3} .7394181
{txt}{space 8}522  {c |}{col 14}{res}{space 2}    .3125{col 26}{space 2} .2151784{col 37}{space 1}    1.45{col 46}{space 3}0.150{col 54}{space 4}-.1149255{col 67}{space 3} .7399255
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.114583{col 26}{space 2} .2132288{col 37}{space 1}    5.23{col 46}{space 3}0.000{col 54}{space 4} .6910306{col 67}{space 3} 1.538136
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.135417{col 26}{space 2} .1919274{col 37}{space 1}    5.92{col 46}{space 3}0.000{col 54}{space 4} .7541765{col 67}{space 3} 1.516657
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .6449258{col 26}{space 2} .1621358{col 37}{space 1}    3.98{col 46}{space 3}0.000{col 54}{space 4} .3228629{col 67}{space 3} .9669887
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.130074{col 26}{space 2} .1984891{col 37}{space 1}    5.69{col 46}{space 3}0.000{col 54}{space 4} .7358001{col 67}{space 3} 1.524348
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  .525371{col 26}{space 2} .1180027{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .2909731{col 67}{space 3} .7597689
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0579
                                                {txt}Root MSE          =    {res} 147.06

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}         LS9{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} 15.29829{col 26}{space 2} 8.015427{col 37}{space 1}    1.91{col 46}{space 3}0.059{col 54}{space 4}-.6233705{col 67}{space 3} 31.21995
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} 69.78054{col 26}{space 2} 9.799225{col 37}{space 1}    7.12{col 46}{space 3}0.000{col 54}{space 4} 50.31558{col 67}{space 3}  89.2455
{txt}{space 8}121  {c |}{col 14}{res}{space 2}-3.498387{col 26}{space 2} 10.24745{col 37}{space 1}   -0.34{col 46}{space 3}0.734{col 54}{space 4}-23.85368{col 67}{space 3} 16.85691
{txt}{space 8}122  {c |}{col 14}{res}{space 2}-.0060695{col 26}{space 2} 10.31884{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-20.50317{col 67}{space 3} 20.49103
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 30.51236{col 26}{space 2} 10.41717{col 37}{space 1}    2.93{col 46}{space 3}0.004{col 54}{space 4} 9.819924{col 67}{space 3} 51.20479
{txt}{space 8}212  {c |}{col 14}{res}{space 2}  52.1223{col 26}{space 2} 13.01421{col 37}{space 1}    4.01{col 46}{space 3}0.000{col 54}{space 4} 26.27117{col 67}{space 3} 77.97344
{txt}{space 8}221  {c |}{col 14}{res}{space 2} 31.02678{col 26}{space 2} 14.31814{col 37}{space 1}    2.17{col 46}{space 3}0.033{col 54}{space 4} 2.585549{col 67}{space 3} 59.46801
{txt}{space 8}222  {c |}{col 14}{res}{space 2} 33.71179{col 26}{space 2} 11.36328{col 37}{space 1}    2.97{col 46}{space 3}0.004{col 54}{space 4} 11.14002{col 67}{space 3} 56.28356
{txt}{space 8}311  {c |}{col 14}{res}{space 2} 98.12257{col 26}{space 2} 41.74106{col 37}{space 1}    2.35{col 46}{space 3}0.021{col 54}{space 4} 15.20909{col 67}{space 3}  181.036
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 92.01724{col 26}{space 2}  31.0947{col 37}{space 1}    2.96{col 46}{space 3}0.004{col 54}{space 4} 30.25144{col 67}{space 3}  153.783
{txt}{space 8}321  {c |}{col 14}{res}{space 2} 96.53453{col 26}{space 2} 25.44824{col 37}{space 1}    3.79{col 46}{space 3}0.000{col 54}{space 4} 45.98472{col 67}{space 3} 147.0843
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 87.05555{col 26}{space 2} 9.189435{col 37}{space 1}    9.47{col 46}{space 3}0.000{col 54}{space 4} 68.80187{col 67}{space 3} 105.3092
{txt}{space 8}411  {c |}{col 14}{res}{space 2} 8.638395{col 26}{space 2} 10.70679{col 37}{space 1}    0.81{col 46}{space 3}0.422{col 54}{space 4}-12.62934{col 67}{space 3} 29.90612
{txt}{space 8}412  {c |}{col 14}{res}{space 2} 15.91242{col 26}{space 2} 12.33226{col 37}{space 1}    1.29{col 46}{space 3}0.200{col 54}{space 4}-8.584096{col 67}{space 3} 40.40893
{txt}{space 8}421  {c |}{col 14}{res}{space 2} 34.33658{col 26}{space 2} 18.36642{col 37}{space 1}    1.87{col 46}{space 3}0.065{col 54}{space 4}-2.146064{col 67}{space 3} 70.81922
{txt}{space 8}422  {c |}{col 14}{res}{space 2}  13.4641{col 26}{space 2} 12.01379{col 37}{space 1}    1.12{col 46}{space 3}0.265{col 54}{space 4}-10.39983{col 67}{space 3} 37.32802
{txt}{space 8}511  {c |}{col 14}{res}{space 2} 32.14264{col 26}{space 2} 15.79219{col 37}{space 1}    2.04{col 46}{space 3}0.045{col 54}{space 4} .7734019{col 67}{space 3} 63.51189
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 39.14225{col 26}{space 2} 14.59054{col 37}{space 1}    2.68{col 46}{space 3}0.009{col 54}{space 4} 10.15993{col 67}{space 3} 68.12458
{txt}{space 8}521  {c |}{col 14}{res}{space 2} 24.93421{col 26}{space 2} 18.68327{col 37}{space 1}    1.33{col 46}{space 3}0.185{col 54}{space 4}-12.17781{col 67}{space 3} 62.04622
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 30.49127{col 26}{space 2} 17.48592{col 37}{space 1}    1.74{col 46}{space 3}0.085{col 54}{space 4}-4.242354{col 67}{space 3} 65.22489
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 81.53127{col 26}{space 2} 18.35141{col 37}{space 1}    4.44{col 46}{space 3}0.000{col 54}{space 4} 45.07845{col 67}{space 3} 117.9841
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 104.0187{col 26}{space 2} 11.70581{col 37}{space 1}    8.89{col 46}{space 3}0.000{col 54}{space 4} 80.76655{col 67}{space 3} 127.2709
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 69.70847{col 26}{space 2} 16.20712{col 37}{space 1}    4.30{col 46}{space 3}0.000{col 54}{space 4} 37.51501{col 67}{space 3} 101.9019
{txt}{space 8}622  {c |}{col 14}{res}{space 2}  99.0181{col 26}{space 2} 13.35045{col 37}{space 1}    7.42{col 46}{space 3}0.000{col 54}{space 4} 72.49906{col 67}{space 3} 125.5371
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.39696{col 26}{space 2} 9.799225{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4}   16.932{col 67}{space 3} 55.86192
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0802
                                                {txt}Root MSE          =    {res}   .896

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1} co_opgoatno{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .1101027{col 26}{space 2} .0575003{col 37}{space 1}    1.91{col 46}{space 3}0.059{col 54}{space 4}-.0041146{col 67}{space 3}   .22432
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .0133847{col 26}{space 2} .0410578{col 37}{space 1}    0.33{col 46}{space 3}0.745{col 54}{space 4}-.0681715{col 67}{space 3} .0949409
{txt}{space 8}121  {c |}{col 14}{res}{space 2}-.0208333{col 26}{space 2}  .039112{col 37}{space 1}   -0.53{col 46}{space 3}0.596{col 54}{space 4}-.0985245{col 67}{space 3} .0568578
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .0889897{col 26}{space 2}  .077463{col 37}{space 1}    1.15{col 46}{space 3}0.254{col 54}{space 4} -.064881{col 67}{space 3} .2428604
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .0044616{col 26}{space 2} .0561605{col 37}{space 1}    0.08{col 46}{space 3}0.937{col 54}{space 4}-.1070944{col 67}{space 3} .1160175
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .0024829{col 26}{space 2} .0350235{col 37}{space 1}    0.07{col 46}{space 3}0.944{col 54}{space 4} -.067087{col 67}{space 3} .0720527
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .1041667{col 26}{space 2} .0958717{col 37}{space 1}    1.09{col 46}{space 3}0.280{col 54}{space 4}-.0862707{col 67}{space 3}  .294604
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .1354167{col 26}{space 2} .0860183{col 37}{space 1}    1.57{col 46}{space 3}0.119{col 54}{space 4}-.0354482{col 67}{space 3} .3062815
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .0139897{col 26}{space 2} .0423226{col 37}{space 1}    0.33{col 46}{space 3}0.742{col 54}{space 4}-.0700789{col 67}{space 3} .0980583
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .4538718{col 26}{space 2} .2075617{col 37}{space 1}    2.19{col 46}{space 3}0.031{col 54}{space 4}  .041576{col 67}{space 3} .8661676
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .2405727{col 26}{space 2} .1066977{col 37}{space 1}    2.25{col 46}{space 3}0.027{col 54}{space 4} .0286309{col 67}{space 3} .4525145
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .4955384{col 26}{space 2} .1724207{col 37}{space 1}    2.87{col 46}{space 3}0.005{col 54}{space 4} .1530459{col 67}{space 3}  .838031
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .1354167{col 26}{space 2} .0546242{col 37}{space 1}    2.48{col 46}{space 3}0.015{col 54}{space 4} .0269124{col 67}{space 3} .2439209
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .1666667{col 26}{space 2} .1313309{col 37}{space 1}    1.27{col 46}{space 3}0.208{col 54}{space 4}-.0942059{col 67}{space 3} .4275393
{txt}{space 8}421  {c |}{col 14}{res}{space 2}   .15625{col 26}{space 2} .1042357{col 37}{space 1}    1.50{col 46}{space 3}0.137{col 54}{space 4}-.0508014{col 67}{space 3} .3633014
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .1026769{col 26}{space 2} .0608909{col 37}{space 1}    1.69{col 46}{space 3}0.095{col 54}{space 4}-.0182754{col 67}{space 3} .2236293
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .1354167{col 26}{space 2} .1524498{col 37}{space 1}    0.89{col 46}{space 3}0.377{col 54}{space 4}-.1674061{col 67}{space 3} .4382394
{txt}{space 8}512  {c |}{col 14}{res}{space 2} .4479167{col 26}{space 2} .2184979{col 37}{space 1}    2.05{col 46}{space 3}0.043{col 54}{space 4} .0138975{col 67}{space 3} .8819358
{txt}{space 8}521  {c |}{col 14}{res}{space 2}   .03125{col 26}{space 2} .0768849{col 37}{space 1}    0.41{col 46}{space 3}0.685{col 54}{space 4}-.1214723{col 67}{space 3} .1839723
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .0555556{col 26}{space 2} .0519816{col 37}{space 1}    1.07{col 46}{space 3}0.288{col 54}{space 4}-.0476995{col 67}{space 3} .1588106
{txt}{space 8}611  {c |}{col 14}{res}{space 2}   .21875{col 26}{space 2} .1780282{col 37}{space 1}    1.23{col 46}{space 3}0.222{col 54}{space 4}-.1348812{col 67}{space 3} .5723812
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .8645833{col 26}{space 2} .3117673{col 37}{space 1}    2.77{col 46}{space 3}0.007{col 54}{space 4} .2452958{col 67}{space 3} 1.483871
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .0193436{col 26}{space 2} .0439023{col 37}{space 1}    0.44{col 46}{space 3}0.661{col 54}{space 4} -.067863{col 67}{space 3} .1065502
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .9389897{col 26}{space 2} .3076423{col 37}{space 1}    3.05{col 46}{space 3}0.003{col 54}{space 4} .3278962{col 67}{space 3} 1.550083
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.0133847{col 26}{space 2} .0410578{col 37}{space 1}   -0.33{col 46}{space 3}0.745{col 54}{space 4}-.0949409{col 67}{space 3} .0681715
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0700
                                                {txt}Root MSE          =    {res} 82.144

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}co_opsalev~e{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} 8.010873{col 26}{space 2} 5.100222{col 37}{space 1}    1.57{col 46}{space 3}0.120{col 54}{space 4}-2.120093{col 67}{space 3} 18.14184
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} 1.499499{col 26}{space 2}  3.16533{col 37}{space 1}    0.47{col 46}{space 3}0.637{col 54}{space 4}-4.788041{col 67}{space 3} 7.787038
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .0505313{col 26}{space 2} 2.202621{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4}-4.324705{col 67}{space 3} 4.425767
{txt}{space 8}122  {c |}{col 14}{res}{space 2} 9.464883{col 26}{space 2} 6.748976{col 37}{space 1}    1.40{col 46}{space 3}0.164{col 54}{space 4}-3.941129{col 67}{space 3} 22.87089
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 2.816708{col 26}{space 2}  5.23736{col 37}{space 1}    0.54{col 46}{space 3}0.592{col 54}{space 4}-7.586664{col 67}{space 3} 13.22008
{txt}{space 8}212  {c |}{col 14}{res}{space 2} 3.350167{col 26}{space 2} 2.781451{col 37}{space 1}    1.20{col 46}{space 3}0.232{col 54}{space 4}-2.174843{col 67}{space 3} 8.875177
{txt}{space 8}221  {c |}{col 14}{res}{space 2} 10.82318{col 26}{space 2} 9.254102{col 37}{space 1}    1.17{col 46}{space 3}0.245{col 54}{space 4}-7.558963{col 67}{space 3} 29.20531
{txt}{space 8}222  {c |}{col 14}{res}{space 2} 15.35696{col 26}{space 2} 7.975266{col 37}{space 1}    1.93{col 46}{space 3}0.057{col 54}{space 4}-.4849238{col 67}{space 3} 31.19885
{txt}{space 8}311  {c |}{col 14}{res}{space 2} 5.058475{col 26}{space 2} 4.796424{col 37}{space 1}    1.05{col 46}{space 3}0.294{col 54}{space 4}-4.469031{col 67}{space 3} 14.58598
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 43.66448{col 26}{space 2} 26.52528{col 37}{space 1}    1.65{col 46}{space 3}0.103{col 54}{space 4}-9.024739{col 67}{space 3}  96.3537
{txt}{space 8}321  {c |}{col 14}{res}{space 2} 26.18712{col 26}{space 2} 11.64538{col 37}{space 1}    2.25{col 46}{space 3}0.027{col 54}{space 4} 3.055003{col 67}{space 3} 49.31925
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 48.75404{col 26}{space 2} 11.22814{col 37}{space 1}    4.34{col 46}{space 3}0.000{col 54}{space 4} 26.45073{col 67}{space 3} 71.05736
{txt}{space 8}411  {c |}{col 14}{res}{space 2} 11.71294{col 26}{space 2} 3.829653{col 37}{space 1}    3.06{col 46}{space 3}0.003{col 54}{space 4} 4.105802{col 67}{space 3} 19.32007
{txt}{space 8}412  {c |}{col 14}{res}{space 2} 18.12071{col 26}{space 2} 12.06033{col 37}{space 1}    1.50{col 46}{space 3}0.136{col 54}{space 4}-5.835644{col 67}{space 3} 42.07707
{txt}{space 8}421  {c |}{col 14}{res}{space 2} 16.44277{col 26}{space 2} 10.00652{col 37}{space 1}    1.64{col 46}{space 3}0.104{col 54}{space 4}-3.433965{col 67}{space 3}  36.3195
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 11.57765{col 26}{space 2} 5.405079{col 37}{space 1}    2.14{col 46}{space 3}0.035{col 54}{space 4} .8411236{col 67}{space 3} 22.31418
{txt}{space 8}511  {c |}{col 14}{res}{space 2} 6.940313{col 26}{space 2} 8.468506{col 37}{space 1}    0.82{col 46}{space 3}0.415{col 54}{space 4}-9.881335{col 67}{space 3} 23.76196
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 41.46398{col 26}{space 2} 21.01202{col 37}{space 1}    1.97{col 46}{space 3}0.051{col 54}{space 4}-.2738168{col 67}{space 3} 83.20179
{txt}{space 8}521  {c |}{col 14}{res}{space 2} 2.980313{col 26}{space 2} 6.015037{col 37}{space 1}    0.50{col 46}{space 3}0.621{col 54}{space 4}-8.967819{col 67}{space 3} 14.92844
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 8.554563{col 26}{space 2} 4.943664{col 37}{space 1}    1.73{col 46}{space 3}0.087{col 54}{space 4}-1.265419{col 67}{space 3} 18.37454
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 19.43081{col 26}{space 2} 13.57887{col 37}{space 1}    1.43{col 46}{space 3}0.156{col 54}{space 4}-7.541943{col 67}{space 3} 46.40357
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 85.02656{col 26}{space 2} 29.20115{col 37}{space 1}    2.91{col 46}{space 3}0.005{col 54}{space 4} 27.02206{col 67}{space 3} 143.0311
{txt}{space 8}621  {c |}{col 14}{res}{space 2}  1.46315{col 26}{space 2} 2.965825{col 37}{space 1}    0.49{col 46}{space 3}0.623{col 54}{space 4}-4.428097{col 67}{space 3} 7.354396
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 71.49201{col 26}{space 2} 21.49028{col 37}{space 1}    3.33{col 46}{space 3}0.001{col 54}{space 4} 28.80421{col 67}{space 3} 114.1798
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-1.499499{col 26}{space 2}  3.16533{col 37}{space 1}   -0.47{col 46}{space 3}0.637{col 54}{space 4}-7.787038{col 67}{space 3} 4.788041
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0174
                                                {txt}Root MSE          =    {res} 294.38

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}net_goat_i~e{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} 33.57249{col 26}{space 2} 12.61954{col 37}{space 1}    2.66{col 46}{space 3}0.009{col 54}{space 4} 8.505323{col 67}{space 3} 58.63965
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} 56.06926{col 26}{space 2} 15.09201{col 37}{space 1}    3.72{col 46}{space 3}0.000{col 54}{space 4} 26.09085{col 67}{space 3} 86.04768
{txt}{space 8}121  {c |}{col 14}{res}{space 2} 2.490288{col 26}{space 2} 15.02946{col 37}{space 1}    0.17{col 46}{space 3}0.869{col 54}{space 4}-27.36389{col 67}{space 3} 32.34447
{txt}{space 8}122  {c |}{col 14}{res}{space 2}-11.09147{col 26}{space 2} 15.33551{col 37}{space 1}   -0.72{col 46}{space 3}0.471{col 54}{space 4}-41.55359{col 67}{space 3} 19.37064
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 29.55117{col 26}{space 2} 14.93934{col 37}{space 1}    1.98{col 46}{space 3}0.051{col 54}{space 4}-.1239911{col 67}{space 3} 59.22633
{txt}{space 8}212  {c |}{col 14}{res}{space 2} 36.13724{col 26}{space 2} 18.13186{col 37}{space 1}    1.99{col 46}{space 3}0.049{col 54}{space 4} .1205179{col 67}{space 3} 72.15396
{txt}{space 8}221  {c |}{col 14}{res}{space 2} 33.53684{col 26}{space 2} 14.75411{col 37}{space 1}    2.27{col 46}{space 3}0.025{col 54}{space 4} 4.229622{col 67}{space 3} 62.84406
{txt}{space 8}222  {c |}{col 14}{res}{space 2} 28.54059{col 26}{space 2} 18.20546{col 37}{space 1}    1.57{col 46}{space 3}0.120{col 54}{space 4}-7.622321{col 67}{space 3}  64.7035
{txt}{space 8}311  {c |}{col 14}{res}{space 2} 92.47003{col 26}{space 2} 42.37183{col 37}{space 1}    2.18{col 46}{space 3}0.032{col 54}{space 4} 8.303607{col 67}{space 3} 176.6365
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 83.16794{col 26}{space 2} 25.69895{col 37}{space 1}    3.24{col 46}{space 3}0.002{col 54}{space 4} 32.12015{col 67}{space 3} 134.2157
{txt}{space 8}321  {c |}{col 14}{res}{space 2}  16.9414{col 26}{space 2} 54.63308{col 37}{space 1}    0.31{col 46}{space 3}0.757{col 54}{space 4} -91.5805{col 67}{space 3} 125.4633
{txt}{space 8}322  {c |}{col 14}{res}{space 2} 64.65233{col 26}{space 2} 18.36026{col 37}{space 1}    3.52{col 46}{space 3}0.001{col 54}{space 4} 28.18193{col 67}{space 3} 101.1227
{txt}{space 8}411  {c |}{col 14}{res}{space 2} 4.338907{col 26}{space 2} 18.04814{col 37}{space 1}    0.24{col 46}{space 3}0.811{col 54}{space 4} -31.5115{col 67}{space 3} 40.18932
{txt}{space 8}412  {c |}{col 14}{res}{space 2} 19.77538{col 26}{space 2} 18.64186{col 37}{space 1}    1.06{col 46}{space 3}0.292{col 54}{space 4}-17.25439{col 67}{space 3} 56.80515
{txt}{space 8}421  {c |}{col 14}{res}{space 2} 32.25438{col 26}{space 2} 20.65893{col 37}{space 1}    1.56{col 46}{space 3}0.122{col 54}{space 4}-8.782043{col 67}{space 3}  73.2908
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 11.50964{col 26}{space 2} 16.28446{col 37}{space 1}    0.71{col 46}{space 3}0.482{col 54}{space 4}-20.83745{col 67}{space 3} 43.85672
{txt}{space 8}511  {c |}{col 14}{res}{space 2}-49.97301{col 26}{space 2} 70.91855{col 37}{space 1}   -0.70{col 46}{space 3}0.483{col 54}{space 4} -190.844{col 67}{space 3} 90.89799
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 36.51174{col 26}{space 2} 20.68356{col 37}{space 1}    1.77{col 46}{space 3}0.081{col 54}{space 4}-4.573608{col 67}{space 3} 77.59709
{txt}{space 8}521  {c |}{col 14}{res}{space 2} 21.96534{col 26}{space 2} 21.83682{col 37}{space 1}    1.01{col 46}{space 3}0.317{col 54}{space 4}-21.41082{col 67}{space 3} 65.34151
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 23.57715{col 26}{space 2} 26.85237{col 37}{space 1}    0.88{col 46}{space 3}0.382{col 54}{space 4}-29.76178{col 67}{space 3} 76.91608
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 64.56257{col 26}{space 2} 16.47736{col 37}{space 1}    3.92{col 46}{space 3}0.000{col 54}{space 4} 31.83232{col 67}{space 3} 97.29282
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 91.44416{col 26}{space 2} 14.07927{col 37}{space 1}    6.49{col 46}{space 3}0.000{col 54}{space 4} 63.47742{col 67}{space 3} 119.4109
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 64.82023{col 26}{space 2}  24.8577{col 37}{space 1}    2.61{col 46}{space 3}0.011{col 54}{space 4} 15.44347{col 67}{space 3}  114.197
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 88.36558{col 26}{space 2}  16.3549{col 37}{space 1}    5.40{col 46}{space 3}0.000{col 54}{space 4} 55.87858{col 67}{space 3} 120.8526
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .3772376{col 26}{space 2} 15.09201{col 37}{space 1}    0.02{col 46}{space 3}0.980{col 54}{space 4}-29.60118{col 67}{space 3} 30.35565
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     2,448
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0780
                                                {txt}Root MSE          =    {res} .86952

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}index_HH_g~s{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .1243114{col 26}{space 2} .0514175{col 37}{space 1}    2.42{col 46}{space 3}0.018{col 54}{space 4} .0221768{col 67}{space 3}  .226446
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .2069956{col 26}{space 2} .0517176{col 37}{space 1}    4.00{col 46}{space 3}0.000{col 54}{space 4} .1042649{col 67}{space 3} .3097263
{txt}{space 8}121  {c |}{col 14}{res}{space 2}-.0276395{col 26}{space 2} .0541645{col 37}{space 1}   -0.51{col 46}{space 3}0.611{col 54}{space 4}-.1352307{col 67}{space 3} .0799517
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .0467812{col 26}{space 2} .0697464{col 37}{space 1}    0.67{col 46}{space 3}0.504{col 54}{space 4}-.0917615{col 67}{space 3} .1853238
{txt}{space 8}211  {c |}{col 14}{res}{space 2}  .083954{col 26}{space 2} .0561015{col 37}{space 1}    1.50{col 46}{space 3}0.138{col 54}{space 4}-.0274846{col 67}{space 3} .1953927
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .1386726{col 26}{space 2} .0487002{col 37}{space 1}    2.85{col 46}{space 3}0.005{col 54}{space 4} .0419357{col 67}{space 3} .2354095
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .1613016{col 26}{space 2} .0892786{col 37}{space 1}    1.81{col 46}{space 3}0.074{col 54}{space 4}-.0160394{col 67}{space 3} .3386425
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .1775976{col 26}{space 2} .0862537{col 37}{space 1}    2.06{col 46}{space 3}0.042{col 54}{space 4} .0062652{col 67}{space 3}   .34893
{txt}{space 8}311  {c |}{col 14}{res}{space 2}  .290985{col 26}{space 2} .1469514{col 37}{space 1}    1.98{col 46}{space 3}0.051{col 54}{space 4}-.0009158{col 67}{space 3} .5828859
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .5826642{col 26}{space 2} .2006832{col 37}{space 1}    2.90{col 46}{space 3}0.005{col 54}{space 4} .1840318{col 67}{space 3} .9812967
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .4153364{col 26}{space 2} .1559132{col 37}{space 1}    2.66{col 46}{space 3}0.009{col 54}{space 4} .1056339{col 67}{space 3} .7250388
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .5750341{col 26}{space 2} .1276811{col 37}{space 1}    4.50{col 46}{space 3}0.000{col 54}{space 4} .3214112{col 67}{space 3} .8286569
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .1192496{col 26}{space 2} .0543553{col 37}{space 1}    2.19{col 46}{space 3}0.031{col 54}{space 4} .0112794{col 67}{space 3} .2272197
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .1517246{col 26}{space 2} .1117903{col 37}{space 1}    1.36{col 46}{space 3}0.178{col 54}{space 4}-.0703331{col 67}{space 3} .3737823
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .2146518{col 26}{space 2} .1102326{col 37}{space 1}    1.95{col 46}{space 3}0.055{col 54}{space 4}-.0043117{col 67}{space 3} .4336153
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .1120122{col 26}{space 2} .0620404{col 37}{space 1}    1.81{col 46}{space 3}0.074{col 54}{space 4}-.0112235{col 67}{space 3} .2352479
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .1816032{col 26}{space 2} .0943545{col 37}{space 1}    1.92{col 46}{space 3}0.057{col 54}{space 4}-.0058205{col 67}{space 3} .3690269
{txt}{space 8}512  {c |}{col 14}{res}{space 2} .4012478{col 26}{space 2}  .174245{col 37}{space 1}    2.30{col 46}{space 3}0.024{col 54}{space 4} .0551314{col 67}{space 3} .7473642
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .0968412{col 26}{space 2} .1064872{col 37}{space 1}    0.91{col 46}{space 3}0.366{col 54}{space 4}-.1146824{col 67}{space 3} .3083649
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .1224861{col 26}{space 2} .0809545{col 37}{space 1}    1.51{col 46}{space 3}0.134{col 54}{space 4}-.0383201{col 67}{space 3} .2832923
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .4049019{col 26}{space 2} .0935971{col 37}{space 1}    4.33{col 46}{space 3}0.000{col 54}{space 4} .2189828{col 67}{space 3}  .590821
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .8590203{col 26}{space 2}  .205406{col 37}{space 1}    4.18{col 46}{space 3}0.000{col 54}{space 4} .4510064{col 67}{space 3} 1.267034
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .2178476{col 26}{space 2} .0501525{col 37}{space 1}    4.34{col 46}{space 3}0.000{col 54}{space 4} .1182258{col 67}{space 3} .3174693
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .9146619{col 26}{space 2} .2238826{col 37}{space 1}    4.09{col 46}{space 3}0.000{col 54}{space 4} .4699466{col 67}{space 3} 1.359377
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.4084908{col 26}{space 2} .0517176{col 37}{space 1}   -7.90{col 46}{space 3}0.000{col 54}{space 4}-.5112215{col 67}{space 3}-.3057601
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     1,276
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0766
                                                {txt}Root MSE          =    {res} .59633

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1} visits_sale{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .0846798{col 26}{space 2} .0478129{col 37}{space 1}    1.77{col 46}{space 3}0.080{col 54}{space 4}-.0102947{col 67}{space 3} .1796542
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .3300377{col 26}{space 2}  .183476{col 37}{space 1}    1.80{col 46}{space 3}0.075{col 54}{space 4}-.0344148{col 67}{space 3} .6944902
{txt}{space 8}121  {c |}{col 14}{res}{space 2}  .222883{col 26}{space 2} .2005707{col 37}{space 1}    1.11{col 46}{space 3}0.269{col 54}{space 4} -.175526{col 67}{space 3}  .621292
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .5128694{col 26}{space 2} .2060077{col 37}{space 1}    2.49{col 46}{space 3}0.015{col 54}{space 4} .1036604{col 67}{space 3} .9220784
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .6386763{col 26}{space 2} .1968385{col 37}{space 1}    3.24{col 46}{space 3}0.002{col 54}{space 4} .2476809{col 67}{space 3} 1.029672
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .3158164{col 26}{space 2}  .222989{col 37}{space 1}    1.42{col 46}{space 3}0.160{col 54}{space 4}-.1271239{col 67}{space 3} .7587567
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .4241597{col 26}{space 2} .2051565{col 37}{space 1}    2.07{col 46}{space 3}0.042{col 54}{space 4} .0166415{col 67}{space 3} .8316779
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .4250695{col 26}{space 2} .2076482{col 37}{space 1}    2.05{col 46}{space 3}0.044{col 54}{space 4} .0126018{col 67}{space 3} .8375372
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .5383485{col 26}{space 2} .2396596{col 37}{space 1}    2.25{col 46}{space 3}0.027{col 54}{space 4} .0622941{col 67}{space 3} 1.014403
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .2206324{col 26}{space 2} .2400261{col 37}{space 1}    0.92{col 46}{space 3}0.360{col 54}{space 4}-.2561501{col 67}{space 3} .6974148
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .5392349{col 26}{space 2} .2006566{col 37}{space 1}    2.69{col 46}{space 3}0.009{col 54}{space 4} .1406551{col 67}{space 3} .9378146
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .2538974{col 26}{space 2} .3617727{col 37}{space 1}    0.70{col 46}{space 3}0.485{col 54}{space 4}-.4647197{col 67}{space 3} .9725145
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .6312014{col 26}{space 2} .2149469{col 37}{space 1}    2.94{col 46}{space 3}0.004{col 54}{space 4} .2042357{col 67}{space 3} 1.058167
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .7033933{col 26}{space 2} .2035253{col 37}{space 1}    3.46{col 46}{space 3}0.001{col 54}{space 4} .2991154{col 67}{space 3} 1.107671
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .3974207{col 26}{space 2}  .260793{col 37}{space 1}    1.52{col 46}{space 3}0.131{col 54}{space 4}-.1206126{col 67}{space 3}  .915454
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .4535283{col 26}{space 2} .2151796{col 37}{space 1}    2.11{col 46}{space 3}0.038{col 54}{space 4} .0261005{col 67}{space 3} .8809561
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .5352708{col 26}{space 2} .2113828{col 37}{space 1}    2.53{col 46}{space 3}0.013{col 54}{space 4} .1153848{col 67}{space 3} .9551569
{txt}{space 8}512  {c |}{col 14}{res}{space 2} .7075008{col 26}{space 2} .1904833{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} .3291291{col 67}{space 3} 1.085872
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .6086876{col 26}{space 2} .1991188{col 37}{space 1}    3.06{col 46}{space 3}0.003{col 54}{space 4} .2131625{col 67}{space 3} 1.004213
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .5334891{col 26}{space 2} .2050184{col 37}{space 1}    2.60{col 46}{space 3}0.011{col 54}{space 4} .1262452{col 67}{space 3}  .940733
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .6495701{col 26}{space 2} .2197525{col 37}{space 1}    2.96{col 46}{space 3}0.004{col 54}{space 4} .2130588{col 67}{space 3} 1.086081
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .7593768{col 26}{space 2} .1906195{col 37}{space 1}    3.98{col 46}{space 3}0.000{col 54}{space 4} .3807345{col 67}{space 3} 1.138019
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .6240088{col 26}{space 2}  .216339{col 37}{space 1}    2.88{col 46}{space 3}0.005{col 54}{space 4} .1942779{col 67}{space 3}  1.05374
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .5693496{col 26}{space 2}  .210404{col 37}{space 1}    2.71{col 46}{space 3}0.008{col 54}{space 4}  .151408{col 67}{space 3} .9872913
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.8485562{col 26}{space 2}  .183476{col 37}{space 1}   -4.62{col 46}{space 3}0.000{col 54}{space 4}-1.213009{col 67}{space 3}-.4841037
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     1,276
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0449
                                                {txt}Root MSE          =    {res} 2.1353

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1} time_passed{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .2807918{col 26}{space 2} .1397421{col 37}{space 1}    2.01{col 46}{space 3}0.047{col 54}{space 4} .0032112{col 67}{space 3} .5583724
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}  .847265{col 26}{space 2} .3805996{col 37}{space 1}    2.23{col 46}{space 3}0.028{col 54}{space 4} .0912507{col 67}{space 3} 1.603279
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .3179802{col 26}{space 2} .4282558{col 37}{space 1}    0.74{col 46}{space 3}0.460{col 54}{space 4}-.5326973{col 67}{space 3} 1.168658
{txt}{space 8}122  {c |}{col 14}{res}{space 2}  .859473{col 26}{space 2} .3912407{col 37}{space 1}    2.20{col 46}{space 3}0.031{col 54}{space 4} .0823214{col 67}{space 3} 1.636625
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 1.009329{col 26}{space 2} .4024017{col 37}{space 1}    2.51{col 46}{space 3}0.014{col 54}{space 4} .2100076{col 67}{space 3} 1.808651
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .1796964{col 26}{space 2} .6272034{col 37}{space 1}    0.29{col 46}{space 3}0.775{col 54}{space 4}-1.066166{col 67}{space 3} 1.425559
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .5029142{col 26}{space 2} .4056267{col 37}{space 1}    1.24{col 46}{space 3}0.218{col 54}{space 4}-.3028133{col 67}{space 3} 1.308642
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .7467317{col 26}{space 2} .4320305{col 37}{space 1}    1.73{col 46}{space 3}0.087{col 54}{space 4}-.1114439{col 67}{space 3} 1.604907
{txt}{space 8}311  {c |}{col 14}{res}{space 2}  .664958{col 26}{space 2} .5351878{col 37}{space 1}    1.24{col 46}{space 3}0.217{col 54}{space 4}-.3981269{col 67}{space 3} 1.728043
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .2481568{col 26}{space 2} .5231824{col 37}{space 1}    0.47{col 46}{space 3}0.636{col 54}{space 4}-.7910807{col 67}{space 3} 1.287394
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .7243018{col 26}{space 2}  .411688{col 37}{space 1}    1.76{col 46}{space 3}0.082{col 54}{space 4}-.0934657{col 67}{space 3} 1.542069
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .1688416{col 26}{space 2} .6826958{col 37}{space 1}    0.25{col 46}{space 3}0.805{col 54}{space 4} -1.18725{col 67}{space 3} 1.524933
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .7593047{col 26}{space 2} .4833185{col 37}{space 1}    1.57{col 46}{space 3}0.120{col 54}{space 4}-.2007482{col 67}{space 3} 1.719358
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .5716741{col 26}{space 2} .5662715{col 37}{space 1}    1.01{col 46}{space 3}0.315{col 54}{space 4}-.5531547{col 67}{space 3} 1.696503
{txt}{space 8}421  {c |}{col 14}{res}{space 2}-.7453492{col 26}{space 2} .8670551{col 37}{space 1}   -0.86{col 46}{space 3}0.392{col 54}{space 4}-2.467648{col 67}{space 3} .9769491
{txt}{space 8}422  {c |}{col 14}{res}{space 2}  .220033{col 26}{space 2} .4722931{col 37}{space 1}    0.47{col 46}{space 3}0.642{col 54}{space 4}-.7181192{col 67}{space 3} 1.158185
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .5445809{col 26}{space 2} .4822553{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.4133599{col 67}{space 3} 1.502522
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 1.106158{col 26}{space 2} .3969473{col 37}{space 1}    2.79{col 46}{space 3}0.006{col 54}{space 4} .3176707{col 67}{space 3} 1.894645
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .5483077{col 26}{space 2} .5632352{col 37}{space 1}    0.97{col 46}{space 3}0.333{col 54}{space 4}-.5704899{col 67}{space 3} 1.667105
{txt}{space 8}522  {c |}{col 14}{res}{space 2}-.1971713{col 26}{space 2} .6143153{col 37}{space 1}   -0.32{col 46}{space 3}0.749{col 54}{space 4}-1.417433{col 67}{space 3} 1.023091
{txt}{space 8}611  {c |}{col 14}{res}{space 2}  .690223{col 26}{space 2} .3999872{col 37}{space 1}    1.73{col 46}{space 3}0.088{col 54}{space 4}-.1043025{col 67}{space 3} 1.484748
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .8682113{col 26}{space 2} .4216768{col 37}{space 1}    2.06{col 46}{space 3}0.042{col 54}{space 4} .0306021{col 67}{space 3}  1.70582
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.132405{col 26}{space 2} .4161623{col 37}{space 1}    2.72{col 46}{space 3}0.008{col 54}{space 4} .3057495{col 67}{space 3}  1.95906
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .8262762{col 26}{space 2} .4183833{col 37}{space 1}    1.97{col 46}{space 3}0.051{col 54}{space 4}-.0047907{col 67}{space 3} 1.657343
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-1.458376{col 26}{space 2} .3805996{col 37}{space 1}   -3.83{col 46}{space 3}0.000{col 54}{space 4} -2.21439{col 67}{space 3}-.7023618
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     1,276
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0085
                                                {txt}Root MSE          =    {res}  6.977

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1} transp_cost{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2}  .346059{col 26}{space 2} .2051033{col 37}{space 1}    1.69{col 46}{space 3}0.095{col 54}{space 4}-.0613535{col 67}{space 3} .7534714
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}  .164378{col 26}{space 2}  .133629{col 37}{space 1}    1.23{col 46}{space 3}0.222{col 54}{space 4}-.1010596{col 67}{space 3} .4298156
{txt}{space 8}121  {c |}{col 14}{res}{space 2}-.0086515{col 26}{space 2} .1544837{col 37}{space 1}   -0.06{col 46}{space 3}0.955{col 54}{space 4}-.3155143{col 67}{space 3} .2982114
{txt}{space 8}122  {c |}{col 14}{res}{space 2} -.034328{col 26}{space 2} .1206516{col 37}{space 1}   -0.28{col 46}{space 3}0.777{col 54}{space 4}-.2739876{col 67}{space 3} .2053317
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .0346059{col 26}{space 2} .1385254{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-.2405578{col 67}{space 3} .3097696
{txt}{space 8}212  {c |}{col 14}{res}{space 2}-.0910465{col 26}{space 2} .1293718{col 37}{space 1}   -0.70{col 46}{space 3}0.483{col 54}{space 4}-.3480276{col 67}{space 3} .1659347
{txt}{space 8}221  {c |}{col 14}{res}{space 2}-.0374897{col 26}{space 2} .1312664{col 37}{space 1}   -0.29{col 46}{space 3}0.776{col 54}{space 4}-.2982343{col 67}{space 3} .2232548
{txt}{space 8}222  {c |}{col 14}{res}{space 2}-.0213122{col 26}{space 2}  .127492{col 37}{space 1}   -0.17{col 46}{space 3}0.868{col 54}{space 4}-.2745594{col 67}{space 3} .2319351
{txt}{space 8}311  {c |}{col 14}{res}{space 2}-.1842551{col 26}{space 2} .1580357{col 37}{space 1}   -1.17{col 46}{space 3}0.247{col 54}{space 4}-.4981737{col 67}{space 3} .1296634
{txt}{space 8}312  {c |}{col 14}{res}{space 2}-.1322577{col 26}{space 2} .1341838{col 37}{space 1}   -0.99{col 46}{space 3}0.327{col 54}{space 4}-.3987972{col 67}{space 3} .1342819
{txt}{space 8}321  {c |}{col 14}{res}{space 2}-2.105803{col 26}{space 2} 1.105791{col 37}{space 1}   -1.90{col 46}{space 3}0.060{col 54}{space 4}-4.302321{col 67}{space 3} .0907136
{txt}{space 8}322  {c |}{col 14}{res}{space 2}-.0766368{col 26}{space 2} .1342856{col 37}{space 1}   -0.57{col 46}{space 3}0.570{col 54}{space 4}-.3433787{col 67}{space 3} .1901051
{txt}{space 8}411  {c |}{col 14}{res}{space 2}-.0124966{col 26}{space 2} .1274408{col 37}{space 1}   -0.10{col 46}{space 3}0.922{col 54}{space 4}-.2656421{col 67}{space 3} .2406489
{txt}{space 8}412  {c |}{col 14}{res}{space 2}-.1227974{col 26}{space 2} .1437624{col 37}{space 1}   -0.85{col 46}{space 3}0.395{col 54}{space 4}-.4083637{col 67}{space 3} .1627688
{txt}{space 8}421  {c |}{col 14}{res}{space 2}  .008514{col 26}{space 2} .1322823{col 37}{space 1}    0.06{col 46}{space 3}0.949{col 54}{space 4}-.2542485{col 67}{space 3} .2712766
{txt}{space 8}422  {c |}{col 14}{res}{space 2}-.0284809{col 26}{space 2} .1158709{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-.2586442{col 67}{space 3} .2016824
{txt}{space 8}511  {c |}{col 14}{res}{space 2}-.0374897{col 26}{space 2}  .129334{col 37}{space 1}   -0.29{col 46}{space 3}0.773{col 54}{space 4}-.2943957{col 67}{space 3} .2194163
{txt}{space 8}512  {c |}{col 14}{res}{space 2}-.0141678{col 26}{space 2} .1291395{col 37}{space 1}   -0.11{col 46}{space 3}0.913{col 54}{space 4}-.2706876{col 67}{space 3}  .242352
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .0224051{col 26}{space 2} .1266606{col 37}{space 1}    0.18{col 46}{space 3}0.860{col 54}{space 4}-.2291906{col 67}{space 3} .2740008
{txt}{space 8}522  {c |}{col 14}{res}{space 2}-.0086515{col 26}{space 2} .1300317{col 37}{space 1}   -0.07{col 46}{space 3}0.947{col 54}{space 4}-.2669434{col 67}{space 3} .2496405
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.2368203{col 26}{space 2} .1914158{col 37}{space 1}   -1.24{col 46}{space 3}0.219{col 54}{space 4}-.6170443{col 67}{space 3} .1434037
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-.1076114{col 26}{space 2} .1203596{col 37}{space 1}   -0.89{col 46}{space 3}0.374{col 54}{space 4}-.3466909{col 67}{space 3} .1314681
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .0129772{col 26}{space 2} .1285829{col 37}{space 1}    0.10{col 46}{space 3}0.920{col 54}{space 4}-.2424369{col 67}{space 3} .2683913
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.0958582{col 26}{space 2}   .13343{col 37}{space 1}   -0.72{col 46}{space 3}0.474{col 54}{space 4}-.3609004{col 67}{space 3} .1691841
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} -.164378{col 26}{space 2}  .133629{col 37}{space 1}   -1.23{col 46}{space 3}0.222{col 54}{space 4}-.4298156{col 67}{space 3} .1010596
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Linear regression                               Number of obs     = {res}     1,276
                                                {txt}{help j_robustsingular:F(23, 91) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0652
                                                {txt}Root MSE          =    {res} 1.1232

{txt}{ralign 78:(Std. Err. adjusted for {res:92} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}index_sale~t{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .1795355{col 26}{space 2} .0858266{col 37}{space 1}    2.09{col 46}{space 3}0.039{col 54}{space 4} .0090516{col 67}{space 3} .3500194
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .6227636{col 26}{space 2} .3133961{col 37}{space 1}    1.99{col 46}{space 3}0.050{col 54}{space 4} .0002406{col 67}{space 3} 1.245287
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .3472693{col 26}{space 2}  .323226{col 37}{space 1}    1.07{col 46}{space 3}0.285{col 54}{space 4}-.2947793{col 67}{space 3}  .989318
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .8355371{col 26}{space 2}  .338911{col 37}{space 1}    2.47{col 46}{space 3}0.016{col 54}{space 4} .1623321{col 67}{space 3} 1.508742
{txt}{space 8}211  {c |}{col 14}{res}{space 2}  1.02348{col 26}{space 2} .3343143{col 37}{space 1}    3.06{col 46}{space 3}0.003{col 54}{space 4} .3594062{col 67}{space 3} 1.687555
{txt}{space 8}212  {c |}{col 14}{res}{space 2}  .414222{col 26}{space 2} .4200646{col 37}{space 1}    0.99{col 46}{space 3}0.327{col 54}{space 4}-.4201846{col 67}{space 3} 1.248629
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .6315437{col 26}{space 2} .3391423{col 37}{space 1}    1.86{col 46}{space 3}0.066{col 54}{space 4}-.0421208{col 67}{space 3} 1.305208
{txt}{space 8}222  {c |}{col 14}{res}{space 2}  .702368{col 26}{space 2} .3547995{col 37}{space 1}    1.98{col 46}{space 3}0.051{col 54}{space 4}-.0023976{col 67}{space 3} 1.407134
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .8084496{col 26}{space 2}  .422117{col 37}{space 1}    1.92{col 46}{space 3}0.059{col 54}{space 4} -.030034{col 67}{space 3} 1.646933
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .3240606{col 26}{space 2} .4182565{col 37}{space 1}    0.77{col 46}{space 3}0.440{col 54}{space 4}-.5067544{col 67}{space 3} 1.154876
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .8161478{col 26}{space 2} .3446348{col 37}{space 1}    2.37{col 46}{space 3}0.020{col 54}{space 4} .1315731{col 67}{space 3} 1.500723
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .3399588{col 26}{space 2} .6083179{col 37}{space 1}    0.56{col 46}{space 3}0.578{col 54}{space 4}  -.86839{col 67}{space 3} 1.548308
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .9431633{col 26}{space 2} .3554434{col 37}{space 1}    2.65{col 46}{space 3}0.009{col 54}{space 4} .2371186{col 67}{space 3} 1.649208
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .9719987{col 26}{space 2} .3507157{col 37}{space 1}    2.77{col 46}{space 3}0.007{col 54}{space 4} .2753451{col 67}{space 3} 1.668652
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .2442322{col 26}{space 2} .5105769{col 37}{space 1}    0.48{col 46}{space 3}0.634{col 54}{space 4} -.769966{col 67}{space 3}  1.25843
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .5845237{col 26}{space 2}  .364224{col 37}{space 1}    1.60{col 46}{space 3}0.112{col 54}{space 4}-.1389624{col 67}{space 3}  1.30801
{txt}{space 8}511  {c |}{col 14}{res}{space 2} .7712865{col 26}{space 2} .3743754{col 37}{space 1}    2.06{col 46}{space 3}0.042{col 54}{space 4} .0276357{col 67}{space 3} 1.514937
{txt}{space 8}512  {c |}{col 14}{res}{space 2} 1.130079{col 26}{space 2}  .327021{col 37}{space 1}    3.46{col 46}{space 3}0.001{col 54}{space 4} .4804916{col 67}{space 3} 1.779666
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .8571382{col 26}{space 2} .3671443{col 37}{space 1}    2.33{col 46}{space 3}0.022{col 54}{space 4} .1278512{col 67}{space 3} 1.586425
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .5573739{col 26}{space 2} .3797773{col 37}{space 1}    1.47{col 46}{space 3}0.146{col 54}{space 4}-.1970071{col 67}{space 3} 1.311755
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .9433501{col 26}{space 2} .3585736{col 37}{space 1}    2.63{col 46}{space 3}0.010{col 54}{space 4} .2310878{col 67}{space 3} 1.655612
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.121249{col 26}{space 2} .3312413{col 37}{space 1}    3.38{col 46}{space 3}0.001{col 54}{space 4} .4632787{col 67}{space 3} 1.779219
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.041669{col 26}{space 2} .3615755{col 37}{space 1}    2.88{col 46}{space 3}0.005{col 54}{space 4} .3234434{col 67}{space 3} 1.759894
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .8906995{col 26}{space 2} .3550159{col 37}{space 1}    2.51{col 46}{space 3}0.014{col 54}{space 4}  .185504{col 67}{space 3} 1.595895
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-1.118944{col 26}{space 2} .3133961{col 37}{space 1}   -3.57{col 46}{space 3}0.001{col 54}{space 4}-1.741467{col 67}{space 3}-.4964215
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE.doc, statmat(A) sdec(4) coljust(l;c;l;l) title("Goat Sales") ///
> ctitle("","MDE","% of mean","# of sd's.") ///
> rtitle("Goats Sold"\"Goat Revenue"\"# Sold through Co-op"\"Rev. through Co-op"\"Net Goat Income"\"HH Goat Sales Index"\"Trader Visits per Sale"\"Time Passed"\"Transportation Costs"\"Sale Costs Index") ///
> note("Currency measured in USD") addtable replace
{res}
{txt}{center:Goat Sales}
{txt}{center:{hline 58}}
{center:{txt}{lalign 24:}{txt}{center 9:MDE}{txt}{center 11:% of mean}{txt}{center 12:# of sd's.}}
{txt}{center:{hline 58}}
{center:{txt}{lalign 24:Goats Sold}{res}{center 9:0.3036}{res}{center 11:0.2666}{res}{center 12:0.1620}}
{center:{txt}{lalign 24:Goat Revenue}{res}{center 9:22.6994}{res}{center 11:0.2419}{res}{center 12:0.1506}}
{center:{txt}{lalign 24:# Sold through Co-op}{res}{center 9:0.1628}{res}{center 11:0.6644}{res}{center 12:0.1752}}
{center:{txt}{lalign 24:Rev. through Co-op}{res}{center 9:14.4437}{res}{center 11:0.6523}{res}{center 12:0.1704}}
{center:{txt}{lalign 24:Net Goat Income}{res}{center 9:35.7381}{res}{center 11:0.6988}{res}{center 12:0.1209}}
{center:{txt}{lalign 24:HH Goat Sales Index}{res}{center 9:0.1456}{res}{center 11:-2.0742}{res}{center 12:0.1616}}
{center:{txt}{lalign 24:Trader Visits per Sale}{res}{center 9:0.1354}{res}{center 11:-0.4493}{res}{center 12:0.2203}}
{center:{txt}{lalign 24:Time Passed}{res}{center 9:0.3957}{res}{center 11:-0.5015}{res}{center 12:0.1829}}
{center:{txt}{lalign 24:Transportation Costs}{res}{center 9:0.5808}{res}{center 11:-2.5356}{res}{center 12:0.0837}}
{center:{txt}{lalign 24:Sale Costs Index}{res}{center 9:0.2431}{res}{center 11:-0.8143}{res}{center 12:0.2112}}
{txt}{center:{hline 58}}
{txt}{center:Currency measured in USD}


{com}. 
. 
. * Transparency
. ** HH vars
. gl hh_trn_d index_dTRN
{txt}
{com}. 
. local listsize : list sizeof global(hh_trn_d)
{txt}
{com}. tokenize $hh_trn_d
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}. 
.         reg ``i'' r_treat i.strata, cluster(idx)
{txt}  3{com}.         
.         quietly {c -(}
{txt}  4{com}.                 ereturn list
{txt}  5{com}.                 scalar t_a = invttail(`e(df_r)',0.025) // alpha t-value
{txt}  6{com}.                 scalar t_b = invttail(`e(df_r)',0.2) // beta t-value
{txt}  7{com}.                 scalar mde_``i'' = (t_a + t_b)*_se[r_treat]
{txt}  8{com}.                 
.         * Calculate MDE as % of mean & # of standard deviations
.                 sum ``i''
{txt}  9{com}.                 scalar mean_``i'' = mde_``i'' / r(mean) // % of treatment mean
{txt} 10{com}.                 scalar sd_``i'' = mde_``i'' / r(sd)  // # of treatment sd's
{txt} 11{com}. 
.         * matrix for table
.                 matrix mat_`i' = (mde_``i'',mean_``i'',sd_``i'')
{txt} 12{com}.                 {c )-}
{txt} 13{com}. {c )-}

{txt}Linear regression                               Number of obs     = {res}     1,647
                                                {txt}{help j_robustsingular:F(23, 89) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.2489
                                                {txt}Root MSE          =    {res} .85874

{txt}{ralign 78:(Std. Err. adjusted for {res:90} clusters in idx)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}  index_dTRN{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .0612619{col 26}{space 2} .1257669{col 37}{space 1}    0.49{col 46}{space 3}0.627{col 54}{space 4}-.1886343{col 67}{space 3} .3111581
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} 1.490348{col 26}{space 2} .2161168{col 37}{space 1}    6.90{col 46}{space 3}0.000{col 54}{space 4} 1.060928{col 67}{space 3} 1.919767
{txt}{space 8}121  {c |}{col 14}{res}{space 2} 1.080388{col 26}{space 2} .4394119{col 37}{space 1}    2.46{col 46}{space 3}0.016{col 54}{space 4} .2072859{col 67}{space 3}  1.95349
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .8535341{col 26}{space 2} .2382291{col 37}{space 1}    3.58{col 46}{space 3}0.001{col 54}{space 4}  .380178{col 67}{space 3}  1.32689
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .1826683{col 26}{space 2} .3639571{col 37}{space 1}    0.50{col 46}{space 3}0.617{col 54}{space 4}-.5405067{col 67}{space 3} .9058433
{txt}{space 8}212  {c |}{col 14}{res}{space 2}-.4627353{col 26}{space 2} .4157241{col 37}{space 1}   -1.11{col 46}{space 3}0.269{col 54}{space 4} -1.28877{col 67}{space 3} .3632997
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .0437965{col 26}{space 2}  .449834{col 37}{space 1}    0.10{col 46}{space 3}0.923{col 54}{space 4}-.8500141{col 67}{space 3} .9376071
{txt}{space 8}222  {c |}{col 14}{res}{space 2} .9038556{col 26}{space 2} .2261045{col 37}{space 1}    4.00{col 46}{space 3}0.000{col 54}{space 4} .4545908{col 67}{space 3}  1.35312
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .2614639{col 26}{space 2} .2507557{col 37}{space 1}    1.04{col 46}{space 3}0.300{col 54}{space 4}-.2367823{col 67}{space 3} .7597101
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 1.104782{col 26}{space 2} .2852906{col 37}{space 1}    3.87{col 46}{space 3}0.000{col 54}{space 4} .5379155{col 67}{space 3} 1.671648
{txt}{space 8}321  {c |}{col 14}{res}{space 2}-.0022255{col 26}{space 2} .4103937{col 37}{space 1}   -0.01{col 46}{space 3}0.996{col 54}{space 4}-.8176691{col 67}{space 3} .8132182
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .8712243{col 26}{space 2} .3724216{col 37}{space 1}    2.34{col 46}{space 3}0.022{col 54}{space 4} .1312305{col 67}{space 3} 1.611218
{txt}{space 8}411  {c |}{col 14}{res}{space 2} .5848964{col 26}{space 2} .2783446{col 37}{space 1}    2.10{col 46}{space 3}0.038{col 54}{space 4} .0318317{col 67}{space 3} 1.137961
{txt}{space 8}412  {c |}{col 14}{res}{space 2} .7269019{col 26}{space 2} .2177482{col 37}{space 1}    3.34{col 46}{space 3}0.001{col 54}{space 4} .2942409{col 67}{space 3} 1.159563
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .8501301{col 26}{space 2} .2139077{col 37}{space 1}    3.97{col 46}{space 3}0.000{col 54}{space 4}    .4251{col 67}{space 3}  1.27516
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 1.303694{col 26}{space 2}  .270807{col 37}{space 1}    4.81{col 46}{space 3}0.000{col 54}{space 4} .7656057{col 67}{space 3} 1.841781
{txt}{space 8}511  {c |}{col 14}{res}{space 2} 1.000297{col 26}{space 2} .2277019{col 37}{space 1}    4.39{col 46}{space 3}0.000{col 54}{space 4}  .547858{col 67}{space 3} 1.452736
{txt}{space 8}512  {c |}{col 14}{res}{space 2} .4382215{col 26}{space 2} .2572486{col 37}{space 1}    1.70{col 46}{space 3}0.092{col 54}{space 4} -.072926{col 67}{space 3}  .949369
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .5374091{col 26}{space 2} .4717518{col 37}{space 1}    1.14{col 46}{space 3}0.258{col 54}{space 4}-.3999516{col 67}{space 3}  1.47477
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .2987074{col 26}{space 2} .3952925{col 37}{space 1}    0.76{col 46}{space 3}0.452{col 54}{space 4}-.4867303{col 67}{space 3} 1.084145
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .4959972{col 26}{space 2} .4007543{col 37}{space 1}    1.24{col 46}{space 3}0.219{col 54}{space 4} -.300293{col 67}{space 3} 1.292287
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.283555{col 26}{space 2} .2482868{col 37}{space 1}    5.17{col 46}{space 3}0.000{col 54}{space 4} .7902146{col 67}{space 3} 1.776896
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .0015059{col 26}{space 2} .3822446{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-.7580059{col 67}{space 3} .7610178
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .3453497{col 26}{space 2} .3155143{col 37}{space 1}    1.09{col 46}{space 3}0.277{col 54}{space 4}-.2815705{col 67}{space 3} .9722699
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} -.208043{col 26}{space 2} .2161168{col 37}{space 1}   -0.96{col 46}{space 3}0.338{col 54}{space 4}-.6374625{col 67}{space 3} .2213766
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Strata table
. frmttable using MDE.doc, statmat(A) sdec(4) title("Transparency") ///
> ctitle("","MDE","% of mean","# of sd's.") ///
> rtitle("Discrepancy Index") addtable replace
{res}
{txt}{center:Transparency}
{txt}{center:{hline 52}}
{center:{txt}{lalign 19:}{txt}{center 8:MDE}{txt}{center 11:% of mean}{txt}{center 12:# of sd's.}}
{txt}{center:{hline 52}}
{center:{txt}{lalign 19:Discrepancy Index}{res}{center 8:0.3563}{res}{center 11:1.1472}{res}{center 12:0.3622}}
{txt}{center:{hline 52}}


{com}. 
. 
. 
. 
. 
. ** Co-op level dataset
. ********************************************* 
. clear
{txt}
{com}. use "$d3/r_CO_Merged_Ind.dta"
{txt}
{com}. 
. 
. * Planning and Goals
. 
. ** Co-op vars
. gl co_PNG PNG1 PNG2 PNG3 expected_rev index_PNG
{txt}
{com}. 
. *** Strata dummies - No interaction
. ** Co-op vars
. local listsize : list sizeof global(co_PNG)
{txt}
{com}. tokenize $co_PNG
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}. 
.         reg ``i'' r_treat i.strata
{txt}  3{com}.         
.         quietly {c -(}
{txt}  4{com}.                 ereturn list
{txt}  5{com}.                 scalar t_a = invttail(`e(df_r)',0.025) // alpha t-value
{txt}  6{com}.                 scalar t_b = invttail(`e(df_r)',0.2) // beta t-value
{txt}  7{com}.                 scalar mde_``i'' = (t_a + t_b)*_se[r_treat]
{txt}  8{com}.                 
.         * Calculate MDE as % of mean & # of standard deviations
.                 sum ``i''
{txt}  9{com}.                 scalar mean_``i'' = mde_``i'' / r(mean) // % of treatment mean
{txt} 10{com}.                 scalar sd_``i'' = mde_``i'' / r(sd)  // # of treatment sd's
{txt} 11{com}. 
.         * matrix for table
.                 matrix mat_`i' = (mde_``i'',mean_``i'',sd_``i'')
{txt} 12{com}.                 {c )-}
{txt} 13{com}. {c )-}

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}        90
{txt}{hline 13}{c +}{hline 34}   F(24, 65)       = {res}     1.89
{txt}       Model {c |} {res} 8.85404424        24   .36891851   {txt}Prob > F        ={res}    0.0220
{txt}    Residual {c |} {res} 12.6570669        65  .194724106   {txt}R-squared       ={res}    0.4116
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1943
{txt}       Total {c |} {res} 21.5111111        89  .241697878   {txt}Root MSE        =   {res} .44128

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        PNG1{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .0075988{col 26}{space 2} .0942231{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-.1805778{col 67}{space 3} .1957754
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .5037994{col 26}{space 2} .4956053{col 37}{space 1}    1.02{col 46}{space 3}0.313{col 54}{space 4}-.4859928{col 67}{space 3} 1.493592
{txt}{space 8}121  {c |}{col 14}{res}{space 2}       .5{col 26}{space 2} .3821558{col 37}{space 1}    1.31{col 46}{space 3}0.195{col 54}{space 4}-.2632179{col 67}{space 3} 1.263218
{txt}{space 8}122  {c |}{col 14}{res}{space 2}      .25{col 26}{space 2} .3120289{col 37}{space 1}    0.80{col 46}{space 3}0.426{col 54}{space 4}-.3731648{col 67}{space 3} .8731648
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .1679331{col 26}{space 2} .3373954{col 37}{space 1}    0.50{col 46}{space 3}0.620{col 54}{space 4}-.5058921{col 67}{space 3} .8417583
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .0833333{col 26}{space 2} .3120289{col 37}{space 1}    0.27{col 46}{space 3}0.790{col 54}{space 4}-.5398315{col 67}{space 3} .7064981
{txt}{space 8}221  {c |}{col 14}{res}{space 2}      .25{col 26}{space 2} .3120289{col 37}{space 1}    0.80{col 46}{space 3}0.426{col 54}{space 4}-.3731648{col 67}{space 3} .8731648
{txt}{space 8}222  {c |}{col 14}{res}{space 2}       .5{col 26}{space 2} .3120289{col 37}{space 1}    1.60{col 46}{space 3}0.114{col 54}{space 4}-.1231648{col 67}{space 3} 1.123165
{txt}{space 8}311  {c |}{col 14}{res}{space 2}    -.125{col 26}{space 2} .3120289{col 37}{space 1}   -0.40{col 46}{space 3}0.690{col 54}{space 4}-.7481648{col 67}{space 3} .4981648
{txt}{space 8}312  {c |}{col 14}{res}{space 2} .4987335{col 26}{space 2} .3373954{col 37}{space 1}    1.48{col 46}{space 3}0.144{col 54}{space 4}-.1750917{col 67}{space 3} 1.172559
{txt}{space 8}321  {c |}{col 14}{res}{space 2}     .375{col 26}{space 2} .3120289{col 37}{space 1}    1.20{col 46}{space 3}0.234{col 54}{space 4}-.2481648{col 67}{space 3} .9981648
{txt}{space 8}322  {c |}{col 14}{res}{space 2}       .5{col 26}{space 2} .3821558{col 37}{space 1}    1.31{col 46}{space 3}0.195{col 54}{space 4}-.2632179{col 67}{space 3} 1.263218
{txt}{space 8}411  {c |}{col 14}{res}{space 2}      -.5{col 26}{space 2} .3120289{col 37}{space 1}   -1.60{col 46}{space 3}0.114{col 54}{space 4}-1.123165{col 67}{space 3} .1231648
{txt}{space 8}412  {c |}{col 14}{res}{space 2}      -.5{col 26}{space 2} .3120289{col 37}{space 1}   -1.60{col 46}{space 3}0.114{col 54}{space 4}-1.123165{col 67}{space 3} .1231648
{txt}{space 8}421  {c |}{col 14}{res}{space 2}      .25{col 26}{space 2} .3120289{col 37}{space 1}    0.80{col 46}{space 3}0.426{col 54}{space 4}-.3731648{col 67}{space 3} .8731648
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .1007599{col 26}{space 2} .2961666{col 37}{space 1}    0.34{col 46}{space 3}0.735{col 54}{space 4}-.4907256{col 67}{space 3} .6922453
{txt}{space 8}511  {c |}{col 14}{res}{space 2}      -.5{col 26}{space 2} .3120289{col 37}{space 1}   -1.60{col 46}{space 3}0.114{col 54}{space 4}-1.123165{col 67}{space 3} .1231648
{txt}{space 8}512  {c |}{col 14}{res}{space 2}     -.25{col 26}{space 2} .3120289{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}-.8731648{col 67}{space 3} .3731648
{txt}{space 8}521  {c |}{col 14}{res}{space 2}-9.13e-16{col 26}{space 2} .3120289{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-.6231648{col 67}{space 3} .6231648
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .1007599{col 26}{space 2} .2961666{col 37}{space 1}    0.34{col 46}{space 3}0.735{col 54}{space 4}-.4907256{col 67}{space 3} .6922453
{txt}{space 8}611  {c |}{col 14}{res}{space 2}     -.25{col 26}{space 2} .3120289{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}-.8731648{col 67}{space 3} .3731648
{txt}{space 8}612  {c |}{col 14}{res}{space 2}     -.25{col 26}{space 2} .3120289{col 37}{space 1}   -0.80{col 46}{space 3}0.426{col 54}{space 4}-.8731648{col 67}{space 3} .3731648
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .1666667{col 26}{space 2} .3120289{col 37}{space 1}    0.53{col 46}{space 3}0.595{col 54}{space 4}-.4564981{col 67}{space 3} .7898315
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.3007599{col 26}{space 2} .2961666{col 37}{space 1}   -1.02{col 46}{space 3}0.314{col 54}{space 4}-.8922453{col 67}{space 3} .2907256
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .4962006{col 26}{space 2} .2256114{col 37}{space 1}    2.20{col 46}{space 3}0.031{col 54}{space 4} .0456234{col 67}{space 3} .9467778
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}        89
{txt}{hline 13}{c +}{hline 34}   F(24, 64)       = {res}     1.49
{txt}       Model {c |} {res} 31.4075596        24  1.30864832   {txt}Prob > F        ={res}    0.1046
{txt}    Residual {c |} {res} 56.1929398        64  .878014685   {txt}R-squared       ={res}    0.3585
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1180
{txt}       Total {c |} {res} 87.6004994        88   .99546022   {txt}Root MSE        =   {res} .93702

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        PNG2{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2}-.3865741{col 26}{space 2} .2016155{col 37}{space 1}   -1.92{col 46}{space 3}0.060{col 54}{space 4}-.7893474{col 67}{space 3} .0161993
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}  .306713{col 26}{space 2} 1.052464{col 37}{space 1}    0.29{col 46}{space 3}0.772{col 54}{space 4}-1.795826{col 67}{space 3} 2.409252
{txt}{space 8}121  {c |}{col 14}{res}{space 2}        1{col 26}{space 2} .8114869{col 37}{space 1}    1.23{col 46}{space 3}0.222{col 54}{space 4}-.6211315{col 67}{space 3} 2.621131
{txt}{space 8}122  {c |}{col 14}{res}{space 2}        1{col 26}{space 2} .6625763{col 37}{space 1}    1.51{col 46}{space 3}0.136{col 54}{space 4}-.3236483{col 67}{space 3} 2.323648
{txt}{space 8}211  {c |}{col 14}{res}{space 2}  .435571{col 26}{space 2} .7164526{col 37}{space 1}    0.61{col 46}{space 3}0.545{col 54}{space 4}-.9957077{col 67}{space 3}  1.86685
{txt}{space 8}212  {c |}{col 14}{res}{space 2}      .25{col 26}{space 2} .6625763{col 37}{space 1}    0.38{col 46}{space 3}0.707{col 54}{space 4}-1.073648{col 67}{space 3} 1.573648
{txt}{space 8}221  {c |}{col 14}{res}{space 2}      .75{col 26}{space 2} .6625763{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.5736483{col 67}{space 3} 2.073648
{txt}{space 8}222  {c |}{col 14}{res}{space 2}        1{col 26}{space 2} .6625763{col 37}{space 1}    1.51{col 46}{space 3}0.136{col 54}{space 4}-.3236483{col 67}{space 3} 2.323648
{txt}{space 8}311  {c |}{col 14}{res}{space 2}     .875{col 26}{space 2} .6625763{col 37}{space 1}    1.32{col 46}{space 3}0.191{col 54}{space 4}-.4486483{col 67}{space 3} 2.198648
{txt}{space 8}312  {c |}{col 14}{res}{space 2}  .564429{col 26}{space 2} .7164526{col 37}{space 1}    0.79{col 46}{space 3}0.434{col 54}{space 4}-.8668496{col 67}{space 3} 1.995708
{txt}{space 8}321  {c |}{col 14}{res}{space 2} .9166667{col 26}{space 2} .6625763{col 37}{space 1}    1.38{col 46}{space 3}0.171{col 54}{space 4}-.4069816{col 67}{space 3} 2.240315
{txt}{space 8}322  {c |}{col 14}{res}{space 2}       .5{col 26}{space 2} .8114869{col 37}{space 1}    0.62{col 46}{space 3}0.540{col 54}{space 4}-1.121131{col 67}{space 3} 2.121131
{txt}{space 8}411  {c |}{col 14}{res}{space 2}      .25{col 26}{space 2} .6625763{col 37}{space 1}    0.38{col 46}{space 3}0.707{col 54}{space 4}-1.073648{col 67}{space 3} 1.573648
{txt}{space 8}412  {c |}{col 14}{res}{space 2}      .75{col 26}{space 2} .6625763{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.5736483{col 67}{space 3} 2.073648
{txt}{space 8}421  {c |}{col 14}{res}{space 2}        2{col 26}{space 2} .6625763{col 37}{space 1}    3.02{col 46}{space 3}0.004{col 54}{space 4} .6763517{col 67}{space 3} 3.323648
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .6613426{col 26}{space 2} .6288983{col 37}{space 1}    1.05{col 46}{space 3}0.297{col 54}{space 4}-.5950262{col 67}{space 3} 1.917711
{txt}{space 8}511  {c |}{col 14}{res}{space 2}     -.25{col 26}{space 2} .6625763{col 37}{space 1}   -0.38{col 46}{space 3}0.707{col 54}{space 4}-1.573648{col 67}{space 3} 1.073648
{txt}{space 8}512  {c |}{col 14}{res}{space 2}      .75{col 26}{space 2} .6625763{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.5736483{col 67}{space 3} 2.073648
{txt}{space 8}521  {c |}{col 14}{res}{space 2}  .435571{col 26}{space 2} .7164526{col 37}{space 1}    0.61{col 46}{space 3}0.545{col 54}{space 4}-.9957077{col 67}{space 3}  1.86685
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 2.261343{col 26}{space 2} .6288983{col 37}{space 1}    3.60{col 46}{space 3}0.001{col 54}{space 4} 1.004974{col 67}{space 3} 3.517711
{txt}{space 8}611  {c |}{col 14}{res}{space 2}      .75{col 26}{space 2} .6625763{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.5736483{col 67}{space 3} 2.073648
{txt}{space 8}612  {c |}{col 14}{res}{space 2}      .75{col 26}{space 2} .6625763{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-.5736483{col 67}{space 3} 2.073648
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .5833333{col 26}{space 2} .6625763{col 37}{space 1}    0.88{col 46}{space 3}0.382{col 54}{space 4} -.740315{col 67}{space 3} 1.906982
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .7386574{col 26}{space 2} .6288983{col 37}{space 1}    1.17{col 46}{space 3}0.245{col 54}{space 4}-.5177114{col 67}{space 3} 1.995026
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  .693287{col 26}{space 2} .4792347{col 37}{space 1}    1.45{col 46}{space 3}0.153{col 54}{space 4}-.2640943{col 67}{space 3} 1.650668
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}        90
{txt}{hline 13}{c +}{hline 34}   F(24, 65)       = {res}     1.32
{txt}       Model {c |} {res} 3846424.89        24  160267.704   {txt}Prob > F        ={res}    0.1886
{txt}    Residual {c |} {res}  7898051.6        65  121508.486   {txt}R-squared       ={res}    0.3275
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0792
{txt}       Total {c |} {res} 11744476.5        89   131960.41   {txt}Root MSE        =   {res} 348.58

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        PNG3{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} 72.98632{col 26}{space 2} 74.43051{col 37}{space 1}    0.98{col 46}{space 3}0.330{col 54}{space 4}-75.66167{col 67}{space 3} 221.6343
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2}-24.25684{col 26}{space 2} 391.4979{col 37}{space 1}   -0.06{col 46}{space 3}0.951{col 54}{space 4}-806.1321{col 67}{space 3} 757.6184
{txt}{space 8}121  {c |}{col 14}{res}{space 2}    -8.75{col 26}{space 2} 301.8797{col 37}{space 1}   -0.03{col 46}{space 3}0.977{col 54}{space 4}-611.6454{col 67}{space 3} 594.1454
{txt}{space 8}122  {c |}{col 14}{res}{space 2}   -58.75{col 26}{space 2} 246.4838{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-551.0121{col 67}{space 3} 433.5121
{txt}{space 8}211  {c |}{col 14}{res}{space 2} 70.08105{col 26}{space 2} 266.5217{col 37}{space 1}    0.26{col 46}{space 3}0.793{col 54}{space 4}-462.1996{col 67}{space 3} 602.3617
{txt}{space 8}212  {c |}{col 14}{res}{space 2}-115.8333{col 26}{space 2} 246.4838{col 37}{space 1}   -0.47{col 46}{space 3}0.640{col 54}{space 4}-608.0954{col 67}{space 3} 376.4287
{txt}{space 8}221  {c |}{col 14}{res}{space 2}   278.75{col 26}{space 2} 246.4838{col 37}{space 1}    1.13{col 46}{space 3}0.262{col 54}{space 4}-213.5121{col 67}{space 3} 771.0121
{txt}{space 8}222  {c |}{col 14}{res}{space 2}  201.875{col 26}{space 2} 246.4838{col 37}{space 1}    0.82{col 46}{space 3}0.416{col 54}{space 4}-290.3871{col 67}{space 3} 694.1371
{txt}{space 8}311  {c |}{col 14}{res}{space 2}   56.875{col 26}{space 2} 246.4838{col 37}{space 1}    0.23{col 46}{space 3}0.818{col 54}{space 4}-435.3871{col 67}{space 3} 549.1371
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 879.0856{col 26}{space 2} 266.5217{col 37}{space 1}    3.30{col 46}{space 3}0.002{col 54}{space 4} 346.8049{col 67}{space 3} 1411.366
{txt}{space 8}321  {c |}{col 14}{res}{space 2}   423.75{col 26}{space 2} 246.4838{col 37}{space 1}    1.72{col 46}{space 3}0.090{col 54}{space 4}-68.51206{col 67}{space 3} 916.0121
{txt}{space 8}322  {c |}{col 14}{res}{space 2}   291.25{col 26}{space 2} 301.8797{col 37}{space 1}    0.96{col 46}{space 3}0.338{col 54}{space 4}-311.6454{col 67}{space 3} 894.1454
{txt}{space 8}411  {c |}{col 14}{res}{space 2}    16.25{col 26}{space 2} 246.4838{col 37}{space 1}    0.07{col 46}{space 3}0.948{col 54}{space 4}-476.0121{col 67}{space 3} 508.5121
{txt}{space 8}412  {c |}{col 14}{res}{space 2}        1{col 26}{space 2} 246.4838{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-491.2621{col 67}{space 3} 493.2621
{txt}{space 8}421  {c |}{col 14}{res}{space 2}      125{col 26}{space 2} 246.4838{col 37}{space 1}    0.51{col 46}{space 3}0.614{col 54}{space 4}-367.2621{col 67}{space 3} 617.2621
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 32.54863{col 26}{space 2} 233.9535{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-434.6887{col 67}{space 3} 499.7859
{txt}{space 8}511  {c |}{col 14}{res}{space 2}  -146.25{col 26}{space 2} 246.4838{col 37}{space 1}   -0.59{col 46}{space 3}0.555{col 54}{space 4}-638.5121{col 67}{space 3} 346.0121
{txt}{space 8}512  {c |}{col 14}{res}{space 2}   103.75{col 26}{space 2} 246.4838{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-388.5121{col 67}{space 3} 596.0121
{txt}{space 8}521  {c |}{col 14}{res}{space 2}     13.5{col 26}{space 2} 246.4838{col 37}{space 1}    0.05{col 46}{space 3}0.956{col 54}{space 4}-478.7621{col 67}{space 3} 505.7621
{txt}{space 8}522  {c |}{col 14}{res}{space 2} 284.5486{col 26}{space 2} 233.9535{col 37}{space 1}    1.22{col 46}{space 3}0.228{col 54}{space 4}-182.6887{col 67}{space 3} 751.7859
{txt}{space 8}611  {c |}{col 14}{res}{space 2}     -112{col 26}{space 2} 246.4838{col 37}{space 1}   -0.45{col 46}{space 3}0.651{col 54}{space 4}-604.2621{col 67}{space 3} 380.2621
{txt}{space 8}612  {c |}{col 14}{res}{space 2}    91.25{col 26}{space 2} 246.4838{col 37}{space 1}    0.37{col 46}{space 3}0.712{col 54}{space 4}-401.0121{col 67}{space 3} 583.5121
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 145.4167{col 26}{space 2} 246.4838{col 37}{space 1}    0.59{col 46}{space 3}0.557{col 54}{space 4}-346.8454{col 67}{space 3} 637.6787
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 233.9514{col 26}{space 2} 233.9535{col 37}{space 1}    1.00{col 46}{space 3}0.321{col 54}{space 4}-233.2859{col 67}{space 3} 701.1887
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 122.2568{col 26}{space 2} 178.2192{col 37}{space 1}    0.69{col 46}{space 3}0.495{col 54}{space 4}-233.6716{col 67}{space 3} 478.1852
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}        90
{txt}{hline 13}{c +}{hline 34}   F(24, 65)       = {res}     0.95
{txt}       Model {c |} {res}  107930413        24  4497100.55   {txt}Prob > F        ={res}    0.5354
{txt}    Residual {c |} {res}  306714322        65  4718681.87   {txt}R-squared       ={res}    0.2603
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}   -0.0128
{txt}       Total {c |} {res}  414644735        89  4658929.61   {txt}Root MSE        =   {res} 2172.3

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}expected_rev{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2}-528.5658{col 26}{space 2} 463.8291{col 37}{space 1}   -1.14{col 46}{space 3}0.259{col 54}{space 4}-1454.897{col 67}{space 3}  397.765
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} 1963.217{col 26}{space 2}   2439.7{col 37}{space 1}    0.80{col 46}{space 3}0.424{col 54}{space 4}  -2909.2{col 67}{space 3} 6835.635
{txt}{space 8}121  {c |}{col 14}{res}{space 2}   -455.4{col 26}{space 2} 1881.226{col 37}{space 1}   -0.24{col 46}{space 3}0.809{col 54}{space 4}-4212.468{col 67}{space 3} 3301.668
{txt}{space 8}122  {c |}{col 14}{res}{space 2}  3836.25{col 26}{space 2} 1536.015{col 37}{space 1}    2.50{col 46}{space 3}0.015{col 54}{space 4}  768.617{col 67}{space 3} 6903.883
{txt}{space 8}211  {c |}{col 14}{res}{space 2}-434.5943{col 26}{space 2} 1660.885{col 37}{space 1}   -0.26{col 46}{space 3}0.794{col 54}{space 4}-3751.612{col 67}{space 3} 2882.423
{txt}{space 8}212  {c |}{col 14}{res}{space 2} 1405.057{col 26}{space 2} 1536.015{col 37}{space 1}    0.91{col 46}{space 3}0.364{col 54}{space 4}-1662.576{col 67}{space 3}  4472.69
{txt}{space 8}221  {c |}{col 14}{res}{space 2}  -123.75{col 26}{space 2} 1536.015{col 37}{space 1}   -0.08{col 46}{space 3}0.936{col 54}{space 4}-3191.383{col 67}{space 3} 2943.883
{txt}{space 8}222  {c |}{col 14}{res}{space 2}   1633.5{col 26}{space 2} 1536.015{col 37}{space 1}    1.06{col 46}{space 3}0.292{col 54}{space 4}-1434.133{col 67}{space 3} 4701.133
{txt}{space 8}311  {c |}{col 14}{res}{space 2}  -559.35{col 26}{space 2} 1536.015{col 37}{space 1}   -0.36{col 46}{space 3}0.717{col 54}{space 4}-3626.983{col 67}{space 3} 2508.283
{txt}{space 8}312  {c |}{col 14}{res}{space 2} 88.09429{col 26}{space 2} 1660.885{col 37}{space 1}    0.05{col 46}{space 3}0.958{col 54}{space 4}-3228.923{col 67}{space 3} 3405.112
{txt}{space 8}321  {c |}{col 14}{res}{space 2}-279.6342{col 26}{space 2} 1536.015{col 37}{space 1}   -0.18{col 46}{space 3}0.856{col 54}{space 4}-3347.267{col 67}{space 3} 2787.999
{txt}{space 8}322  {c |}{col 14}{res}{space 2}    -49.5{col 26}{space 2} 1881.226{col 37}{space 1}   -0.03{col 46}{space 3}0.979{col 54}{space 4}-3806.568{col 67}{space 3} 3707.568
{txt}{space 8}411  {c |}{col 14}{res}{space 2}      792{col 26}{space 2} 1536.015{col 37}{space 1}    0.52{col 46}{space 3}0.608{col 54}{space 4}-2275.633{col 67}{space 3} 3859.633
{txt}{space 8}412  {c |}{col 14}{res}{space 2} 1027.615{col 26}{space 2} 1536.015{col 37}{space 1}    0.67{col 46}{space 3}0.506{col 54}{space 4}-2040.018{col 67}{space 3} 4095.248
{txt}{space 8}421  {c |}{col 14}{res}{space 2} 1497.375{col 26}{space 2} 1536.015{col 37}{space 1}    0.97{col 46}{space 3}0.333{col 54}{space 4}-1570.258{col 67}{space 3} 4565.008
{txt}{space 8}422  {c |}{col 14}{res}{space 2} 400.5634{col 26}{space 2} 1457.929{col 37}{space 1}    0.27{col 46}{space 3}0.784{col 54}{space 4}-2511.123{col 67}{space 3}  3312.25
{txt}{space 8}511  {c |}{col 14}{res}{space 2}  -618.75{col 26}{space 2} 1536.015{col 37}{space 1}   -0.40{col 46}{space 3}0.688{col 54}{space 4}-3686.383{col 67}{space 3} 2448.883
{txt}{space 8}512  {c |}{col 14}{res}{space 2} -519.505{col 26}{space 2} 1536.015{col 37}{space 1}   -0.34{col 46}{space 3}0.736{col 54}{space 4}-3587.138{col 67}{space 3} 2548.128
{txt}{space 8}521  {c |}{col 14}{res}{space 2}  -625.93{col 26}{space 2} 1536.015{col 37}{space 1}   -0.41{col 46}{space 3}0.685{col 54}{space 4}-3693.563{col 67}{space 3} 2441.703
{txt}{space 8}522  {c |}{col 14}{res}{space 2}-305.3066{col 26}{space 2} 1457.929{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-3216.993{col 67}{space 3}  2606.38
{txt}{space 8}611  {c |}{col 14}{res}{space 2}  -717.75{col 26}{space 2} 1536.015{col 37}{space 1}   -0.47{col 46}{space 3}0.642{col 54}{space 4}-3785.383{col 67}{space 3} 2349.883
{txt}{space 8}612  {c |}{col 14}{res}{space 2}   8.6625{col 26}{space 2} 1536.015{col 37}{space 1}    0.01{col 46}{space 3}0.996{col 54}{space 4}-3058.971{col 67}{space 3} 3076.296
{txt}{space 8}621  {c |}{col 14}{res}{space 2}  -461.34{col 26}{space 2} 1536.015{col 37}{space 1}   -0.30{col 46}{space 3}0.765{col 54}{space 4}-3528.973{col 67}{space 3} 2606.293
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-105.1514{col 26}{space 2} 1457.929{col 37}{space 1}   -0.07{col 46}{space 3}0.943{col 54}{space 4}-3016.838{col 67}{space 3} 2806.535
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 1006.783{col 26}{space 2}  1110.61{col 37}{space 1}    0.91{col 46}{space 3}0.368{col 54}{space 4}-1211.259{col 67}{space 3} 3224.824
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}        89
{txt}{hline 13}{c +}{hline 34}   F(24, 64)       = {res}     1.75
{txt}       Model {c |} {res} 28.6181972        24  1.19242488   {txt}Prob > F        ={res}    0.0396
{txt}    Residual {c |} {res} 43.6384686        64  .681851072   {txt}R-squared       ={res}    0.3961
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.1696
{txt}       Total {c |} {res} 72.2566658        88  .821098476   {txt}Root MSE        =   {res} .82574

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   index_PNG{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}r_treat {c |}{col 14}{res}{space 2} .0043627{col 26}{space 2} .1776715{col 37}{space 1}    0.02{col 46}{space 3}0.980{col 54}{space 4} -.350577{col 67}{space 3} .3593024
{txt}{space 12} {c |}
{space 6}strata {c |}
{space 8}112  {c |}{col 14}{res}{space 2} .6656467{col 26}{space 2} .9274727{col 37}{space 1}    0.72{col 46}{space 3}0.476{col 54}{space 4}-1.187193{col 67}{space 3} 2.518486
{txt}{space 8}121  {c |}{col 14}{res}{space 2} .5317317{col 26}{space 2} .7151142{col 37}{space 1}    0.74{col 46}{space 3}0.460{col 54}{space 4}-.8968731{col 67}{space 3} 1.960337
{txt}{space 8}122  {c |}{col 14}{res}{space 2} .7493061{col 26}{space 2} .5838883{col 37}{space 1}    1.28{col 46}{space 3}0.204{col 54}{space 4}-.4171449{col 67}{space 3} 1.915757
{txt}{space 8}211  {c |}{col 14}{res}{space 2} .2856682{col 26}{space 2} .6313662{col 37}{space 1}    0.45{col 46}{space 3}0.652{col 54}{space 4}-.9756309{col 67}{space 3} 1.546967
{txt}{space 8}212  {c |}{col 14}{res}{space 2} .0932733{col 26}{space 2} .5838883{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4}-1.073178{col 67}{space 3} 1.259724
{txt}{space 8}221  {c |}{col 14}{res}{space 2} .7825819{col 26}{space 2} .5838883{col 37}{space 1}    1.34{col 46}{space 3}0.185{col 54}{space 4}-.3838691{col 67}{space 3} 1.949033
{txt}{space 8}222  {c |}{col 14}{res}{space 2} 1.114441{col 26}{space 2} .5838883{col 37}{space 1}    1.91{col 46}{space 3}0.061{col 54}{space 4}-.0520096{col 67}{space 3} 2.280892
{txt}{space 8}311  {c |}{col 14}{res}{space 2} .0955224{col 26}{space 2} .5838883{col 37}{space 1}    0.16{col 46}{space 3}0.871{col 54}{space 4}-1.070929{col 67}{space 3} 1.261973
{txt}{space 8}312  {c |}{col 14}{res}{space 2}  1.93624{col 26}{space 2} .6313662{col 37}{space 1}    3.07{col 46}{space 3}0.003{col 54}{space 4}  .674941{col 67}{space 3} 3.197539
{txt}{space 8}321  {c |}{col 14}{res}{space 2} 1.131444{col 26}{space 2} .5838883{col 37}{space 1}    1.94{col 46}{space 3}0.057{col 54}{space 4}-.0350074{col 67}{space 3} 2.297895
{txt}{space 8}322  {c |}{col 14}{res}{space 2} .9649172{col 26}{space 2} .7151142{col 37}{space 1}    1.35{col 46}{space 3}0.182{col 54}{space 4}-.4636876{col 67}{space 3} 2.393522
{txt}{space 8}411  {c |}{col 14}{res}{space 2}-.2372392{col 26}{space 2} .5838883{col 37}{space 1}   -0.41{col 46}{space 3}0.686{col 54}{space 4} -1.40369{col 67}{space 3} .9292118
{txt}{space 8}412  {c |}{col 14}{res}{space 2}-.1370624{col 26}{space 2} .5838883{col 37}{space 1}   -0.23{col 46}{space 3}0.815{col 54}{space 4}-1.303513{col 67}{space 3} 1.029389
{txt}{space 8}421  {c |}{col 14}{res}{space 2} .9671251{col 26}{space 2} .5838883{col 37}{space 1}    1.66{col 46}{space 3}0.103{col 54}{space 4}-.1993258{col 67}{space 3} 2.133576
{txt}{space 8}422  {c |}{col 14}{res}{space 2} .3110086{col 26}{space 2} .5542099{col 37}{space 1}    0.56{col 46}{space 3}0.577{col 54}{space 4} -.796153{col 67}{space 3}  1.41817
{txt}{space 8}511  {c |}{col 14}{res}{space 2} -.760663{col 26}{space 2} .5838883{col 37}{space 1}   -1.30{col 46}{space 3}0.197{col 54}{space 4}-1.927114{col 67}{space 3}  .405788
{txt}{space 8}512  {c |}{col 14}{res}{space 2}  .050248{col 26}{space 2} .5838883{col 37}{space 1}    0.09{col 46}{space 3}0.932{col 54}{space 4}-1.116203{col 67}{space 3} 1.216699
{txt}{space 8}521  {c |}{col 14}{res}{space 2} .2253769{col 26}{space 2} .6313662{col 37}{space 1}    0.36{col 46}{space 3}0.722{col 54}{space 4}-1.035922{col 67}{space 3} 1.486676
{txt}{space 8}522  {c |}{col 14}{res}{space 2} .9458277{col 26}{space 2} .5542099{col 37}{space 1}    1.71{col 46}{space 3}0.093{col 54}{space 4} -.161334{col 67}{space 3} 2.052989
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.3203197{col 26}{space 2} .5838883{col 37}{space 1}   -0.55{col 46}{space 3}0.585{col 54}{space 4}-1.486771{col 67}{space 3} .8461312
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .0916862{col 26}{space 2} .5838883{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-1.074765{col 67}{space 3} 1.258137
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .4286816{col 26}{space 2} .5838883{col 37}{space 1}    0.73{col 46}{space 3}0.466{col 54}{space 4}-.7377694{col 67}{space 3} 1.595133
{txt}{space 8}622  {c |}{col 14}{res}{space 2}  .263227{col 26}{space 2} .5542099{col 37}{space 1}    0.47{col 46}{space 3}0.636{col 54}{space 4}-.8439346{col 67}{space 3} 1.370389
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.3283414{col 26}{space 2} .4223205{col 37}{space 1}   -0.78{col 46}{space 3}0.440{col 54}{space 4}-1.172023{col 67}{space 3} .5153407
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE.doc, statmat(A) sdec(4) title("Planning and Goals") ///
> ctitle("","MDE","% of mean","# of sd's.") ///
> rtitle("Business Plan"\"Planning Time Horizon"\"Expected Goats Sold"\"Expected Rev."\"PNG Index") addtable replace
{res}
{txt}{center:Planning and Goals}
{txt}{center:{hline 60}}
{center:{txt}{lalign 23:}{txt}{center 12:MDE}{txt}{center 11:% of mean}{txt}{center 12:# of sd's.}}
{txt}{center:{hline 60}}
{center:{txt}{lalign 23:Business Plan}{res}{center 12:0.2680}{res}{center 11:0.5132}{res}{center 12:0.5451}}
{center:{txt}{lalign 23:Planning Time Horizon}{res}{center 12:0.5736}{res}{center 11:0.4538}{res}{center 12:0.5749}}
{center:{txt}{lalign 23:Expected Goats Sold}{res}{center 12:211.7045}{res}{center 11:0.7791}{res}{center 12:0.5828}}
{center:{txt}{lalign 23:Expected Rev.}{res}{center 12:1,319.2804}{res}{center 11:1.2851}{res}{center 12:0.6112}}
{center:{txt}{lalign 23:PNG Index}{res}{center 12:0.5055}{res}{center 11:7.8070}{res}{center 12:0.5578}}
{txt}{center:{hline 60}}


{com}. 
. 
. 
. 
. 
. 
. 
{txt}end of do-file

{com}. clear

. use "$d3/r_CO_Merged_Ind.dta"

. sum REV4, d

                     {txt}Total co-op revenue
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}    10400              0
{txt}10%    {res}    29546           1000       {txt}Obs         {res}         90
{txt}25%    {res}    68236           1854       {txt}Sum of Wgt. {res}         90

{txt}50%    {res}   188700                      {txt}Mean          {res} 389808.1
                        {txt}Largest       Std. Dev.     {res} 816545.3
{txt}75%    {res}   385741        1391466
{txt}90%    {res} 757937.5        1455179       {txt}Variance      {res} 6.67e+11
{txt}95%    {res}  1110357        3715744       {txt}Skewness      {res} 5.863374
{txt}99%    {res}  6637324        6637324       {txt}Kurtosis      {res} 42.15608

{com}. sum REC4_1, d

       {txt}REC4_1: How much revenue was earned in the past
                 six months from Goat sales?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}        0              0       {txt}Obs         {res}         90
{txt}25%    {res}        0              0       {txt}Sum of Wgt. {res}         90

{txt}50%    {res}     4000                      {txt}Mean          {res} 11299.03
                        {txt}Largest       Std. Dev.     {res} 20579.21
{txt}75%    {res}  10581.5          71120
{txt}90%    {res}    25210          76990       {txt}Variance      {res} 4.24e+08
{txt}95%    {res}    65505          79810       {txt}Skewness      {res} 2.688166
{txt}99%    {res}   103980         103980       {txt}Kurtosis      {res} 9.727732

{com}. sum revenue, d

                           {txt}revenue
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}      9.9              0
{txt}10%    {res}   242.55              0       {txt}Obs         {res}         92
{txt}25%    {res}  600.336              0       {txt}Sum of Wgt. {res}         92

{txt}50%    {res} 1783.262                      {txt}Mean          {res} 3775.206
                        {txt}Largest       Std. Dev.     {res} 8014.474
{txt}75%    {res} 3801.273       13775.51
{txt}90%    {res} 7250.067       14406.27       {txt}Variance      {res} 6.42e+07
{txt}95%    {res} 10992.53       36785.87       {txt}Skewness      {res} 5.913001
{txt}99%    {res} 65709.51       65709.51       {txt}Kurtosis      {res} 42.91379

{com}. sum goatrev, d

                           {txt}goatrev
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}        0              0       {txt}Obs         {res}         90
{txt}25%    {res}        0              0       {txt}Sum of Wgt. {res}         90

{txt}50%    {res}     39.6                      {txt}Mean          {res} 111.8604
                        {txt}Largest       Std. Dev.     {res} 203.7342
{txt}75%    {res} 104.7569        704.088
{txt}90%    {res}  249.579        762.201       {txt}Variance      {res} 41507.61
{txt}95%    {res} 648.4995        790.119       {txt}Skewness      {res} 2.688166
{txt}99%    {res} 1029.402       1029.402       {txt}Kurtosis      {res} 9.727732

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD01874.000000"
{txt}
{com}. 
. clear
{txt}
{com}. set more off, perm
{txt}({cmd:set more} preference recorded)

{com}. cd "$d2"
{res}/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data
{txt}
{com}. 
. ** Co-op level dataset
. ********************************************* 
. clear
{txt}
{com}. use "$d3/r_CO_Merged_Ind.dta"
{txt}
{com}. 
. 
. ** Co-op indicators **
. 
. gl co_summ MAN3 revenue costs net_rev rev_member net_rev_member goatrev ///
>                 PNG1 PNG2 PNG3 expected_rev index_PNG CO_TRN1 CO_TRN2 ///
>                 CO_TRN3 CO_TRN4 CO_TRN5 CO_TRN6 CO_TRN7
{txt}
{com}. 
. local listsize : list sizeof global(co_summ)
{txt}
{com}. tokenize $co_summ
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using CO_summary.tex, tex statmat(A) sdec(2) coljust(l;c;l;l) title("Cooperative Indicators - Summmary Statistics") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("\# of Members"\"Revenue (USD)"\"Costs (USD)"\"Net Revenue (USD)"\"Revenue per Member (USD)"\"Net Revenue per Member (USD)"\"Goat Revenue"\"Co-op has a Business Plan"\"Planning Time Horizon (Years)"\"Expected Goats Sold"\"Expected Revenue (USD)"\"Planning \& Goals Summmary Index"\"Transparency: Mandate"\"Transparency: Annual Report"\"Transparency: Annual Budget"\"Transparency: Financial Report"\"Transparency: Meeting Minutes"\"Transparency: Election Results"\"Transparency: Sale Records")replace
{res}
{txt}{center:Cooperative Indicators - Summmary Statistics}
{txt}{center:{hline 85}}
{center:{txt}{lalign 34:}{txt}{center 7:N}{txt}{center 10:Mean}{txt}{center 10:sd}{txt}{center 11:Min}{txt}{center 11:Max}}
{txt}{center:{hline 85}}
{center:{txt}{lalign 34:\# of Members}{res}{center 7:92.00}{res}{center 10:553.36}{res}{center 10:376.42}{res}{center 11:11.00}{res}{center 11:2,600.00}}
{center:{txt}{lalign 34:Revenue (USD)}{res}{center 7:92.00}{res}{center 10:3,775.21}{res}{center 10:8,014.47}{res}{center 11:0.00}{res}{center 11:65,709.51}}
{center:{txt}{lalign 34:Costs (USD)}{res}{center 7:92.00}{res}{center 10:377.52}{res}{center 10:1,639.07}{res}{center 11:0.00}{res}{center 11:10,964.25}}
{center:{txt}{lalign 34:Net Revenue (USD)}{res}{center 7:90.00}{res}{center 10:3,473.19}{res}{center 10:8,245.85}{res}{center 11:-7,935.00}{res}{center 11:65,554.27}}
{center:{txt}{lalign 34:Revenue per Member (USD)}{res}{center 7:92.00}{res}{center 10:7.20}{res}{center 10:10.55}{res}{center 11:0.00}{res}{center 11:63.53}}
{center:{txt}{lalign 34:Net Revenue per Member (USD)}{res}{center 7:90.00}{res}{center 10:6.80}{res}{center 10:10.95}{res}{center 11:-13.22}{res}{center 11:63.53}}
{center:{txt}{lalign 34:Goat Revenue}{res}{center 7:90.00}{res}{center 10:111.86}{res}{center 10:203.73}{res}{center 11:0.00}{res}{center 11:1,029.40}}
{center:{txt}{lalign 34:Co-op has a Business Plan}{res}{center 7:90.00}{res}{center 10:0.52}{res}{center 10:0.49}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Planning Time Horizon (Years)}{res}{center 7:89.00}{res}{center 10:1.26}{res}{center 10:1.00}{res}{center 11:0.00}{res}{center 11:5.00}}
{center:{txt}{lalign 34:Expected Goats Sold}{res}{center 7:90.00}{res}{center 10:271.74}{res}{center 10:363.26}{res}{center 11:0.00}{res}{center 11:2,500.00}}
{center:{txt}{lalign 34:Expected Revenue (USD)}{res}{center 7:90.00}{res}{center 10:1,026.62}{res}{center 10:2,158.46}{res}{center 11:0.00}{res}{center 11:14,850.00}}
{center:{txt}{lalign 34:Planning \& Goals Summmary Index}{res}{center 7:89.00}{res}{center 10:0.06}{res}{center 10:0.91}{res}{center 11:-1.17}{res}{center 11:3.88}}
{center:{txt}{lalign 34:Transparency: Mandate}{res}{center 7:90.00}{res}{center 10:0.81}{res}{center 10:0.38}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Annual Report}{res}{center 7:90.00}{res}{center 10:0.84}{res}{center 10:0.36}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Annual Budget}{res}{center 7:90.00}{res}{center 10:0.82}{res}{center 10:0.38}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Financial Report}{res}{center 7:90.00}{res}{center 10:0.81}{res}{center 10:0.38}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Meeting Minutes}{res}{center 7:90.00}{res}{center 10:0.78}{res}{center 10:0.40}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Election Results}{res}{center 7:90.00}{res}{center 10:0.55}{res}{center 10:0.49}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 34:Transparency: Sale Records}{res}{center 7:90.00}{res}{center 10:0.76}{res}{center 10:0.43}{res}{center 11:0.00}{res}{center 11:1.00}}
{txt}{center:{hline 85}}


{com}.  
. 
. 
. 
. 
. ** communication **
. gl co_comm comm1 comm2 contact COM3 COM8 index_CO_comm HHcontact
{txt}
{com}.         
. ** Co-op vars
. local listsize : list sizeof global(co_comm)
{txt}
{com}. tokenize $co_comm
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - Communication: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Contacted SHG"\"Contacted by SHG"\"Total Co-op Contact"\"HH info sales"\"HH info activities"\"co-op level index"\"Total HH Contact") replace
{res}
{txt}{center:Co-op Level - Communication: Summmary Stats}
{txt}{center:{hline 59}}
{center:{txt}{lalign 21:}{txt}{center 7:N}{txt}{center 7:Mean}{txt}{center 7:sd}{txt}{center 7:Min}{txt}{center 8:Max}}
{txt}{center:{hline 59}}
{center:{txt}{lalign 21:Contacted SHG}{res}{center 7:90.00}{res}{center 7:9.54}{res}{center 7:12.90}{res}{center 7:0.00}{res}{center 8:90.00}}
{center:{txt}{lalign 21:Contacted by SHG}{res}{center 7:90.00}{res}{center 7:7.45}{res}{center 7:13.66}{res}{center 7:0.00}{res}{center 8:100.00}}
{center:{txt}{lalign 21:Total Co-op Contact}{res}{center 7:90.00}{res}{center 7:16.99}{res}{center 7:25.46}{res}{center 7:0.00}{res}{center 8:190.00}}
{center:{txt}{lalign 21:HH info sales}{res}{center 7:78.00}{res}{center 7:1.11}{res}{center 7:0.90}{res}{center 7:0.00}{res}{center 8:3.50}}
{center:{txt}{lalign 21:HH info activities}{res}{center 7:92.00}{res}{center 7:1.04}{res}{center 7:1.16}{res}{center 7:0.00}{res}{center 8:8.10}}
{center:{txt}{lalign 21:co-op level index}{res}{center 7:76.00}{res}{center 7:-0.08}{res}{center 7:0.78}{res}{center 7:-1.16}{res}{center 8:3.64}}
{center:{txt}{lalign 21:Total HH Contact}{res}{center 7:78.00}{res}{center 7:2.18}{res}{center 7:1.65}{res}{center 7:0.00}{res}{center 8:9.58}}
{txt}{center:{hline 59}}


{com}.  
.  
. * ------------------------------------------- 
.  
.  
. ** finance **
. gl co_finance revenue rev_member costs cost_member ///
>         assets assets_member liabilities liab_member goatrev goatrev_member ///
>         net_rev net_rev_member net_finances net_finances_member
{txt}
{com}.         
. ** Co-op vars
. local listsize : list sizeof global(co_finance)
{txt}
{com}. tokenize $co_finance
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - Finances: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Revenue"\"Rev. per Member"\"Costs"\"Costs per Mem."\"Assets"\"Assets per Mem."\"Liabilities"\"Liabilities per Mem."\"Goat Revenue"\"Goat Rev. per Mem."\"Net Revenue"\"Net Rev. per Mem."\"Net Finances"\"Net Fin. per Mem.") ///
> note("Currency measured in USD") addtable replace
{res}
{txt}{center:Co-op Level - Finances: Summmary Stats}
{txt}{center:{hline 77}}
{center:{txt}{lalign 22:}{txt}{center 7:N}{txt}{center 11:Mean}{txt}{center 11:sd}{txt}{center 12:Min}{txt}{center 12:Max}}
{txt}{center:{hline 77}}
{center:{txt}{lalign 22:Revenue}{res}{center 7:92.00}{res}{center 11:3,775.21}{res}{center 11:8,014.47}{res}{center 12:0.00}{res}{center 12:65,709.51}}
{center:{txt}{lalign 22:Rev. per Member}{res}{center 7:92.00}{res}{center 11:7.20}{res}{center 11:10.55}{res}{center 12:0.00}{res}{center 12:63.53}}
{center:{txt}{lalign 22:Costs}{res}{center 7:92.00}{res}{center 11:377.52}{res}{center 11:1,639.07}{res}{center 12:0.00}{res}{center 12:10,964.25}}
{center:{txt}{lalign 22:Costs per Mem.}{res}{center 7:92.00}{res}{center 11:0.55}{res}{center 11:2.30}{res}{center 12:0.00}{res}{center 12:18.27}}
{center:{txt}{lalign 22:Assets}{res}{center 7:90.00}{res}{center 11:33,020.56}{res}{center 11:40,397.44}{res}{center 12:0.00}{res}{center 12:257,985.61}}
{center:{txt}{lalign 22:Assets per Mem.}{res}{center 7:90.00}{res}{center 11:107.53}{res}{center 11:379.45}{res}{center 12:0.00}{res}{center 12:3,600.00}}
{center:{txt}{lalign 22:Liabilities}{res}{center 7:90.00}{res}{center 11:7,041.03}{res}{center 11:18,065.10}{res}{center 12:0.00}{res}{center 12:86,877.45}}
{center:{txt}{lalign 22:Liabilities per Mem.}{res}{center 7:90.00}{res}{center 11:13.78}{res}{center 11:36.17}{res}{center 12:0.00}{res}{center 12:217.19}}
{center:{txt}{lalign 22:Goat Revenue}{res}{center 7:90.00}{res}{center 11:111.86}{res}{center 11:203.73}{res}{center 12:0.00}{res}{center 12:1,029.40}}
{center:{txt}{lalign 22:Goat Rev. per Mem.}{res}{center 7:90.00}{res}{center 11:0.22}{res}{center 11:0.46}{res}{center 12:0.00}{res}{center 12:3.02}}
{center:{txt}{lalign 22:Net Revenue}{res}{center 7:90.00}{res}{center 11:3,473.19}{res}{center 11:8,245.85}{res}{center 12:-7,935.00}{res}{center 12:65,554.27}}
{center:{txt}{lalign 22:Net Rev. per Mem.}{res}{center 7:90.00}{res}{center 11:6.80}{res}{center 11:10.95}{res}{center 12:-13.22}{res}{center 12:63.53}}
{center:{txt}{lalign 22:Net Finances}{res}{center 7:90.00}{res}{center 11:29,452.71}{res}{center 11:49,576.76}{res}{center 12:-75,679.20}{res}{center 12:265,235.69}}
{center:{txt}{lalign 22:Net Fin. per Mem.}{res}{center 7:90.00}{res}{center 11:100.55}{res}{center 11:384.64}{res}{center 12:-189.20}{res}{center 12:3,600.00}}
{txt}{center:{hline 77}}
{txt}{center:Currency measured in USD}


{com}.         
.         
. * ------------------------------------------- 
. 
. 
. ** goat sales **
. 
. ** Co-op vars
. gl co_goatsales goats_sold goats_sold_member goatrev goatrev_member goatrev_sold ///
>                                 col_points index_CO_goatsales
{txt}
{com}. 
. ** HH vars
. gl hh_goatsales LS8 LS9 co_opgoatno co_opsalevalue ///
>                                 co_opshare visits_sale time_passed transp_cost index_salecost ///
>                                 net_goat_income netincome_goat
{txt}
{com}.         
. ** Co-op vars
. local listsize : list sizeof global(co_goatsales)
{txt}
{com}. tokenize $co_goatsales
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - Co-op Goat Sales: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Goats Sold"\"Goats Sold per Mem."\"Goat Revenue"\"Goat Rev. per Mem."\"Rev. per Goat Sold"\"Collection Points"\"CO Goat Sales Index") ///
> note("Currency measured in USD") addtable replace
{res}
{txt}{center:Co-op Level - Co-op Goat Sales: Summmary Stats}
{txt}{center:{hline 63}}
{center:{txt}{lalign 21:}{txt}{center 7:N}{txt}{center 8:Mean}{txt}{center 8:sd}{txt}{center 7:Min}{txt}{center 10:Max}}
{txt}{center:{hline 63}}
{center:{txt}{lalign 21:Goats Sold}{res}{center 7:90.00}{res}{center 8:189.82}{res}{center 8:244.66}{res}{center 7:0.00}{res}{center 10:1,129.00}}
{center:{txt}{lalign 21:Goats Sold per Mem.}{res}{center 7:90.00}{res}{center 8:0.77}{res}{center 8:3.83}{res}{center 7:0.00}{res}{center 10:36.36}}
{center:{txt}{lalign 21:Goat Revenue}{res}{center 7:90.00}{res}{center 8:111.86}{res}{center 8:203.73}{res}{center 7:0.00}{res}{center 10:1,029.40}}
{center:{txt}{lalign 21:Goat Rev. per Mem.}{res}{center 7:90.00}{res}{center 8:0.22}{res}{center 8:0.46}{res}{center 7:0.00}{res}{center 10:3.02}}
{center:{txt}{lalign 21:Rev. per Goat Sold}{res}{center 7:70.00}{res}{center 8:0.81}{res}{center 8:0.62}{res}{center 7:0.00}{res}{center 10:2.64}}
{center:{txt}{lalign 21:Collection Points}{res}{center 7:92.00}{res}{center 8:61.94}{res}{center 8:27.88}{res}{center 7:1.11}{res}{center 10:100.00}}
{center:{txt}{lalign 21:CO Goat Sales Index}{res}{center 7:90.00}{res}{center 8:-0.01}{res}{center 8:0.92}{res}{center 7:-1.75}{res}{center 10:2.19}}
{txt}{center:{hline 63}}
{txt}{center:Currency measured in USD}


{com}.  
.  
. ** HH vars
. local listsize : list sizeof global(hh_goatsales)
{txt}
{com}. tokenize $hh_goatsales
{txt}
{com}. 
. forv i = 1/`listsize' {c -(} 
{txt}  2{com}.  
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - HH Goat Sales: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Goats Sold"\"Goat Revenue"\"# Sold through Co-op"\"Rev. through Co-op"\"% Sold through Co-op"\"Trader Visits per Sale"\"Time Passed"\"Transportation Costs"\"Sale Costs Index"\"Net Goat Income"\"Net Income per Goat") addtable replace 
{res}
{txt}{center:Co-op Level - HH Goat Sales: Summmary Stats}
{txt}{center:{hline 75}}
{center:{txt}{lalign 24:}{txt}{center 7:N}{txt}{center 11:Mean}{txt}{center 10:sd}{txt}{center 10:Min}{txt}{center 11:Max}}
{txt}{center:{hline 75}}
{center:{txt}{lalign 24:Goats Sold}{res}{center 7:92.00}{res}{center 11:2.11}{res}{center 10:0.85}{res}{center 10:0.80}{res}{center 11:5.56}}
{center:{txt}{lalign 24:Goat Revenue}{res}{center 7:92.00}{res}{center 11:17,457.45}{res}{center 10:8,027.81}{res}{center 10:4,865.86}{res}{center 11:60,121.95}}
{center:{txt}{lalign 24:# Sold through Co-op}{res}{center 7:92.00}{res}{center 11:0.44}{res}{center 10:0.64}{res}{center 10:0.00}{res}{center 11:3.22}}
{center:{txt}{lalign 24:Rev. through Co-op}{res}{center 7:92.00}{res}{center 11:3,863.52}{res}{center 10:5,347.00}{res}{center 10:0.00}{res}{center 11:22,372.73}}
{center:{txt}{lalign 24:% Sold through Co-op}{res}{center 7:92.00}{res}{center 11:0.20}{res}{center 10:0.25}{res}{center 10:0.00}{res}{center 11:0.91}}
{center:{txt}{lalign 24:Trader Visits per Sale}{res}{center 7:92.00}{res}{center 11:-5.62}{res}{center 10:50.99}{res}{center 10:-489.39}{res}{center 11:0.00}}
{center:{txt}{lalign 24:Time Passed}{res}{center 7:92.00}{res}{center 11:-0.81}{res}{center 10:0.90}{res}{center 10:-3.88}{res}{center 11:0.00}}
{center:{txt}{lalign 24:Transportation Costs}{res}{center 7:92.00}{res}{center 11:-0.07}{res}{center 10:0.40}{res}{center 10:-3.77}{res}{center 11:0.00}}
{center:{txt}{lalign 24:Sale Costs Index}{res}{center 7:92.00}{res}{center 11:0.03}{res}{center 10:0.78}{res}{center 10:-6.01}{res}{center 11:0.51}}
{center:{txt}{lalign 24:Net Goat Income}{res}{center 7:92.00}{res}{center 11:76.73}{res}{center 10:97.44}{res}{center 10:-194.03}{res}{center 11:439.59}}
{center:{txt}{lalign 24:Net Income per Goat}{res}{center 7:92.00}{res}{center 11:30.67}{res}{center 10:42.94}{res}{center 10:-155.23}{res}{center 11:108.79}}
{txt}{center:{hline 75}}


{com}.  
. * -------------------------------------------   
. 
.         
. ** Transparency **
. 
. ** Co-op vars
. gl co_trn CO_TRN1 CO_TRN2 ///
>         CO_TRN3 CO_TRN4 CO_TRN5 ///
>         CO_TRN6 CO_TRN7 index_CO_TRN
{txt}
{com}.         
. ** HH vars
. gl hh_trn HH_TRN1 HH_TRN2 ///
>         HH_TRN3 HH_TRN4 HH_TRN5 ///
>         HH_TRN6 HH_TRN7 index_HH_TRN index_dTRN avg_dTRN
{txt}
{com}. 
. 
. ** Co-op vars
. local listsize : list sizeof global(co_trn)
{txt}
{com}. tokenize $co_trn
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - Co-op Transparency: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Mandate"\"Annual Report"\"Annual Budget"\"Financial Report"\"Meeting Minutes"\"Election Results"\"Sale Records"\"Co-op Index") addtable replace
{res}
{txt}{center:Co-op Level - Co-op Transparency: Summmary Stats}
{txt}{center:{hline 52}}
{center:{txt}{lalign 18:}{txt}{center 7:N}{txt}{center 6:Mean}{txt}{center 6:sd}{txt}{center 7:Min}{txt}{center 6:Max}}
{txt}{center:{hline 52}}
{center:{txt}{lalign 18:Mandate}{res}{center 7:90.00}{res}{center 6:0.81}{res}{center 6:0.38}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Report}{res}{center 7:90.00}{res}{center 6:0.84}{res}{center 6:0.36}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Budget}{res}{center 7:90.00}{res}{center 6:0.82}{res}{center 6:0.38}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Financial Report}{res}{center 7:90.00}{res}{center 6:0.81}{res}{center 6:0.38}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Meeting Minutes}{res}{center 7:90.00}{res}{center 6:0.78}{res}{center 6:0.40}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Election Results}{res}{center 7:90.00}{res}{center 6:0.55}{res}{center 6:0.49}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Sale Records}{res}{center 7:90.00}{res}{center 6:0.76}{res}{center 6:0.43}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Co-op Index}{res}{center 7:90.00}{res}{center 6:0.17}{res}{center 6:0.91}{res}{center 7:-1.98}{res}{center 6:0.98}}
{txt}{center:{hline 52}}


{com}.  
.  
. ** HH vars
. local listsize : list sizeof global(hh_trn)
{txt}
{com}. tokenize $hh_trn
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.  
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("Co-op Level - HH Awareness: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Mandate"\"Annual Report"\"Annual Budget"\"Financial Report"\"Meeting Minutes"\"Election Results"\"Sale Records"\"HH Index"\"Discrepancy Index"\"Avg. Discrepancy") addtable replace
{res}
{txt}{center:Co-op Level - HH Awareness: Summmary Stats}
{txt}{center:{hline 55}}
{center:{txt}{lalign 19:}{txt}{center 7:N}{txt}{center 7:Mean}{txt}{center 6:sd}{txt}{center 7:Min}{txt}{center 7:Max}}
{txt}{center:{hline 55}}
{center:{txt}{lalign 19:Mandate}{res}{center 7:92.00}{res}{center 7:0.45}{res}{center 6:0.28}{res}{center 7:0.00}{res}{center 7:1.00}}
{center:{txt}{lalign 19:Annual Report}{res}{center 7:92.00}{res}{center 7:0.52}{res}{center 6:0.30}{res}{center 7:0.00}{res}{center 7:1.00}}
{center:{txt}{lalign 19:Annual Budget}{res}{center 7:92.00}{res}{center 7:0.54}{res}{center 6:0.30}{res}{center 7:0.00}{res}{center 7:1.00}}
{center:{txt}{lalign 19:Financial Report}{res}{center 7:92.00}{res}{center 7:0.57}{res}{center 6:0.28}{res}{center 7:0.00}{res}{center 7:1.00}}
{center:{txt}{lalign 19:Meeting Minutes}{res}{center 7:92.00}{res}{center 7:0.52}{res}{center 6:0.29}{res}{center 7:0.00}{res}{center 7:1.00}}
{center:{txt}{lalign 19:Election Results}{res}{center 7:92.00}{res}{center 7:0.32}{res}{center 6:0.24}{res}{center 7:0.00}{res}{center 7:0.94}}
{center:{txt}{lalign 19:Sale Records}{res}{center 7:92.00}{res}{center 7:0.47}{res}{center 6:0.29}{res}{center 7:0.00}{res}{center 7:0.95}}
{center:{txt}{lalign 19:HH Index}{res}{center 7:92.00}{res}{center 7:0.07}{res}{center 6:1.05}{res}{center 7:-1.92}{res}{center 7:2.00}}
{center:{txt}{lalign 19:Discrepancy Index}{res}{center 7:90.00}{res}{center 7:-0.16}{res}{center 6:1.03}{res}{center 7:-3.28}{res}{center 7:1.32}}
{center:{txt}{lalign 19:Avg. Discrepancy}{res}{center 7:90.00}{res}{center 7:-0.33}{res}{center 6:0.22}{res}{center 7:-1.00}{res}{center 7:-0.02}}
{txt}{center:{hline 55}}


{com}.  
. * -------------------------------------------           
.         
. 
. 
. ** HH level dataset
. ********************************************* 
. clear
{txt}
{com}. use "$d3/r_HH_Merged_Ind.dta"
{txt}
{com}. 
. 
. ** HH indicators **
. 
. gl hh_summ COM3 COM8 index_HH_comm ///
>                                 LS8 LS9 co_opgoatno co_opsalevalue ///
>                                 net_goat_income index_HH_goatsales ///
>                                 visits_sale time_passed transp_cost index_salecost ///
>                                 index_dTRN ///
>                                 
{txt}
{com}. 
. local listsize : list sizeof global(hh_summ)
{txt}
{com}. tokenize $hh_summ
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using HH_summary.tex, tex statmat(A) sdec(2) coljust(l;c;l;l) title("Household Indicators - Summmary Statistics") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("HH info sales"\"HH info activities"\"HH level index"\"Goats Sold"\"Goat Revenue"\"# Sold through Co-op"\"Rev. through Co-op"\"Net Goat Income"\"HH Goat Sales Index"\"Trader Visits per Sale"\"Time Passed"\"Transportation Costs"\"Sale Costs Index"\"Transparency Discrepancy Index")replace
{res}
{txt}{center:Household Indicators - Summmary Statistics}
{txt}{center:{hline 80}}
{center:{txt}{lalign 32:}{txt}{center 10:N}{txt}{center 7:Mean}{txt}{center 8:sd}{txt}{center 11:Min}{txt}{center 10:Max}}
{txt}{center:{hline 80}}
{center:{txt}{lalign 32:HH info sales}{res}{center 10:1,261.00}{res}{center 7:1.37}{res}{center 8:1.75}{res}{center 11:0.00}{res}{center 10:10.00}}
{center:{txt}{lalign 32:HH info activities}{res}{center 10:2,149.00}{res}{center 7:1.10}{res}{center 8:3.50}{res}{center 11:0.00}{res}{center 10:100.00}}
{center:{txt}{lalign 32:HH level index}{res}{center 10:1,207.00}{res}{center 7:0.25}{res}{center 8:0.89}{res}{center 11:-0.47}{res}{center 10:9.14}}
{center:{txt}{lalign 32:Goats Sold}{res}{center 10:2,448.00}{res}{center 7:1.14}{res}{center 8:1.87}{res}{center 11:0.00}{res}{center 10:24.00}}
{center:{txt}{lalign 32:Goat Revenue}{res}{center 10:2,448.00}{res}{center 7:93.84}{res}{center 8:150.77}{res}{center 11:0.00}{res}{center 10:1,121.67}}
{center:{txt}{lalign 32:# Sold through Co-op}{res}{center 10:2,448.00}{res}{center 7:0.25}{res}{center 8:0.93}{res}{center 11:0.00}{res}{center 10:15.00}}
{center:{txt}{lalign 32:Rev. through Co-op}{res}{center 10:2,448.00}{res}{center 7:22.14}{res}{center 8:84.76}{res}{center 11:0.00}{res}{center 10:1,257.30}}
{center:{txt}{lalign 32:Net Goat Income}{res}{center 10:2,448.00}{res}{center 7:51.15}{res}{center 8:295.51}{res}{center 11:-9,867.33}{res}{center 10:1,121.67}}
{center:{txt}{lalign 32:HH Goat Sales Index}{res}{center 10:2,448.00}{res}{center 7:-0.07}{res}{center 8:0.90}{res}{center 11:-3.00}{res}{center 10:12.57}}
{center:{txt}{lalign 32:Trader Visits per Sale}{res}{center 10:1,276.00}{res}{center 7:-0.30}{res}{center 8:0.61}{res}{center 11:-5.00}{res}{center 10:0.00}}
{center:{txt}{lalign 32:Time Passed}{res}{center 10:1,276.00}{res}{center 7:-0.79}{res}{center 8:2.16}{res}{center 11:-30.00}{res}{center 10:0.00}}
{center:{txt}{lalign 32:Transportation Costs}{res}{center 10:1,276.00}{res}{center 7:-0.23}{res}{center 8:6.94}{res}{center 11:-247.50}{res}{center 10:0.00}}
{center:{txt}{lalign 32:Sale Costs Index}{res}{center 10:1,276.00}{res}{center 7:-0.30}{res}{center 8:1.15}{res}{center 11:-9.45}{res}{center 10:0.28}}
{center:{txt}{lalign 32:Transparency Discrepancy Index}{res}{center 10:1,647.00}{res}{center 7:0.31}{res}{center 8:0.98}{res}{center 11:-1.05}{res}{center 10:2.00}}
{txt}{center:{hline 80}}


{com}.  
. 
. 
. ** communication **
. gl hh_comm COM3 COM8 index_HH_comm HHcontact
{txt}
{com}.         
. ** Co-op vars
. local listsize : list sizeof global(hh_comm)
{txt}
{com}. tokenize $hh_comm
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("HH Level - Communication: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("HH info sales"\"HH info activities"\"HH level index"\"Total HH Contact") addtable replace
{res}
{txt}{center:HH Level - Communication: Summmary Stats}
{txt}{center:{hline 59}}
{center:{txt}{lalign 20:}{txt}{center 10:N}{txt}{center 6:Mean}{txt}{center 6:sd}{txt}{center 7:Min}{txt}{center 8:Max}}
{txt}{center:{hline 59}}
{center:{txt}{lalign 20:HH info sales}{res}{center 10:1,261.00}{res}{center 6:1.37}{res}{center 6:1.75}{res}{center 7:0.00}{res}{center 8:10.00}}
{center:{txt}{lalign 20:HH info activities}{res}{center 10:2,149.00}{res}{center 6:1.10}{res}{center 6:3.50}{res}{center 7:0.00}{res}{center 8:100.00}}
{center:{txt}{lalign 20:HH level index}{res}{center 10:1,207.00}{res}{center 6:0.25}{res}{center 6:0.89}{res}{center 7:-0.47}{res}{center 8:9.14}}
{center:{txt}{lalign 20:Total HH Contact}{res}{center 10:1,207.00}{res}{center 6:2.56}{res}{center 6:3.06}{res}{center 7:0.00}{res}{center 8:31.00}}
{txt}{center:{hline 59}}


{com}.  
.  
. * ------------------------------------------- 
. 
. ** goat sales **
. 
. ** Co-op vars
. gl co_goatsales goats_sold goats_sold_member goatrev goatrev_member goatrev_sold ///
>                                 col_points index_CO_goatsales
{txt}
{com}. 
. gl hh_goatsales LS8 LS9 co_opgoatno co_opsalevalue ///
>                                 co_opshare visits_sale LS41 LS42 index_salecost ///
>                                 net_goat_income netincome_goat
{txt}
{com}. 
. 
.  
. ** HH vars
. local listsize : list sizeof global(hh_goatsales)
{txt}
{com}. tokenize $hh_goatsales
{txt}
{com}. 
. forv i = 1/`listsize' {c -(} 
{txt}  2{com}.  
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("HH Level - HH Goat Sales: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Goats Sold"\"Goat Revenue"\"# Sold through Co-op"\"Rev. through Co-op"\"% Sold through Co-op"\"Trader Visits per Sale"\"Time Passed"\"Transportation Costs"\"Sale Costs Index"\"Net Goat Income"\"Net Income per Goat") ///
> note("Currency measured in USD") addtable replace 
{res}
{txt}{center:HH Level - HH Goat Sales: Summmary Stats}
{txt}{center:{hline 73}}
{center:{txt}{lalign 24:}{txt}{center 10:N}{txt}{center 7:Mean}{txt}{center 8:sd}{txt}{center 11:Min}{txt}{center 11:Max}}
{txt}{center:{hline 73}}
{center:{txt}{lalign 24:Goats Sold}{res}{center 10:2,448.00}{res}{center 7:1.14}{res}{center 8:1.87}{res}{center 11:0.00}{res}{center 11:24.00}}
{center:{txt}{lalign 24:Goat Revenue}{res}{center 10:2,448.00}{res}{center 7:93.84}{res}{center 8:150.77}{res}{center 11:0.00}{res}{center 11:1,121.67}}
{center:{txt}{lalign 24:# Sold through Co-op}{res}{center 10:2,448.00}{res}{center 7:0.25}{res}{center 8:0.93}{res}{center 11:0.00}{res}{center 11:15.00}}
{center:{txt}{lalign 24:Rev. through Co-op}{res}{center 10:2,448.00}{res}{center 7:22.14}{res}{center 8:84.76}{res}{center 11:0.00}{res}{center 11:1,257.30}}
{center:{txt}{lalign 24:% Sold through Co-op}{res}{center 10:2,448.00}{res}{center 7:0.10}{res}{center 8:0.29}{res}{center 11:0.00}{res}{center 11:1.00}}
{center:{txt}{lalign 24:Trader Visits per Sale}{res}{center 10:1,276.00}{res}{center 7:-0.30}{res}{center 8:0.61}{res}{center 11:-5.00}{res}{center 11:0.00}}
{center:{txt}{lalign 24:Time Passed}{res}{center 10:1,276.00}{res}{center 7:0.79}{res}{center 8:2.16}{res}{center 11:0.00}{res}{center 11:30.00}}
{center:{txt}{lalign 24:Transportation Costs}{res}{center 10:1,276.00}{res}{center 7:23.14}{res}{center 8:701.05}{res}{center 11:0.00}{res}{center 11:25,000.00}}
{center:{txt}{lalign 24:Sale Costs Index}{res}{center 10:1,276.00}{res}{center 7:-0.30}{res}{center 8:1.15}{res}{center 11:-9.45}{res}{center 11:0.28}}
{center:{txt}{lalign 24:Net Goat Income}{res}{center 10:2,448.00}{res}{center 7:51.15}{res}{center 8:295.51}{res}{center 11:-9,867.33}{res}{center 11:1,121.67}}
{center:{txt}{lalign 24:Net Income per Goat}{res}{center 10:1,214.00}{res}{center 7:62.76}{res}{center 8:72.14}{res}{center 11:-1,233.42}{res}{center 11:723.69}}
{txt}{center:{hline 73}}
{txt}{center:Currency measured in USD}


{com}.  
. * -------------------------------------------   
. 
.         
. ** Transparency **
. 
. ** HH vars
. gl hh_trn_d HH_TRN1 HH_TRN2 ///
>         HH_TRN3 HH_TRN4 HH_TRN5 ///
>         HH_TRN6 HH_TRN7 index_HH_TRN avg_dTRN
{txt}
{com}. 
. 
. ** Co-op vars
. local listsize : list sizeof global(co_trn)
{txt}
{com}. tokenize $co_trn
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.                 
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("HH Level - Co-op Transparency: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Mandate"\"Annual Report"\"Annual Budget"\"Financial Report"\"Meeting Minutes"\"Election Results"\"Sale Records"\"Co-op Index") addtable replace
{res}
{txt}{center:HH Level - Co-op Transparency: Summmary Stats}
{txt}{center:{hline 55}}
{center:{txt}{lalign 18:}{txt}{center 10:N}{txt}{center 6:Mean}{txt}{center 6:sd}{txt}{center 7:Min}{txt}{center 6:Max}}
{txt}{center:{hline 55}}
{center:{txt}{lalign 18:Mandate}{res}{center 10:2,400.00}{res}{center 6:0.80}{res}{center 6:0.37}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Report}{res}{center 10:2,400.00}{res}{center 6:0.83}{res}{center 6:0.34}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Budget}{res}{center 10:2,400.00}{res}{center 6:0.81}{res}{center 6:0.37}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Financial Report}{res}{center 10:2,400.00}{res}{center 6:0.80}{res}{center 6:0.37}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Meeting Minutes}{res}{center 10:2,400.00}{res}{center 6:0.77}{res}{center 6:0.39}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Election Results}{res}{center 10:2,400.00}{res}{center 6:0.54}{res}{center 6:0.47}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Sale Records}{res}{center 10:2,400.00}{res}{center 6:0.76}{res}{center 6:0.41}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Co-op Index}{res}{center 10:2,400.00}{res}{center 6:0.20}{res}{center 6:0.92}{res}{center 7:-1.97}{res}{center 6:1.06}}
{txt}{center:{hline 55}}


{com}.  
.  
. ** HH vars
. local listsize : list sizeof global(hh_trn_d)
{txt}
{com}. tokenize $hh_trn_d
{txt}
{com}. 
. forv i = 1/`listsize' {c -(}
{txt}  2{com}.  
.         quietly {c -(}
{txt}  3{com}.                 sum ``i''
{txt}  4{com}.                 return list
{txt}  5{com}.                 scalar N_``i'' = r(N) // N
{txt}  6{com}.                 scalar mean_``i'' = r(mean) // mean
{txt}  7{com}.                 scalar sd_``i'' = r(sd)  // sd
{txt}  8{com}.                 scalar min_``i'' = r(min)  // sd
{txt}  9{com}.                 scalar max_``i'' = r(max)  // sd
{txt} 10{com}.                 
.         * matrix for table
.                 matrix mat_`i' = (N_``i'',mean_``i'',sd_``i'',min_``i'',max_``i'')
{txt} 11{com}.                 {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. matrix A = mat_1
{txt}
{com}. forv i = 2/`listsize' {c -(} // appends into single matrix
{txt}  2{com}.         matrix A = A \ mat_`i'
{txt}  3{com}. {c )-}
{txt}
{com}. 
. * Table
. frmttable using MDE_summary.doc, statmat(A) sdec(2) coljust(l;c;l;l) title("HH Level - HH Awareness: Summmary Stats") ///
> ctitle("","N","Mean","sd","Min","Max") ///
> rtitle("Mandate"\"Annual Report"\"Annual Budget"\"Financial Report"\"Meeting Minutes"\"Election Results"\"Sale Records"\"HH Index"\"Avg. Discrepancy") addtable replace
{res}
{txt}{center:HH Level - HH Awareness: Summmary Stats}
{txt}{center:{hline 55}}
{center:{txt}{lalign 18:}{txt}{center 10:N}{txt}{center 6:Mean}{txt}{center 6:sd}{txt}{center 7:Min}{txt}{center 6:Max}}
{txt}{center:{hline 55}}
{center:{txt}{lalign 18:Mandate}{res}{center 10:1,930.00}{res}{center 6:0.45}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Report}{res}{center 10:1,938.00}{res}{center 6:0.52}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Annual Budget}{res}{center 10:1,952.00}{res}{center 6:0.54}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Financial Report}{res}{center 10:1,937.00}{res}{center 6:0.56}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Meeting Minutes}{res}{center 10:1,996.00}{res}{center 6:0.54}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Election Results}{res}{center 10:1,821.00}{res}{center 6:0.32}{res}{center 6:0.47}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:Sale Records}{res}{center 10:1,919.00}{res}{center 6:0.48}{res}{center 6:0.50}{res}{center 7:0.00}{res}{center 6:1.00}}
{center:{txt}{lalign 18:HH Index}{res}{center 10:1,667.00}{res}{center 6:0.21}{res}{center 6:1.00}{res}{center 7:-0.92}{res}{center 6:1.59}}
{center:{txt}{lalign 18:Avg. Discrepancy}{res}{center 10:2,092.00}{res}{center 6:0.46}{res}{center 6:0.37}{res}{center 7:0.00}{res}{center 6:1.00}}
{txt}{center:{hline 55}}


{com}.  
.         
. 
{txt}end of do-file

{com}. sum EQP4
{bf}{err}EQP4{sf} ambiguous abbreviation
{txt}{search r(111), local:r(111);}

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD01874.000000"
{txt}
{com}. clear
{txt}
{com}. use "$d3/r_CO_Merged_Ind.dta"
{txt}
{com}. 
{txt}end of do-file

{com}. sum EQP4_1

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}EQP4_1 {c |}{res}         90    .8240741    .3775546          0          1

{com}. count if EQP4_1 != 0
  {res}77

{com}. bysort treat : count if EQP4_1 = 0
{err}variable {bf}treat{sf} not found
{txt}{search r(111), local:r(111);}

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD01874.000000"
{txt}
{com}. clear 
{txt}
{com}. use "$d3/r_CO_Merged_Ind_treat.dta"
{txt}( )

{com}. 
{txt}end of do-file

{com}. bysort treat : count if EQP4_1 = 0

{txt}{hline}
-> treat = 0
{err}=exp not allowed
{txt}{search r(101), local:r(101);}

{com}. bysort treat : count if EQP4_1 == 0

{txt}{hline}
-> treat = 0
  {res}8
{txt}{hline}
-> treat = 1
  {res}7

{com}. do "/Users/scottmiller/Documents/GitHub/LSIL_PAP/lsilPAP6.do"
{txt}
{com}. 
. clear 
{txt}
{com}. use "$d3/r_CO_Merged_Ind.dta"
{txt}
{com}. 
. * ---------------------------------------------------
. ** Add true treatment status to this dataset
. * Merge treatment status from original randomization
. 
. * Original dataset
. clear
{txt}
{com}. use "/Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Merged/Baseline_Merged_Str.dta", clear
{txt}( )

{com}. recast str99 idx // idx is str99 in r_Baseline_Merged_Str
{txt}
{com}. 
. keep idx treat
{txt}
{com}. 
. save "$d3/treat.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline aug 20 2018/treat.dta saved

{com}. 
. merge 1:1 idx using "$d3/r_CO_Merged_Ind.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}              14
{txt}{col 9}from master{col 30}{res}              14{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}              92{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 1 // banke district in original treatment status
{txt}(14 observations deleted)

{com}. 
. save "$d3/r_CO_Merged_Ind_treat.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline aug 20 2018/r_CO_Merged_Ind_treat.dta saved

{com}. * ---------------------------------------------------
. 
. * Balance tables after dropping Banke district
. clear 
{txt}
{com}. use "$d3/r_CO_Merged_Ind_treat.dta"
{txt}( )

{com}. 
. 
. lab var COMM6_1 "Co-op sends sale info by word-of-mouth"
{txt}
{com}. lab var COMM6_2 "Co-op sends sale info by SMS to SHG leaders"
{txt}
{com}. lab var COMM6_3 "Co-op sends sale info by SMS to members"
{txt}
{com}. lab var COMM6_4 "Co-op sends sale info by phone call to SHG leaders"
{txt}
{com}. lab var COMM6_5 "Co-op sends sale info by phone call to members"
{txt}
{com}. lab var COMM6_6 "Co-op sends sale info by announcement at SHG meetings"
{txt}
{com}. lab var COMM6_7 "Co-op sends sale info by announcement at general assembly"
{txt}
{com}. lab var COMM6_8 "Co-op does not send sale info"
{txt}
{com}. 
. lab var COMM1a "No. of times initiated SHG contact by SMS in past month"
{txt}
{com}. lab var COMM1b "No. of times initiated SHG contact by phone in past month"
{txt}
{com}. lab var COMM1c "No. of times initiated SHG contact by email in past month"
{txt}
{com}. lab var COMM1d "No. of times initiated SHG contact face-to-face in past month"
{txt}
{com}. 
. lab var COMM2a "No. of times SHG leader initiated contact by SMS in past month"
{txt}
{com}. lab var COMM2b "No. of times SHG leader initiated contact by phone in past month"
{txt}
{com}. lab var COMM2c "No. of times SHG leader initiated  contact by email in past month"
{txt}
{com}. lab var COMM2d "No. of times SHG leader initiated contact face-to-face in past month"
{txt}
{com}. 
. foreach v of varlist COMM8a COMM8b ///
> COMM8c COMM8d COMM8e ///
> COMM8f {c -(}
{txt}  2{com}.         qui tab `v', g(`v'_)
{txt}  3{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8a_`j' "Internet `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8b_`j' "Mobile network `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8c_`j' "Cost of SMS `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8d_`j' "Distance between members `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8e_`j' "Road quality `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. local j 1
{txt}
{com}. foreach i in seriously somewhat "doesn't" {c -(}
{txt}  2{com}.         lab var COMM8f_`j' "Access to transport `i' limits communication"
{txt}  3{com}.         local ++j
{txt}  4{com}. {c )-}
{txt}
{com}. 
. foreach v of varlist COMM6_1 COMM6_2 COMM6_3 ///
> COMM6_4 COMM6_5 COMM6_6 ///
> COMM6_7 COMM6_8 ///
> COMM8a_1 COMM8b_1 ///
> COMM8c_1 COMM8d_1 ///
> COMM8e_1  COMM8f_1 ///
> COMM1a COMM1b COMM1c ///
> COMM1d ///
> COMM2a COMM2b COMM2c ///
> COMM2d {c -(}
{txt}  2{com}.         cap destring `v', replace
{txt}  3{com}. {c )-}
{txt}
{com}. 
. 
. lab var revenue "Co-op Revenue (USD)"
{txt}
{com}. lab var rev_member "Co-op Revenue per Member (USD)"
{txt}
{com}. lab var costs "Co-op Costs (UDS)"
{txt}
{com}. lab var cost_mem "Co-op Costs per Member (USD)"
{txt}
{com}. lab var net_rev "Co-op Net Revenue (UDS)"
{txt}
{com}. lab var net_rev_member "Co-op Net Revenue per Member (USD)"
{txt}
{com}. lab var goats_sold "Co-op Goats Sold"
{txt}
{com}. lab var goatssold_mem "Co-op Goats Sold per Member"
{txt}
{com}. lab var MAN3 "\# of Members"
{txt}
{com}. lab var PNG1 "Does the cooperative have a written business plan?"
{txt}
{com}. lab var PNG2 "Planning Tume Horizon (Years)"
{txt}
{com}. lab var PNG3 "Expected Goats Sold over next 6 months"
{txt}
{com}. lab var expected_rev "Expected Revenue over next 6 months (USD)"
{txt}
{com}. lab var index_PNG "Planning & Goals Summary Index"
{txt}
{com}. lab var CO_TRN1 "Co-op makes its mandate available to its members"
{txt}
{com}. lab var CO_TRN2 "Co-op makes its annual report available to its members"
{txt}
{com}. lab var CO_TRN3 "Co-op makes its annual budget available to its members"
{txt}
{com}. lab var CO_TRN4 "Co-op makes its financial report available to its members"
{txt}
{com}. lab var CO_TRN5 "Co-op makes its meeting minutes available to its members"
{txt}
{com}. lab var CO_TRN6 "Co-op makes its election results available to its members"
{txt}
{com}. lab var CO_TRN7 "Co-op makes its sale records available to its members"
{txt}
{com}. lab var GTT1 "% of goats expected to be sold through co-op"
{txt}
{com}. lab var GTT2 "% of goats expected to be sold through other channels"
{txt}
{com}. lab var GTT3 "% of goats expected to not be sold"
{txt}
{com}. 
. *iebaltable
. 
. iebaltab revenue rev_member costs cost_mem net_rev net_rev_member ///
>                 goats_sold goatssold_mem MAN3 ///
>                 PNG1 PNG2 PNG3 expected_rev index_PNG ///
>                 COMM6_1 COMM6_2 ///
>                 COMM6_4 COMM6_5 COMM6_6 ///
>                 COMM6_7 COMM6_8 ///
>                 COMM8a_1 COMM8b_1 ///
>                 COMM8c_1 COMM8d_1 ///
>                 COMM8e_1  COMM8f_1 ///
>                 CO_TRN1 CO_TRN2 CO_TRN3 CO_TRN4 CO_TRN5 ///
>                 CO_TRN6 CO_TRN7 ///
>                 GTT1 GTT2 GTT3, rowvarlabels grpvar(treat) ///
>                 savetex("/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab1_nobanke_PAP.tex") replace
{res}{phang}Balance table saved to: {browse "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab1_nobanke_PAP.tex":/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab1_nobanke_PAP.tex} 
{txt}
{smcl}
{com}. 
. 
. * ---------------------------------------------------
. ** Add true treatment status to this dataset
. * Merge treatment status from original randomization
. * Original dataset
. clear
{txt}
{com}. use "$d3/r_HH_Merged_Ind.dta"
{txt}
{com}. drop _merge
{txt}
{com}. 
. merge m:1 idx using "$d3/treat.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}              14
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}              14{txt}  (_merge==2)

{col 5}matched{col 30}{res}           2,448{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 1 // banke district in original treatment status
{txt}(0 observations deleted)

{com}. drop if idx == "Karmath SEWC 2" | idx == "Lekhbesi SEWC 1"
{txt}(0 observations deleted)

{com}. 
. save "$d3/r_HH_Merged_Ind_treat.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline aug 20 2018/r_HH_Merged_Ind_treat.dta saved

{com}. * ---------------------------------------------------           
.                 
.                 
. clear
{txt}
{com}. use "$d3/r_HH_Merged_Ind_treat.dta"
{txt}
{com}. 
. replace HHR14 = . if HHR4 < 18
{txt}(2 real changes made, 2 to missing)

{com}. 
. *rename Co_opTransparencyTransparency_no Co_opTransparency_no
. *rename Live_EntexofemaleExotic_Female Live_Exotic_Female
. *rename Live_EntcrofemaleCross_Breed_Fem Live_Cross_Breed_Fem
. *rename Live_EntCro_breed_female_goats Live_breed_female_goats
. 
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Follow_up", "Follup",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         cap local vv = subinstr("`v'", "Food_Consumption", "Food_Cons",.) // names too long for macros
{txt}  8{com}.         if _rc == 0 {c -(}
{txt}  9{com}.                 rename `v' `vv'
{txt} 10{com}.                 local v `vv'
{txt} 11{com}.         {c )-}
{txt} 12{com}.         cap local vv = subinstr("`v'", "_related_", "",.) // names too long for macros
{txt} 13{com}.         if _rc == 0 {c -(}
{txt} 14{com}.                 rename `v' `vv'
{txt} 15{com}.                 local v `vv'
{txt} 16{com}.         {c )-}
{txt} 17{com}.         cap local vv = subinstr("`v'", "Enterprises", "Enterp",.) // names too long for macros
{txt} 18{com}.         if _rc == 0 {c -(}
{txt} 19{com}.                 rename `v' `vv'
{txt} 20{com}.                 local v `vv'
{txt} 21{com}.         {c )-}
{txt} 22{com}.         cap local vv = subinstr("`v'", "questionnaire", "",.) // names too long for macros
{txt} 23{com}.         if _rc == 0 {c -(}
{txt} 24{com}.                 rename `v' `vv'
{txt} 25{com}.                 local v `vv'
{txt} 26{com}.         {c )-}
{txt} 27{com}.         local l`v' : variable label `v'
{txt} 28{com}.         local ll`v': val lab `v'
{txt} 29{com}.         if `"`l`v''"' == "" {c -(}
{txt} 30{com}.                 local l`v' "`v'"
{txt} 31{com}.         {c )-}
{txt} 32{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. lab var COM3 "No. of times in past 6 months receive info about livestock sales"
{txt}
{com}. 
. * Winsorize LS9 by treatment status
. sum LS9, d

     {txt}LS9 How much did you earn in total from this sale?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}        0              0       {txt}Obs         {res}      2,448
{txt}25%    {res}        0              0       {txt}Sum of Wgt. {res}      2,448

{txt}50%    {res}        0                      {txt}Mean          {res} 93.84167
                        {txt}Largest       Std. Dev.     {res} 150.7685
{txt}75%    {res}    138.6        1121.67
{txt}90%    {res}    267.3        1121.67       {txt}Variance      {res} 22731.13
{txt}95%    {res}    366.3        1121.67       {txt}Skewness      {res} 2.865138
{txt}99%    {res}    742.5        1121.67       {txt}Kurtosis      {res}  14.6434
{txt}
{com}. 
. * treatment
. sum LS9 if treat == 1, d

     {txt}LS9 How much did you earn in total from this sale?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}        0              0       {txt}Obs         {res}      1,248
{txt}25%    {res}        0              0       {txt}Sum of Wgt. {res}      1,248

{txt}50%    {res}   14.355                      {txt}Mean          {res} 99.71177
                        {txt}Largest       Std. Dev.     {res} 161.5279
{txt}75%    {res}    148.5        1121.67
{txt}90%    {res}    277.2        1121.67       {txt}Variance      {res} 26091.25
{txt}95%    {res}      396        1121.67       {txt}Skewness      {res} 2.927918
{txt}99%    {res}    851.4        1121.67       {txt}Kurtosis      {res}  14.8848
{txt}
{com}. scalar t_99 = r(p99)
{txt}
{com}. 
. replace LS9 = t_99 if LS9 > t_99 & !missing(LS9) & treat == 1
{txt}(12 real changes made)

{com}. 
. *control
. sum LS9 if treat == 0, d

     {txt}LS9 How much did you earn in total from this sale?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}        0              0       {txt}Obs         {res}      1,200
{txt}25%    {res}        0              0       {txt}Sum of Wgt. {res}      1,200

{txt}50%    {res}        0                      {txt}Mean          {res} 87.73677
                        {txt}Largest       Std. Dev.     {res} 138.5001
{txt}75%    {res}    128.7            891
{txt}90%    {res}  249.975            891       {txt}Variance      {res} 19182.29
{txt}95%    {res}    346.5          910.8       {txt}Skewness      {res} 2.666266
{txt}99%    {res}    683.1        1121.67       {txt}Kurtosis      {res} 12.96663
{txt}
{com}. scalar c_99 = r(p99)
{txt}
{com}. 
. replace LS9 = c_99 if LS9 > c_99 & !missing(LS9) & treat == 0
{txt}(12 real changes made)

{com}. 
. ** Replace Missing values with zero 
. * LS9 , 
. replace LS9 = 0 if LS9 ==.
{txt}(14 real changes made)

{com}. replace co_opsalevalue = 0 if co_opsalevalue ==.
{txt}(14 real changes made)

{com}. 
. 
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. lab var COM3 "HH Info Sales"
{txt}
{com}. lab var COM8 "HH Info Activities"
{txt}
{com}. lab var index_HH_comm "Communication Summary Index"
{txt}
{com}. lab var LS8 "Goats Sold"
{txt}
{com}. lab var LS9 "Goats Revenue (USD)"
{txt}
{com}. lab var co_opgoatno "Goats Sold through Co-op"
{txt}
{com}. lab var co_opsalevalue "Goat Revenue through Co-op (USD)"
{txt}
{com}. lab var net_goat_income "Net Goat Income (USD)"
{txt}
{com}. lab var index_HH_goatsales "Goat Sales Summary Index"
{txt}
{com}. lab var visits_sale "Trader Visits per Sale"
{txt}
{com}. lab var time_passed "Time between Contact & Sale (Days)"
{txt}
{com}. lab var transp_cost "Transportation Costs (USD)"
{txt}
{com}. lab var index_salecost "Sales Cost Summary Index"
{txt}
{com}. lab var index_dTRN "Transparency Discrepancy Summary Index"
{txt}
{com}. 
. 
. 
. *iebaltable
. 
. iebaltab COM3 COM8 index_HH_comm ///
>                 LS8 LS9 co_opgoatno co_opsalevalue ///
>                 net_goat_income index_HH_goatsales ///
>                 visits_sale time_passed transp_cost index_salecost ///
>                 index_dTRN ///
>                 HHR14 HSE5 HSE10  ///
>                 MGT5 COM3 COM5 ///
>                 BR1 BR BR2 ///
>                 BR3 GP21, rowvarlabels ///
>                 grpvar(treat) vce(cluster idx)  ///
>                 savetex("/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab2_nobanke_PAP.tex") replace
{res}{phang}Balance table saved to: {browse "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab2_nobanke_PAP.tex":/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/iebaltab2_nobanke_PAP.tex} 
{txt}
{smcl}
{com}.                 
.                 
.                 
.                 
.                 
.                 
. 
{txt}end of do-file

{com}. 