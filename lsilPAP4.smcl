{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/scottmiller/GitHub/LSIL_PAP/lsilPAP4.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}17 May 2019, 14:44:51
{txt}
{com}. 
. cd "$d3" 
{res}/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline clean
{txt}
{com}. 
. 
. ** co-op dataset **
. clear
{txt}
{com}. use "r_CO_Merged_PAP.dta"
{txt}( )

{com}. 
. * Drop Banke District & Pilot Co-op
. drop if district == "Banke"
{txt}(0 observations deleted)

{com}. drop if r_treat ==.
{txt}(0 observations deleted)

{com}. drop if idx == "" 
{txt}(0 observations deleted)

{com}. 
. * Weights = 1 & control group
. generate wgt = 1
{txt}
{com}. generate stdgroup = r_treat
{txt}
{com}. 
. encode region, gen(n_region) // create numerical region variable for regression
{txt}
{com}. 
. 
. ** Winsorize LS9
. * -----------------------------------------------
. gen LS9_w = LS9
{txt}
{com}. 
. * treatment
. sum LS9_w if r_treat == 1, d

                            {txt}LS9_w
{hline 61}
      Percentiles      Smallest
 1%    {res} 4865.857       4865.857
{txt} 5%    {res} 9594.595           5885
{txt}10%    {res} 9975.609       9594.595       {txt}Obs         {res}         46
{txt}25%    {res} 11251.85       9857.143       {txt}Sum of Wgt. {res}         46

{txt}50%    {res} 16779.13                      {txt}Mean          {res} 16889.71
                        {txt}Largest       Std. Dev.     {res}  6298.32
{txt}75%    {res}  22689.6          26250
{txt}90%    {res} 24371.43          26300       {txt}Variance      {res} 3.97e+07
{txt}95%    {res}    26300       27681.82       {txt}Skewness      {res} .2687124
{txt}99%    {res} 32828.79       32828.79       {txt}Kurtosis      {res} 2.418001
{txt}
{com}. scalar t_99 = r(p99)
{txt}
{com}. 
. replace LS9_w = t_99 if LS9_w > t_99 & !missing(LS9_w) & r_treat == 1
{txt}(0 real changes made)

{com}. 
. *control
. sum LS9_w if r_treat == 0, d

                            {txt}LS9_w
{hline 61}
      Percentiles      Smallest
 1%    {res}  8730.77        8730.77
{txt} 5%    {res} 10828.57       9808.333
{txt}10%    {res} 11509.38       10828.57       {txt}Obs         {res}         46
{txt}25%    {res} 12773.68       10992.68       {txt}Sum of Wgt. {res}         46

{txt}50%    {res} 14784.64                      {txt}Mean          {res} 17610.12
                        {txt}Largest       Std. Dev.     {res} 9146.532
{txt}75%    {res}    18850       27211.87
{txt}90%    {res} 26539.14          35955       {txt}Variance      {res} 8.37e+07
{txt}95%    {res}    35955       44044.45       {txt}Skewness      {res} 2.927083
{txt}99%    {res} 60121.95       60121.95       {txt}Kurtosis      {res} 12.68691
{txt}
{com}. scalar c_99 = r(p99)
{txt}
{com}. 
. replace LS9_w = c_99 if LS9_w > c_99 & !missing(LS9_w) & r_treat == 0
{txt}(0 real changes made)

{com}. 
. 
. ** Replace Missing values with zero 
. * LS9 , 
. replace LS9_w = 0 if LS9_w ==.
{txt}(0 real changes made)

{com}. replace co_opsalevalue = 0 if co_opsalevalue ==.
{txt}(0 real changes made)

{com}. * -----------------------------------------------
. */
. 
. 
. ** Communication **
. 
. /* Variables 
> # of times initiated contact with SHG : comm1
> # of times SHG initiated contact : comm2
> Factors that limit communication : (not in index - used as control vars)
> */
. 
.         * # of times initiated contact with SHG : comm1
.         gen comm1 = COMM1a + COMM1b ///
>         + COMM1c + COMM1d
{txt}(2 missing values generated)

{com}.         * # of times SHG initiated contact : comm2
.         gen comm2 = COMM2a + COMM2b ///
>         + COMM2c + COMM2d
{txt}(2 missing values generated)

{com}.         ** Total # of times initiated contact
.         gen contact = comm1 + comm2
{txt}(2 missing values generated)

{com}.         
.         * Total # of times HH is contacted
.         gen HHcontact = COM3 + COM8
{txt}(14 missing values generated)

{com}.         
. 
. * co-op comm index
. local local_CO_comm_full contact COM3 COM8
{txt}
{com}. make_index_gr CO_comm_full wgt stdgroup `local_CO_comm_full' 
{res}  935
{txt}
{com}. 
. * factors that limit communication
.         * principal components index
. 
. 
. ** Transparency **
. 
. /* Variables
> Mandate : Co_opTransparencyTRN1
> Annual Report : Co_opTransparencyTRN2
> Annual Budget : Co_opTransparencyTRN3
> Financial Report: Co_opTransparencyTRN4 
> Meeting minutes : Co_opTransparencyTRN5
> Election Results : Co_opTransparencyTRN6
> Sale Records : Co_opTransparencyTRN7
> Evaluations : Co_opTransparencyTRN8
> */
.         
. ** Co-op Transparency   
. local local_CO_TRN CO_TRN1 CO_TRN2 ///
>         CO_TRN3 CO_TRN4 CO_TRN5 ///
>         CO_TRN6 CO_TRN7
{txt}
{com}. make_index_gr CO_TRN wgt stdgroup `local_CO_TRN' 
{res}  936
{txt}
{com}. 
. 
. ** Household Awareness
. local local_HH_TRN HH_TRN1 HH_TRN2 ///
>         HH_TRN3 HH_TRN4 HH_TRN5 ///
>         HH_TRN6 HH_TRN7
{txt}
{com}. make_index_gr HH_TRN wgt stdgroup `local_HH_TRN' 
{res}  937
{txt}
{com}. 
. 
. ** Discrepancy
.         forvalues i=1/7 {c -(} 
{txt}  2{com}.                 gen dTRN`i' = -(CO_TRN`i' - HH_TRN`i')^2
{txt}  3{com}.                 {c )-}
{txt}(2 missing values generated)
(2 missing values generated)
(2 missing values generated)
(2 missing values generated)
(2 missing values generated)
(2 missing values generated)
(2 missing values generated)

{com}.                 
. local local_dTRN dTRN1 dTRN2 dTRN3 dTRN4 dTRN5 dTRN6 dTRN7
{txt}
{com}. make_index_gr dTRN wgt stdgroup `local_dTRN' 
{res}  945
{txt}
{com}. 
. * average discrepancy
. egen avg_dTRN = rowmean(dTRN1 dTRN2 dTRN3 dTRN4 dTRN5 dTRN6 dTRN7)
{txt}(2 missing values generated)

{com}. 
. 
. ** Cooperative Finances **
. 
. /* Variables 
> Revenue from all activities : role_GMrevenuandcostREV4
> Costs from all activities : role_GMrevenuandcostcalc_REC7
> Assets : role_GMFinLiabiliteisFAL1
> Liabilities : role_GMFinLiabiliteisFAL2
> Goat Rev : role_GMrevenuandcostREC4_1
> Members : role_CPMgt_and_membershi1
> */
. 
. * Convert to USD as of 1/1/18
. 
. gen revenue = REV4*(0.0099)
{txt}(2 missing values generated)

{com}. gen costs = REC7*(0.0099)
{txt}(2 missing values generated)

{com}. gen assets = FAL1*(0.0099)
{txt}(2 missing values generated)

{com}. gen liabilities = FAL2*(0.0099)
{txt}(2 missing values generated)

{com}. gen goatrev = REC4_1*(0.0099)
{txt}(2 missing values generated)

{com}. 
. gen net_rev = revenue - costs
{txt}(2 missing values generated)

{com}. gen net_finances = (revenue - costs) ///
>                                         + (assets - liabilities)
{txt}(2 missing values generated)

{com}. 
. * per member
. gen rev_member = revenue / MAN3
{txt}(2 missing values generated)

{com}. gen cost_member =  costs / MAN3
{txt}(2 missing values generated)

{com}. gen assets_member = assets / MAN3
{txt}(2 missing values generated)

{com}. gen liab_member = liabilities / MAN3
{txt}(2 missing values generated)

{com}. gen net_rev_member = net_rev / MAN3
{txt}(2 missing values generated)

{com}. gen net_finances_member = net_finances / MAN3
{txt}(2 missing values generated)

{com}. gen goatrev_member = goatrev / MAN3
{txt}(2 missing values generated)

{com}. 
. ** Replace Missing values with zero 
. *  , 
. replace revenue = 0 if revenue ==.
{txt}(2 real changes made)

{com}. replace rev_member = 0 if rev_member ==.
{txt}(2 real changes made)

{com}. replace costs = 0 if costs ==.
{txt}(2 real changes made)

{com}. replace cost_mem = 0 if cost_mem ==.            
{txt}(2 real changes made)

{com}. 
. 
. ** Goat Sales ** 
. 
. /* Variables 
> # of goats sold : REC1
> goat revenue : REC4_1
> # of organized sales at collection points : GTT1
> Members : MAN3
> Goat revenue per member : goatrev_member
> Trader visits per sale
> Time passed
> Transportation costs
> */
. 
. ** co-op level vars
. gen goats_sold = REC1
{txt}(2 missing values generated)

{com}. gen goats_sold_member = REC1 / MAN3
{txt}(2 missing values generated)

{com}. * goatrev
. * revenue per goat sold
. gen goatrev_sold = goatrev / REC1
{txt}(22 missing values generated)

{com}. gen col_points = GTT1
{txt}
{com}. 
. local local_CO_goatsales goats_sold goatrev col_points
{txt}
{com}. make_index_gr CO_goatsales wgt stdgroup `local_CO_goatsales' 
{res}  965
{txt}
{com}. 
. 
. ** household level vars
. gen co_opshare = 0
{txt}
{com}. replace co_opshare = co_opgoatno / LS8 if LS8 != 0
{txt}(59 real changes made)

{com}. gen visits_sale = -1*(LS40 / LS_n_sales)
{txt}
{com}. gen time_passed = -1*(LS41)
{txt}
{com}. gen transp_cost = -1*(LS42*(0.0099))
{txt}
{com}. 
. * replace obvious outlier with sample median (median = 0)
. replace visits_sale = 0 if visits_sale <= -5000
{txt}(0 real changes made)

{com}. 
. * replace missing values with zero
. foreach v of varlist LSE12 LSE15 LSE16 LSE17a LSE17b LSE18 {c -(}
{txt}  2{com}.         replace `v' = 0 if `v'==.
{txt}  3{com}.         {c )-}
{txt}(16 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

{com}. 
. 
. local local_HH_goatsales LS8 LS9_w co_opgoatno co_opsalevalue
{txt}
{com}. make_index_gr HH_goatsales wgt stdgroup `local_HH_goatsales' 
{res}  970
{txt}
{com}. 
. local local_salecost visits_sale time_passed transp_cost
{txt}
{com}. make_index_gr salecost wgt stdgroup `local_salecost' 
{res}  971
{txt}
{com}. 
. 
. * Gross margin -- Net rev. per goat
. 
. /* Costs
> Amount spent purchasing goats: LSE12
> Amount spent on feed/fodder : LSE15
> Amount spent on vet care : LSE16
> Amount spent on breeding fees : LSE17a * LSE17b
> Amount spent on shelters : LSE18
> */
. 
. 
. 
. gen goat_costs = LSE12*(0.0099) + LSE15*(0.0099) + LSE16*(0.0099) + (LSE17a*LSE17b)*(0.0099) + LSE18*(0.0099)
{txt}
{com}. gen net_goat_income = LS9_w*(0.0099) - goat_costs
{txt}
{com}. gen netincome_goat = net_goat_income / LS8
{txt}
{com}. 
. 
. 
. 
. ** Planning and Goals **
. 
. /* Variables 
> Business Plan : PNG1
> Time Horizon : PNG2
> Expected Goats Sold : PNG3
> Expected Rev. : PNG4
> */
. 
. gen expected_rev = PNG4*(0.0099)
{txt}(2 missing values generated)

{com}. replace PNG2 =. if PNG2 == 99
{txt}(1 real change made, 1 to missing)

{com}. 
. 
. local local_PNG PNG1 PNG2 PNG3 expected_rev
{txt}
{com}. make_index_gr PNG wgt stdgroup `local_PNG'
{res}  976
{txt}
{com}. 
. 
. 
. 
. ** IHS transformations **
. 
. gen PNG3_ln = log(PNG3 + sqrt(PNG3^2 + 1))
{txt}(2 missing values generated)

{com}. gen expected_rev_ln = log(expected_rev + sqrt(expected_rev^2 + 1))
{txt}(2 missing values generated)

{com}. 
. 
. 
. save "$d3/r_CO_Merged_Ind.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline clean/r_CO_Merged_Ind.dta saved

{com}. 
. 
. 
. ****************
. ** HH dataset **
. clear
{txt}
{com}. use "$d3/r_HH_Merged_PAP.dta"
{txt}
{com}. 
. * Drop Banke District & Pilot Co-op
. drop if district == "Banke"
{txt}(24 observations deleted)

{com}. drop if r_treat == .
{txt}(0 observations deleted)

{com}. drop if idx == "" 
{txt}(0 observations deleted)

{com}. 
. * Weights = 1 & control group
. generate wgt = 1
{txt}
{com}. generate stdgroup = r_treat
{txt}
{com}. 
. encode region, gen(n_region) // create numerical region variable for regression
{txt}
{com}. 
. 
. ** Winsorize LS9
. * -----------------------------------------------
. gen LS9_w = LS9
{txt}(1,172 missing values generated)

{com}. 
. * treatment
. sum LS9_w if r_treat == 1, d

                            {txt}LS9_w
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        0              0
{txt}10%    {res}     4000              0       {txt}Obs         {res}        677
{txt}25%    {res}     8000              0       {txt}Sum of Wgt. {res}        677

{txt}50%    {res}    13000                      {txt}Mean          {res} 18980.29
                        {txt}Largest       Std. Dev.     {res} 22068.73
{txt}75%    {res}    24000         131420
{txt}90%    {res}    37000         144000       {txt}Variance      {res} 4.87e+08
{txt}95%    {res}    50000         145000       {txt}Skewness      {res} 6.746726
{txt}99%    {res}   113300       353191.3       {txt}Kurtosis      {res}  85.4021
{txt}
{com}. scalar t_99 = r(p99)
{txt}
{com}. 
. replace LS9_w = t_99 if LS9_w > t_99 & !missing(LS9_w) & r_treat == 1
{txt}(6 real changes made)

{com}. 
. *control
. sum LS9_w if r_treat == 0, d

                            {txt}LS9_w
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}     1800              0
{txt}10%    {res}     4000              0       {txt}Obs         {res}        599
{txt}25%    {res}     8000              0       {txt}Sum of Wgt. {res}        599

{txt}50%    {res}    13000                      {txt}Mean          {res}  18286.3
                        {txt}Largest       Std. Dev.     {res} 20265.42
{txt}75%    {res}    23000         135000
{txt}90%    {res}    36000         155600       {txt}Variance      {res} 4.11e+08
{txt}95%    {res}    50000         195000       {txt}Skewness      {res} 4.583672
{txt}99%    {res}   110000         220500       {txt}Kurtosis      {res} 35.34747
{txt}
{com}. scalar c_99 = r(p99)
{txt}
{com}. 
. replace LS9_w = c_99 if LS9_w > c_99 & !missing(LS9_w) & r_treat == 0
{txt}(5 real changes made)

{com}. * -----------------------------------------------
. 
. 
. ** Replace Missing values with zero
. * ----------------------------------------------- 
. * LS9 , 
. replace LS9_w = 0 if LS9_w ==.
{txt}(1,172 real changes made)

{com}. replace LS8 = 0 if LS8 ==.
{txt}(1,172 real changes made)

{com}. replace co_opsalevalue = 0 if co_opsalevalue ==.
{txt}(1,172 real changes made)

{com}. replace co_opgoatno = 0 if co_opgoatno ==.
{txt}(1,172 real changes made)

{com}. * -----------------------------------------------
. */
. 
. ** Communication **
. 
. * Variables 
. 
.         * Total # of times HH is contacted
.         gen HHcontact = COM3 + COM8
{txt}(1,241 missing values generated)

{com}. 
. 
. * HH comm index
. local local_HH_comm COM3 COM8
{txt}
{com}. make_index_gr HH_comm wgt stdgroup `local_HH_comm' 
{res}  933
{txt}
{com}. 
. * factors that limit communication
.         * principal components index
. 
. 
. 
. ** Transparency **
. 
. /* Variables
> Mandate : Co_opTransparencyTRN1
> Annual Report : Co_opTransparencyTRN2
> Annual Budget : Co_opTransparencyTRN3
> Financial Report: Co_opTransparencyTRN4 
> Meeting minutes : Co_opTransparencyTRN5
> Election Results : Co_opTransparencyTRN6
> Sale Records : Co_opTransparencyTRN7
> Evaluations : Co_opTransparencyTRN8
> */
. 
.         /*
>         forvalues i=1/7 {c -(} 
>                 destring role_GMtransTRN`i', replace
>                 replace role_GMtransTRN`i' = 0 if role_GMtransTRN`i' == 2
>                 replace role_GMtransTRN`i' = . if role_GMtransTRN`i' == 97
>                 {c )-}
>         */
.         
. ** Co-op Transparency   
. local local_CO_TRN CO_TRN1 CO_TRN2 ///
>         CO_TRN3 CO_TRN4 CO_TRN5 ///
>         CO_TRN6 CO_TRN7
{txt}
{com}. make_index_gr CO_TRN wgt stdgroup `local_CO_TRN'                
{res}  934
{txt}
{com}. 
. ** Household Awareness
. local local_HH_TRN HH_TRN1 HH_TRN2 ///
>         HH_TRN3 HH_TRN4 HH_TRN5 ///
>         HH_TRN6 HH_TRN7
{txt}
{com}. make_index_gr HH_TRN wgt stdgroup `local_HH_TRN' 
{res}  935
{txt}
{com}. 
.         
. ** Transparency Discrepancy index
.         forvalues i=1/7 {c -(} 
{txt}  2{com}.                 gen dTRN`i' = 1 if CO_TRN`i' == HH_TRN`i' ///
>                         &  !missing(CO_TRN`i') & !missing(HH_TRN`i')
{txt}  3{com}.                 replace dTRN`i' = 0 if CO_TRN`i' != HH_TRN`i' ///
>                         &  !missing(CO_TRN`i') & !missing(HH_TRN`i')
{txt}  4{com}.                 {c )-}
{txt}(1,608 missing values generated)
(1,061 real changes made)
(1,624 missing values generated)
(1,083 real changes made)
(1,619 missing values generated)
(1,091 real changes made)
(1,584 missing values generated)
(1,041 real changes made)
(1,535 missing values generated)
(1,045 real changes made)
(1,678 missing values generated)
(1,026 real changes made)
(1,483 missing values generated)
(915 real changes made)

{com}.                 
. local local_dTRN dTRN1 dTRN2 dTRN3 dTRN4 dTRN5 dTRN6 dTRN7
{txt}
{com}. make_index_gr dTRN wgt stdgroup `local_dTRN' 
{res}  943
{txt}
{com}. 
. * average discrepancy
. egen avg_dTRN = rowmean(dTRN1 dTRN2 dTRN3 dTRN4 dTRN5 dTRN6 dTRN7)
{txt}(356 missing values generated)

{com}. 
. 
. ** Goat Sales ** 
. 
. /* Variables 
> # of goats sold : Livestock_SalesLS8
> goat revenue : Livestock_SalesLS9
> goats sold through co-op : co_opgoatno
> goat revenue through co-op : co_opsalevalue
> share through co-op : co_opshare
> trader visits home : Livestock_SalesLS40
> time passed before sale : Livestock_SalesLS41
> transportation cost : Livestock_SalesLS42
> */
. /* Costs
> Amount spent purchasing goats: LSE12
> Amount spent on feed/fodder : LSE15
> Amount spent on vet care : LSE16
> Amount spent on breeding fees : LSE17a * LSE17b
> Amount spent on shelters : LSE18
> */
. 
. 
. ** household level vars
. gen co_opshare = 0
{txt}
{com}. replace co_opshare = co_opgoatno / LS8 if LS8 != 0
{txt}(261 real changes made)

{com}. gen visits_sale = -1*(LS40 / LS_n_sales)
{txt}(1,172 missing values generated)

{com}. gen time_passed = -1*(LS41)
{txt}(1,172 missing values generated)

{com}. gen transp_cost = -1*(LS42*(0.0099))
{txt}(1,172 missing values generated)

{com}. replace LS9_w = LS9_w*(0.0099)
{txt}(1,218 real changes made)

{com}. replace co_opsalevalue = co_opsalevalue*(0.0099)
{txt}(262 real changes made)

{com}. 
. 
. * replace obvious outlier with sample median (median = 0)
. replace visits_sale = 0 if visits_sale <= -5000
{txt}(1 real change made)

{com}. 
. * replace missing values with zero
. foreach v of varlist LSE12 LSE15 LSE16 LSE17a LSE17b LSE18 {c -(}
{txt}  2{com}.         replace `v' = 0 if `v'==.
{txt}  3{com}.         {c )-}
{txt}(2,191 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(539 real changes made)
(0 real changes made)

{com}. 
. gen goat_costs = LSE12*(0.0099) + LSE15*(0.0099) + LSE16*(0.0099) + (LSE17a*LSE17b)*(0.0099) + LSE18*(0.0099)
{txt}
{com}. gen net_goat_income = LS9_w - goat_costs
{txt}
{com}. gen netincome_goat = net_goat_income / LS8
{txt}(1,234 missing values generated)

{com}. 
. 
. local local_HH_goatsales LS8 LS9_w co_opgoatno co_opsalevalue net_goat_income
{txt}
{com}. make_index_gr HH_goatsales wgt stdgroup `local_HH_goatsales' 
{res}  952
{txt}
{com}. 
. local local_salecost visits_sale time_passed transp_cost
{txt}
{com}. make_index_gr salecost wgt stdgroup `local_salecost' 
{res}  953
{txt}
{com}. 
. 
. 
. ** IHS transformations **
. 
. gen LS9_w_ln = log(LS9_w + sqrt(LS9_w^2 + 1))
{txt}
{com}. gen co_opsalevalue_ln = log(co_opsalevalue + sqrt(co_opsalevalue^2 + 1))
{txt}
{com}. gen net_goat_income_ln = log(net_goat_income + sqrt(net_goat_income^2 + 1))
{txt}
{com}. 
. 
. 
. 
. save "$d3/r_HH_Merged_Ind.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data/LSIL-DATA_scott/VCC baseline clean/r_HH_Merged_Ind.dta saved

{com}. 
. 
. 
. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD01875.000000"
{txt}
{com}. clear all
{res}{txt}
{com}. set more off, perm
{txt}({cmd:set more} preference recorded)

{com}. 
. *log
. cap log close
{smcl}
{com}{sf}{ul off}