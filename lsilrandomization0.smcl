{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/scottmiller/Documents/GitHub/LSIL_PAP/lsilrandomization0.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 3 Jan 2019, 11:41:34
{txt}
{com}. 
. use "$d2/Household/Livestock_Sales_livestock.dta", clear
{txt}( )

{com}. 
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Saleslivestock", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. * Livestock Sales Module
.  
. drop if ___parent_index ==.
{txt}(224 observations deleted)

{com}. save "$d2/Household/Livestock_sales_collapse.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Household/Livestock_sales_collapse.dta saved

{com}.  
. drop Livestock_SalesLS2 Livestock_SalesLS6 ///
>                 Livestock_SalesLS6_1 ___id ___uuid ___submission_time ///
>                 ___index ___parent_table_name ___tags ___notes
{txt}
{com}. 
. drop Livestock_SalesLS4 
{txt}
{com}.                 
. gen co_opsalevalue = Livestock_SalesLS9 if ///
> Livestock_SalesLS3=="1"                         
{txt}(1,380 missing values generated)

{com}. lab var co_opsalevalue "Total revenue, goats sold through co-op"
{txt}
{com}. 
. gen co_opgoatno = Livestock_SalesLS8 if ///
> Livestock_SalesLS3=="1"         
{txt}(1,380 missing values generated)

{com}. lab var co_opgoatno "Total goats sold through co-op"
{txt}
{com}. 
. save "$d2/Household/Livestock_sales_collapse.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Household/Livestock_sales_collapse.dta saved

{com}.  
. destring *, replace             
{txt}Livestock_SalesLS3: all characters numeric; {res}replaced {txt}as {res}byte
{txt}Livestock_SalesLS5: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6A: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6B: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6C: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6D: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6X: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS7: all characters numeric; {res}replaced {txt}as {res}byte
{txt}Livestock_SalesLS8 already numeric; no {res}replace
{txt}Livestock_SalesLS9 already numeric; no {res}replace
{txt}Livestock_SalesLS10 already numeric; no {res}replace
{txt}Livestock_SalesLS12 already numeric; no {res}replace
{txt}Livestock_SalesLS13 already numeric; no {res}replace
{txt}Livestock_SalesLS14 already numeric; no {res}replace
{txt}Livestock_SalesLS15 already numeric; no {res}replace
{txt}Livestock_SalesLS16 already numeric; no {res}replace
{txt}Livestock_SalesLS17 already numeric; no {res}replace
{txt}Livestock_SalesLS25 already numeric; no {res}replace
{txt}Livestock_SalesLS26 already numeric; no {res}replace
{txt}Livestock_SalesLS27 already numeric; no {res}replace
{txt}Livestock_SalesLS28 already numeric; no {res}replace
{txt}Livestock_SalesLS29 already numeric; no {res}replace
{txt}Livestock_SalesLS30 already numeric; no {res}replace
{txt}Livestock_SalesLS31 already numeric; no {res}replace
{txt}Livestock_SalesLS32 already numeric; no {res}replace
{txt}Livestock_SalesLS32_1 already numeric; no {res}replace
{txt}Livestock_SalesLS33 already numeric; no {res}replace
{txt}Livestock_SalesLS34 already numeric; no {res}replace
{txt}Livestock_SalesLS35 already numeric; no {res}replace
{txt}Livestock_SalesLS36 already numeric; no {res}replace
{txt}Livestock_SalesLS37 already numeric; no {res}replace
{txt}Livestock_SalesLS38: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS39: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(978 missing values generated)
{res}{txt}Livestock_SalesLS40 already numeric; no {res}replace
{txt}Livestock_SalesLS41 already numeric; no {res}replace
{txt}Livestock_SalesLS42 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS43 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS40 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS41 already numeric; no {res}replace
{txt}Livestock_SalesLS44: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS45: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS46 already numeric; no {res}replace
{txt}Livestock_SalesLS47 already numeric; no {res}replace
{txt}___parent_index already numeric; no {res}replace
{txt}co_opsalevalue already numeric; no {res}replace
{txt}co_opgoatno already numeric; no {res}replace
{txt}
{com}. recode * (99=.) (98=.) (97=.)
{txt}(Livestock_SalesLS3: 0 changes made)
(Livestock_SalesLS5: 0 changes made)
(Livestock_SalesLS6A: 0 changes made)
(Livestock_SalesLS6B: 0 changes made)
(Livestock_SalesLS6C: 0 changes made)
(Livestock_SalesLS6D: 0 changes made)
(Livestock_SalesLS6X: 0 changes made)
(Livestock_SalesLS7: 7 changes made)
(Livestock_SalesLS8: 1 changes made)
(Livestock_SalesLS9: 0 changes made)
(Livestock_SalesLS10: 0 changes made)
(Livestock_SalesLS12: 0 changes made)
(Livestock_SalesLS13: 0 changes made)
(Livestock_SalesLS14: 0 changes made)
(Livestock_SalesLS15: 0 changes made)
(Livestock_SalesLS16: 0 changes made)
(Livestock_SalesLS17: 0 changes made)
(Livestock_SalesLS25: 0 changes made)
(Livestock_SalesLS26: 0 changes made)
(Livestock_SalesLS27: 0 changes made)
(Livestock_SalesLS28: 0 changes made)
(Livestock_SalesLS29: 0 changes made)
(Livestock_SalesLS30: 0 changes made)
(Livestock_SalesLS31: 0 changes made)
(Livestock_SalesLS32: 0 changes made)
(Livestock_SalesLS32_1: 0 changes made)
(Livestock_SalesLS33: 1 changes made)
(Livestock_SalesLS34: 0 changes made)
(Livestock_SalesLS35: 1 changes made)
(Livestock_SalesLS36: 0 changes made)
(Livestock_SalesLS37: 0 changes made)
(Livestock_SalesLS38: 6 changes made)
(Livestock_SalesLS39: 0 changes made)
(Livestock_SalesLS40: 0 changes made)
(Livestock_SalesLS41: 0 changes made)
(Livestock_SalesLS42: 0 changes made)
(Livestock_SalesLS43LS43: 0 changes made)
(Livestock_SalesLS43LS40: 0 changes made)
(Livestock_SalesLS43LS41: 0 changes made)
(Livestock_SalesLS44: 0 changes made)
(Livestock_SalesLS45: 0 changes made)
(Livestock_SalesLS46: 380 changes made)
(Livestock_SalesLS47: 248 changes made)
(___parent_index: 1 changes made)
(co_opsalevalue: 0 changes made)
(co_opgoatno: 1 changes made)

{com}.  
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Sales", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         local l`v' : variable label `v'
{txt}  8{com}.         local ll`v': val lab `v'
{txt}  9{com}.         if `"`l`v''"' == "" {c -(}
{txt} 10{com}.                 local l`v' "`v'"
{txt} 11{com}.         {c )-}
{txt} 12{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. collapse (mean) Livestock_SalesLS3 *Livestock_SalesLS6* ///
>                 Livestock_SalesLS7 (sum) Livestock_SalesLS8 Livestock_SalesLS9 ///
>                 Livestock_SalesLS10 Livestock_SalesLS12 Livestock_SalesLS13 ///
>                 Livestock_SalesLS14 Livestock_SalesLS15 Livestock_SalesLS16 ///
>                 Livestock_SalesLS17 Livestock_SalesLS25 Livestock_SalesLS26 ///
>                 Livestock_SalesLS27 Livestock_SalesLS28 Livestock_SalesLS29 ///
>                 Livestock_SalesLS30 Livestock_SalesLS31 *Livestock_SalesLS32* ///
>             Livestock_SalesLS33 Livestock_SalesLS34 ///
>                 Livestock_SalesLS35 Livestock_SalesLS36 Livestock_SalesLS37 ///
>                 Livestock_SalesLS38 Livestock_SalesLS39 Livestock_SalesLS40 ///
>                 Livestock_SalesLS41 Livestock_SalesLS42 *Livestock_SalesLS43* ///
>                 Livestock_SalesLS44 Livestock_SalesLS45 Livestock_SalesLS46 ///
>                 Livestock_SalesLS47 co_opsalevalue co_opgoatno , by(___parent_index)
{txt}
{com}. 
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}.                 
. * Top coding
. g price = Livestock_SalesLS9/Livestock_SalesLS8
{txt}(58 missing values generated)

{com}. 
. g n = _n
{txt}
{com}. 
. *scatter Livestock_SalesLS9 price, mlabel(n)
. 
. *br n Livestock_SalesLS8 Livestock_SalesLS9 price if n == 1035 | n == 10 | n == 11 | n == 1222 | n == 1199
. 
. su price, d

                            {txt}price
{hline 61}
      Percentiles      Smallest
 1%    {res}     1500              0
{txt} 5%    {res}     3000              0
{txt}10%    {res}     4000       .0001667       {txt}Obs         {res}      1,238
{txt}25%    {res}     6000          .0002       {txt}Sum of Wgt. {res}      1,238

{txt}50%    {res}   8222.5                      {txt}Mean          {res} 8724.892
                        {txt}Largest       Std. Dev.     {res} 4656.123
{txt}75%    {res}    11000          25000
{txt}90%    {res}    13500          26000       {txt}Variance      {res} 2.17e+07
{txt}95%    {res}    15000          65000       {txt}Skewness      {res} 4.158234
{txt}99%    {res}    22000          75000       {txt}Kurtosis      {res} 52.66175
{txt}
{com}. replace Livestock_SalesLS9 = r(p50)*Livestock_SalesLS8 if n == 1035 | n == 10 | n == 11 | n == 1222 | n == 1199
{txt}(5 real changes made)

{com}. 
. drop n price
{txt}
{com}. 
. su *LS8, d

         {txt}LS8 How many goats were sold in that sale?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        1              0
{txt}10%    {res}        1              0       {txt}Obs         {res}      1,296
{txt}25%    {res}        1              0       {txt}Sum of Wgt. {res}      1,296

{txt}50%    {res}        2                      {txt}Mean          {res} 39.83565
                        {txt}Largest       Std. Dev.     {res} 638.7508
{txt}75%    {res}        3           6000
{txt}90%    {res}        4           6001       {txt}Variance      {res} 408002.6
{txt}95%    {res}        5           9001       {txt}Skewness      {res}  22.4717
{txt}99%    {res}       15          18501       {txt}Kurtosis      {res} 583.9898
{txt}
{com}. replace Livestock_SalesLS8 = r(p50) if Livestock_SalesLS8 > 25 & ///
> Livestock_SalesLS8 < . // Replaces outliers with median
{txt}(8 real changes made)

{com}. 
. save "$d2/Household/Livestock_sales_collapse.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Household/Livestock_sales_collapse.dta saved

{com}.                 
. * --------------------------------------------------------------------
. 
.  * Collection Points Module
. clear
{txt}
{com}. use "$d2/Co-op/role_CP_Collectionpoint.dta"
{txt}( )

{com}.  
. drop role_CPCollectionpointCollection ___id ___uuid ___submission_time ___parent_table_name ___tags ___notes
{txt}
{com}.  
. destring role_CPCollectionpointCollectio0, replace
{txt}role_CPCollectionpointCollectio0: all characters numeric; {res}replaced {txt}as {res}byte
{txt}
{com}. recode * (99=.) (98=.) (97=.)
{txt}(role_CPCollectionpointCollectio0: 0 changes made)
(role_CPCollectionpointCollectio1: 2 changes made)
(role_CPCollectionpointCollectio2: 3 changes made)
(role_CPCollectionpointCollectio3: 3 changes made)
(role_CPCollectionpointCollectio4: 5 changes made)
(role_CPCollectionpointCollectio5: 3 changes made)
(___index: 3 changes made)
(___parent_index: 1 changes made)

{com}.          
. collapse (mean) role_CPCollectionpointCollectio0 (sum) role_CPCollectionpointCollectio1 ///
>                 role_CPCollectionpointCollectio4 role_CPCollectionpointCollectio5, by(___index)
{txt}
{com}.  
. save "$d2/Co-op/role_CP_Collectionpoint_collapsed.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role_CP_Collectionpoint_collapsed.dta saved

{com}.  
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}.  
. cap drop _merge
{txt}
{com}.  
. merge 1:1 ___index using "$d2/Co-op/role_CP_Collectionpoint_collapsed.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}             210
{txt}{col 9}from master{col 30}{res}             210{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}             148{txt}  (_merge==3)
{col 5}{hline 41}

{com}.  
. save "$d2/Co-op/Cooperative1.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/Cooperative1.dta saved

{com}. 
. ****************************************
. ** Merge Cooperative & Household Data **
. ****************************************
. 
. cd "$d2/Co-op/" 
{res}/Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op
{txt}
{com}. *------------------------------------------------------------------------------ 
. ** Co-op
. 
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
. destring ID1, replace
{txt}ID1 already numeric; no {res}replace
{txt}
{com}. *gen region = "Arghakanchhi" if ID1==51
. replace region = "Arghakanchhi" if ID1==51
{txt}(6 real changes made)

{com}. replace region = "Baglung" if ID1==45
{txt}(12 real changes made)

{com}. replace region = "Banke" if ID1==57
{txt}(45 real changes made)

{com}. replace region = "Bardiya" if ID1==58
{txt}(36 real changes made)

{com}. replace region = "Chitwan" if ID1==35
{txt}(15 real changes made)

{com}. replace region = "Dang" if ID1==56
{txt}(18 real changes made)

{com}. replace region = "Dhading" if ID1==30
{txt}(12 real changes made)

{com}. replace region = "Kaski" if ID1==40
{txt}(9 real changes made)

{com}. replace region = "Kapilbastu" if ID1==50
{txt}(3 real changes made)

{com}. replace region = "Lamjung" if ID1==37
{txt}(9 real changes made)

{com}. replace region = "Mahottari" if ID1==18
{txt}(12 real changes made)

{com}. replace region = "Morang" if ID1==5
{txt}(9 real changes made)

{com}. replace region = "Nawalparasi" if ID1==48
{txt}(15 real changes made)

{com}. replace region = "Nuwakot" if ID1==28
{txt}(15 real changes made)

{com}. replace region = "Palpa" if ID1==47
{txt}(48 real changes made)

{com}. replace region = "Parbat" if ID1==44
{txt}(18 real changes made)

{com}. replace region = "Pyuthan" if ID1==52
{txt}(9 real changes made)

{com}. replace region = "Rautahat" if ID1==32
{txt}(9 real changes made)

{com}. replace region = "Rupandehi" if ID1==49
{txt}(6 real changes made)

{com}. replace region = "Salyan" if ID1==55
{txt}(3 real changes made)

{com}. replace region = "Sarlahi" if ID1==19
{txt}(6 real changes made)

{com}. replace region = "Sindhuli" if ID1==20
{txt}(12 real changes made)

{com}. replace region = "Surkhet" if ID1==59
{txt}(15 real changes made)

{com}. replace region = "Tanahu" if ID1==38
{txt}(15 real changes made)

{com}.  
. replace region = "Mid-Hills" if region=="Arghakanchhi" | region=="Baglung" | ///
>         region=="Dhading" | region =="Kaski" | region =="Lamjung" | region=="Nuwakot" | ///
>         region=="Palpa" | region =="Parbat" | region =="Pyuthan" | region =="Salyan" | ///
>         region=="Tanahu" | region =="Sindhuli"
{txt}(168 real changes made)

{com}.          
. replace region = "Terai" if region=="Banke" | region =="Bardiya" | region =="Kapilbastu" | ///
>         region=="Mahottari" | region =="Morang" | region =="Nawalparasi" | ///
>         region=="Rautahat" | region =="Rupandehi" | region=="Sarlahi" | region =="Surkhet" | ///
>         region =="Chitwan" | region =="Dang"
{txt}(189 real changes made)

{com}. 
. save "$d2/Co-op/Cooperative1.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/Cooperative1.dta saved

{com}. 
. *------------------------------------------------------------------------------  
.  
. ** Cooperative ** 
. *collapse into one row per cooperative
.  
. *create separate datasets for each role
.  
. *Role 1 (Chairperson)
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}.  
. keep *id* *ID* *CP* role region
{txt}
{com}. 
. * save labels and value labels in macros
. 
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "CPManagement", "CPMgt",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         cap local vv = subinstr("`v'", "CPServices", "CPSer",.)
{txt}  8{com}.         if _rc == 0 {c -(}
{txt}  9{com}.                 rename `v' `vv'
{txt} 10{com}.                 local v `vv'
{txt} 11{com}.         {c )-}
{txt} 12{com}.         cap local vv = subinstr("`v'", "transactions", "trans",.)
{txt} 13{com}.         if _rc == 0 {c -(}
{txt} 14{com}.                 rename `v' `vv'
{txt} 15{com}.                 local v `vv'
{txt} 16{com}.         {c )-}
{txt} 17{com}.         cap local vv = subinstr("`v'", "Collection", "Coll",.)
{txt} 18{com}.         if _rc == 0 {c -(}
{txt} 19{com}.                 rename `v' `vv'
{txt} 20{com}.                 local v `vv'
{txt} 21{com}.         {c )-}       
{txt} 22{com}.         local l`v' : variable label `v'
{txt} 23{com}.         local ll`v': val lab `v'
{txt} 24{com}.         if `"`l`v''"' == "" {c -(}
{txt} 25{com}.                 local l`v' "`v'"
{txt} 26{com}.         {c )-}
{txt} 27{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}
{com}. 
. ds *CP* region, has(type string)
{txt}{col 1}role_CPMgt~p{col 15}role_CPMg~02{col 29}role_CPMg~22{col 43}role_CPMg~31{col 57}role_CPSe~R6{col 71}role_CPSe~e0{col 85}ro~p_servic0{col 99}role_CPSe~02
{col 1}role_CPMg~i3{col 15}role_CPMg~03{col 29}role_CPMg~23{col 43}role_CPMg~32{col 57}role_CPSe~R7{col 71}role_CPSe~e1{col 85}ro~p_servic1{col 99}role_CPGo~T4
{col 1}role_CPMg~i5{col 15}role_CPMg~04{col 29}role_CPMg~24{col 43}role_CPMg~33{col 57}role_CPSe~R8{col 71}role_CPSe~e2{col 85}ro~p_servic2{col 99}role_CPG~4_1
{col 1}role_CPMg~i6{col 15}role_CPMg~05{col 29}role_CPMg~25{col 43}role_CPMg~34{col 57}role_CPSe~R9{col 71}role_CPSe~e3{col 85}ro~p_servic3{col 99}role_CPCol~t
{col 1}role_CPMg~i7{col 15}role_CPMg~06{col 29}role_CPMg~26{col 43}ro~l_servic0{col 57}role_CPSe~R1{col 71}role_CPSe~e4{col 85}ro~p_servic4{col 99}region
{col 1}role_CPMg~i8{col 15}role_CPMg~07{col 29}role_CPMg~27{col 43}ro~l_servic1{col 57}role_CPSe~R0{col 71}role_CPSe~e5{col 85}role_CPSe~c5
{col 1}role_CPMg~i9{col 15}role_CPMg~18{col 29}role_CPMg~28{col 43}ro~l_servic2{col 57}role_CPSe~R2{col 71}role_CPSe~e6{col 85}role_CPSe~c6
{col 1}role_CPMg~00{col 15}role_CPMg~20{col 29}role_CPMg~29{col 43}ro~l_servic3{col 57}role_CPSe~R3{col 71}role_CPSe~18{col 85}role_CPSe~c7
{col 1}role_CPMg~01{col 15}role_CPMg~21{col 29}role_CPMg~30{col 43}ro~l_servic4{col 57}role_CPSe~R4{col 71}ro~p_service{col 85}role_CPSe~01

{com}. 
. local CPstrings = "`r(varlist)'"
{txt}
{com}. 
. ds *CP*, has(type numeric)
{txt}{col 1}role_CPMg~i0{col 15}role_CPMg~12{col 29}ro~l_service{col 43}role_CPGo~T2{col 57}role_CPGo~47{col 71}role_CPG~1_2{col 85}role_CP~5_1b{col 99}role_CP~6_3b
{col 1}role_CPMg~i1{col 15}role_CPMg~13{col 29}role_CPSe~od{col 43}role_CPGo~T3{col 57}role_CPGo~48{col 71}role_CPG~1_3{col 85}role_CP~5_2b{col 99}role_CPPla~3
{col 1}role_CPMg~i2{col 15}role_CPMg~14{col 29}role_CPSe~ed{col 43}role_CPGo~41{col 57}role_CPGo~49{col 71}role_CPG~3_1{col 85}role_CP~5_3b{col 99}role_CPPla~4
{col 1}role_CPMg~i4{col 15}role_CPMg~15{col 29}role_CPSer~_{col 43}role_CPGo~42{col 57}role_CPG~410{col 71}role_CPG~3_2{col 85}role_CPGo~1c{col 99}role_CPCol~0
{col 1}role_CPMg~08{col 15}role_CPMg~16{col 29}role_CPSe~c8{col 43}role_CPGo~43{col 57}role_CPG~497{col 71}role_CPG~3_3{col 85}role_CPGo~2c{col 99}role_CPCol~1
{col 1}role_CPMg~09{col 15}role_CPMg~17{col 29}role_CPSe~c9{col 43}role_CPGo~44{col 57}role_CPGo~T5{col 71}role_CPGo~1a{col 85}role_CPGo~3c{col 99}role_CPCol~4
{col 1}role_CPMg~10{col 15}role_CPMg~19{col 29}role_CPSe~00{col 43}role_CPGo~45{col 57}role_CPColl{col 71}role_CPGo~2a{col 85}role_CP~6_1b{col 99}role_CPCol~5
{col 1}role_CPMg~11{col 15}role_CPSe~te{col 29}role_CPGo~T1{col 43}role_CPGo~46{col 57}role_CPG~1_1{col 71}role_CPGo~3a{col 85}role_CP~6_2b

{com}. 
. local CPnumeric = "`r(varlist)'"
{txt}
{com}. 
. collapse (firstnm) `CPstrings' (mean) `CPnumeric', by(HH_IDIDX role)
{txt}
{com}. 
. * re-assign labels post-collapse
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
. drop if role !="1"
{txt}(213 observations deleted)

{com}. 
. sort HH_IDIDX
{txt}
{com}. 
. save "$d2/Co-op/role1.dta", replace 
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role1.dta saved

{com}.  
. *Role 2 (General Manager)
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
. keep *id* *ID* *GM* role region
{txt}
{com}. 
. * save labels and value labels in macros
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "GMequipment", "GMeqpmt",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         cap local vv = subinstr("`v'", "GMEquipment", "GMEqpmt",.) // names too long for macros
{txt}  8{com}.         if _rc == 0 {c -(}
{txt}  9{com}.                 rename `v' `vv'
{txt} 10{com}.                 local v `vv'
{txt} 11{com}.         {c )-}
{txt} 12{com}.         cap local vv = subinstr("`v'", "GMFinancial", "GMFin",.) // names too long for macros
{txt} 13{com}.         if _rc == 0 {c -(}
{txt} 14{com}.                 rename `v' `vv'
{txt} 15{com}.                 local v `vv'
{txt} 16{com}.         {c )-}
{txt} 17{com}.         cap local vv = subinstr("`v'", "planning", "plan",.) // names too long for macros
{txt} 18{com}.         if _rc == 0 {c -(}
{txt} 19{com}.                 rename `v' `vv'
{txt} 20{com}.                 local v `vv'
{txt} 21{com}.         {c )-}       
{txt} 22{com}.         cap local vv = subinstr("`v'", "evalassment", "eval",.) // names too long for macros
{txt} 23{com}.         if _rc == 0 {c -(}
{txt} 24{com}.                 rename `v' `vv'
{txt} 25{com}.                 local v `vv'
{txt} 26{com}.         {c )-}
{txt} 27{com}.         cap local vv = subinstr("`v'", "transpernacy", "trans",.) // names too long for macros
{txt} 28{com}.         if _rc == 0 {c -(}
{txt} 29{com}.                 rename `v' `vv'
{txt} 30{com}.                 local v `vv'
{txt} 31{com}.         {c )-}       
{txt} 32{com}.         local l`v' : variable label `v'
{txt} 33{com}.         local ll`v': val lab `v'
{txt} 34{com}.         if `"`l`v''"' == "" {c -(}
{txt} 35{com}.                 local l`v' "`v'"
{txt} 36{com}.         {c )-}
{txt} 37{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. ds *GM* region, has(type string)
{txt}{col 1}role_GMre~V4{col 15}role_GMeq~1X{col 29}role_G~3_1_5{col 43}role_GMeqp~E{col 57}role_GM~15_1{col 71}role_GMFin~3{col 85}role_GMtra~1{col 99}role_GMtr~6a
{col 1}role_GMre~C5{col 15}role_GM~P3_1{col 29}role_GMeq~4_{col 43}role_GMeq~P1{col 57}role_G~5_1_1{col 71}role_GMFin~4{col 85}role_GMtra~2{col 99}role_GMtra~7
{col 1}role_GMre~C7{col 15}role_G~3_1_1{col 29}role_GM~P5_1{col 43}role_GM~11_1{col 57}role_GMEq~16{col 71}role_GMpla~1{col 85}role_GMtra~3{col 99}role_GMtr~14
{col 1}role_GMre~C8{col 15}role_G~3_1_2{col 29}role_GMe~6_1{col 43}role_GM~12_1{col 57}role_GMEq~17{col 71}role_GMeva~1{col 85}role_GMtr~N4{col 99}role_GMtr~15
{col 1}role_GM~P1_1{col 15}role_G~3_1_3{col 29}role_GMeqp~Q{col 43}role_GMe~13_{col 57}role_GMEq~18{col 71}role_GMeva~2{col 85}role_GMtr~N5{col 99}region
{col 1}role_GM~P2_1{col 15}role_G~3_1_4{col 29}role_GMe~8_1{col 43}role_GMeq~o0{col 57}role_GMEq~19{col 71}role_GMeva~3{col 85}role_GMtra~6

{com}. 
. local GMstrings = "`r(varlist)'"
{txt}
{com}. 
. ds *GM*, has(type numeric)
{txt}{col 1}role_GMrev~t{col 15}role_GMr~7_5{col 29}role_GMeq~3X{col 43}role_GMeq~41{col 57}role_GMeqp~6{col 71}role_GMeq~s1{col 85}role_GMeq~o1{col 99}role_G~5_3_3
{col 1}role_GMre~C1{col 15}role_GMr~7_6{col 29}role_GMeq~fe{col 43}role_GMeq~r_{col 57}role_GMeqp~7{col 71}role_GMeq~ad{col 85}role_GMeq~o2{col 99}role_G~5_3_4
{col 1}role_GMre~C2{col 15}role_GMr~7_7{col 29}role_G~3_2_1{col 43}role_GMe~5_2{col 57}role_GMeqp~8{col 71}role_GMeq~P0{col 85}role_GMeqp~f{col 99}role_G~5_3_5
{col 1}role_GMr~4_1{col 15}role_GMre~_8{col 29}role_G~3_2_2{col 43}role_GMe~5_3{col 57}role_GMeqp~9{col 71}role_GMeq~P2{col 85}role_G~5_1_2{col 99}role_GMEqp~l
{col 1}role_GMr~4_2{col 15}role_GMrev~9{col 29}role_G~3_2_3{col 43}role_GMeqp~c{col 57}role_GMeq~00{col 71}role_GMeq~nd{col 85}role_G~5_1_3{col 99}role_GMFin~l
{col 1}role_GMr~4_3{col 15}role_GMeqp~p{col 29}role_G~3_2_4{col 43}role_GMe~6_2{col 57}role_GMeq~01{col 71}role_GM~11_2{col 85}role_G~5_1_4{col 99}role_GMFin~1
{col 1}role_GMr~4_4{col 15}role_GMeqp~m{col 29}role_G~3_2_5{col 43}role_GMe~6_3{col 57}role_GMeq~02{col 71}role_GM~11_3{col 85}role_G~5_1_5{col 99}role_GMFin~2
{col 1}role_GMr~4_5{col 15}role_GM~P1_2{col 29}role_G~3_3_1{col 43}role_GMeq~he{col 57}role_GMeq~03{col 71}role_GMeq~mb{col 85}role_G~5_2_1{col 99}role_GMpla~l
{col 1}role_GMr~4_6{col 15}role_GM~P1_3{col 29}role_G~3_3_2{col 43}role_GMeq~E0{col 57}role_GMeq~04{col 71}role_GM~12_2{col 85}role_G~5_2_2{col 99}role_GMpla~2
{col 1}role_GMr~4_7{col 15}role_GMeq~ob{col 29}role_G~3_3_3{col 43}role_GMeq~E1{col 57}role_GMeqp~i{col 71}role_GM~12_3{col 85}role_G~5_2_3{col 99}role_GMpla~3
{col 1}role_GMr~7_1{col 15}role_GM~P2_2{col 29}role_G~3_3_4{col 43}role_GMeq~E2{col 57}role_GMe~8_2{col 71}role_GMeq~er{col 85}role_G~5_2_4{col 99}role_GMpla~4
{col 1}role_GMr~7_2{col 15}role_GM~P2_3{col 29}role_G~3_3_5{col 43}role_GMeq~E3{col 57}role_GMe~8_3{col 71}role_GMe~130{col 85}role_G~5_2_5{col 99}role_GMeva~t
{col 1}role_GMr~7_3{col 15}role_GMeqp~o{col 29}role_GMeq~de{col 43}role_GMeq~E4{col 57}role_GMeqp~h{col 71}role_GMe~131{col 85}role_G~5_3_1{col 99}role_GMtrns
{col 1}role_GMr~7_4{col 15}role_GMeq~2X{col 29}role_GMeq~40{col 43}role_GMeq~E5{col 57}role_GMeq~s0{col 71}role_GMeq~or{col 85}role_G~5_3_2{col 99}role_GMtra~s

{com}. 
. local GMnumeric = "`r(varlist)'"
{txt}
{com}. 
. collapse (firstnm) `GMstrings' (mean) `GMnumeric', by(HH_IDIDX role)
{txt}
{com}. 
. * re-assign labels post-collapse
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
. drop if role !="2"
{txt}(214 observations deleted)

{com}. 
. save "$d2/Co-op/role2.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role2.dta saved

{com}.  
. *Role 3 (Board Member)
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
. keep *id* *ID* *BM* role region
{txt}
{com}. 
. * save labels and value labels in macros
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "intro", "in",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         cap local vv = subinstr("`v'", "transactions", "trans",.) // names too long for macros
{txt}  8{com}.         if _rc == 0 {c -(}
{txt}  9{com}.                 rename `v' `vv'
{txt} 10{com}.                 local v `vv'
{txt} 11{com}.         {c )-}
{txt} 12{com}.         cap local vv = subinstr("`v'", "Planning", "plan",.) // names too long for macros
{txt} 13{com}.         if _rc == 0 {c -(}
{txt} 14{com}.                 rename `v' `vv'
{txt} 15{com}.                 local v `vv'
{txt} 16{com}.         {c )-}
{txt} 17{com}.         local l`v' : variable label `v'
{txt} 18{com}.         local ll`v': val lab `v'
{txt} 19{com}.         if `"`l`v''"' == "" {c -(}
{txt} 20{com}.                 local l`v' "`v'"
{txt} 21{com}.         {c )-}
{txt} 22{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. ds *BM* region, has(type string)
{txt}{col 1}role_BMB~MM6{col 15}role_BMBM~65{col 29}role_BMB~MM7{col 43}role_BMBM~75{col 57}role_BMBM~8a{col 71}role_BMBM~8f{col 85}role_BMBMG~6{col 99}role_BMBM~01
{col 1}role_BMBM~61{col 15}role_BMBM~66{col 29}role_BMBM~71{col 43}role_BMBM~76{col 57}role_BMBM~8b{col 71}role_BMBM~M2{col 85}role_BMBMG~7{col 99}role_BMBM~02
{col 1}role_BMBM~62{col 15}role_BMBM~67{col 29}role_BMBM~72{col 43}role_BMBM~77{col 57}role_BMBM~8c{col 71}role_BMB~BM3{col 85}role_BMBMG~8{col 99}role_BMBM~03
{col 1}role_BMBM~63{col 15}role_BMBM~68{col 29}role_BMBM~73{col 43}role_BMBM~78{col 57}role_BMBM~8d{col 71}role_BMB~BM4{col 85}role_BMBMG~9{col 99}role_BMBM~04
{col 1}role_BMBM~64{col 15}role_BMB~697{col 29}role_BMBM~74{col 43}role_BMB~797{col 57}role_BMBM~8e{col 71}role_BMBMG~5{col 85}role_BMBM~00{col 99}region

{com}. 
. local BMstrings = "`r(varlist)'"
{txt}
{com}. 
. ds *BM*, has(type numeric)
{txt}{col 1}role_BMBMn~M{col 15}role_BMBM~1b{col 29}role_BMBM~2a{col 43}role_BMBM~2d{col 57}role_BMB~MM5{col 71}role_BMBM~M0{col 85}role_BMBMp~0
{col 1}role_BMBM~n1{col 15}role_BMBM~1c{col 29}role_BMBM~2b{col 43}role_BMB~MM3{col 57}role_BMBM~n3{col 71}role_BMBM~M1
{col 1}role_BMBM~1a{col 15}role_BMBM~1d{col 29}role_BMBM~2c{col 43}role_BMB~MM4{col 57}role_BMBMG~_{col 71}role_BMBMp~M

{com}. 
. local BMnumeric = "`r(varlist)'"
{txt}
{com}. 
. collapse (firstnm) `BMstrings' (mean) `BMnumeric', by(HH_IDIDX role)
{txt}
{com}. 
. * re-assign labels post-collapse
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
. drop if role !="3"
{txt}(214 observations deleted)

{com}. 
. save "$d2/Co-op/role3.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role3.dta saved

{com}.   
. *create one merged co-op dataset
.  
. *numeric idx identifiers
. use "$d2/Co-op/role1.dta", clear
{txt}( )

{com}. sort HH_IDIDX
{txt}
{com}. *drop idx_n
. encode HH_IDIDX, gen(idx_n)
{txt}
{com}. save "$d2/Co-op/role1.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role1.dta saved

{com}. 
. use "$d2/Co-op/role2.dta", clear
{txt}( )

{com}. sort HH_IDIDX
{txt}
{com}. *drop idx_n
. encode HH_IDIDX, gen(idx_n)
{txt}
{com}. save "$d2/Co-op/role2.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role2.dta saved

{com}.  
. use "$d2/Co-op/role3.dta", clear
{txt}( )

{com}. sort HH_IDIDX
{txt}
{com}. *drop idx_n
. encode HH_IDIDX, gen(idx_n)
{txt}
{com}. save "$d2/Co-op/role3.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/role3.dta saved

{com}.   
. *merge dataset
. use "$d2/Co-op/role1.dta", clear
{txt}( )

{com}. merge 1:1 idx_n using role2.dta
{res}{txt}(label idx_n already defined)

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               1
{txt}{col 9}from master{col 30}{res}               1{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}             106{txt}  (_merge==3)
{col 5}{hline 41}

{com}. save "$d2/Co-op/co-op_merged.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/co-op_merged.dta saved

{com}. drop _merge
{txt}
{com}.  
. 
. use "$d2/Co-op/co-op_merged.dta", clear
{txt}( )

{com}. drop _merge
{txt}
{com}. merge 1:1 idx_n using role3.dta
{res}{txt}(label idx_n already defined)

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               1
{txt}{col 9}from master{col 30}{res}               1{txt}  (_merge==1)
{col 9}from using{col 30}{res}               0{txt}  (_merge==2)

{col 5}matched{col 30}{res}             106{txt}  (_merge==3)
{col 5}{hline 41}

{com}. rename _merge merge3
{res}{txt}
{com}. save "$d2/Co-op/co-op_merged.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Co-op/co-op_merged.dta saved

{com}. 
.  
. 
{txt}end of do-file

{com}. clear

. use "$d2/Co-op/co-op_merged.dta"
{txt}( )

{com}. browse idx_n region

. browse idx region

. clear

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
{txt}end of do-file

{com}. browse HH_IDIDX region

. sort HH_IDIDX

. browse

. clear

. use "$d2/Co-op/co-op_merged.dta"
{txt}( )

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. *******************************************************************************/
. clear all
{res}{txt}
{com}. 
. *packages
. *ssc install outreg
. *ssc install ietoolkit
. 
. *pathways
. gl d1 = "/Users/scottmiller/Documents/GitHub/LSIL_PAP" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data" // initial data sets stored here
{txt}
{com}. gl d3 = "$d2/LSIL-DATA_scott/VCC baseline aug 20 2018" // clean data folder - saved separately to preserve original data
{txt}
{com}. 
. 
.         
. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. clear
{txt}
{com}. use "$d3/Cooperative.dta"
{txt}
{com}. 
{txt}end of do-file

{com}. sort IDX

. clear

. use "$d3/Baseline_Merged.dta"

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. use "$d3/Baseline_Merged.dta", clear
{txt}
{com}. 
. * drop all variables associated with original randomization
. *`drop treat _merge n random random2 bin sub_bin strata
. 
. 
. /* gen treat = 0
> replace treat = 1 if HH_IDIDX == "Lekhbesi SEWC 1" // Pilot co-op
> */
. 
. drop if idx == "Lekhbesi SEWC 1" // Pilot co-op
{txt}(1 observation deleted)

{com}. drop if idx =="Karmath SEWC 2"
{txt}(1 observation deleted)

{com}. 
. * true treatment status: seed 3581 * random seed = 62184 
. set seed 3581  // random seed to generate different treatment assignment
{txt}
{com}. 
. 
. * Region - HH Goat Rev
. gen bin=. 
{txt}(106 missing values generated)

{com}. bysort region LS9 : gen random = uniform()
{txt}
{com}. sort region LS9 random
{txt}
{com}. bysort region: g n = _n 
{txt}
{com}. 
. count if region=="Terai"
  {res}55
{txt}
{com}. replace bin=1 if n <= (r(N)/3) & region=="Terai"
{txt}(18 real changes made)

{com}. replace bin=2 if n <= r(N)*(2/3) & n > (r(N)/3) & region=="Terai"
{txt}(18 real changes made)

{com}. replace bin=3 if n <= r(N) & n > r(N)*(2/3) & region=="Terai"
{txt}(19 real changes made)

{com}. 
. count if region=="Mid-Hills"
  {res}51
{txt}
{com}. replace bin=4 if n <= (r(N)/3) & region=="Mid-Hills"
{txt}(17 real changes made)

{com}. replace bin=5 if n <= r(N)*(2/3) & n > (r(N)/3) & region=="Mid-Hills"
{txt}(17 real changes made)

{com}. replace bin=6 if n <= r(N) & n > r(N)*(2/3) & region=="Mid-Hills"
{txt}(17 real changes made)

{com}. 
. tab region bin

           {txt}{c |}                                bin
    region {c |}         1          2          3          4          5          6 {c |}     Total
{hline 11}{c +}{hline 66}{c +}{hline 10}
 Mid-Hills {c |}{res}         0          0          0         17         17         17 {txt}{c |}{res}        51 
{txt}     Terai {c |}{res}        18         18         19          0          0          0 {txt}{c |}{res}        55 
{txt}{hline 11}{c +}{hline 66}{c +}{hline 10}
     Total {c |}{res}        18         18         19         17         17         17 {txt}{c |}{res}       106 
{txt}
{com}. 
. drop n random
{txt}
{com}. 
. *  # of Members
. sum MAN3, d

       {txt}MAN3 How many members are in this cooperative?
{hline 61}
      Percentiles      Smallest
 1%    {res}       87             11
{txt} 5%    {res}      132             87
{txt}10%    {res}      195            104       {txt}Obs         {res}        106
{txt}25%    {res}      311            118       {txt}Sum of Wgt. {res}        106

{txt}50%    {res}    483.5                      {txt}Mean          {res} 558.6384
                        {txt}Largest       Std. Dev.     {res} 362.9622
{txt}75%    {res}      711           1226
{txt}90%    {res}     1042           1226       {txt}Variance      {res} 131741.6
{txt}95%    {res}     1123           1320       {txt}Skewness      {res}  1.95421
{txt}99%    {res}     1320           2600       {txt}Kurtosis      {res} 10.80543
{txt}
{com}. return list

{txt}scalars:
                  r(N) =  {res}106
              {txt}r(sum_w) =  {res}106
               {txt}r(mean) =  {res}558.6383647798742
                {txt}r(Var) =  {res}131741.5812019567
                 {txt}r(sd) =  {res}362.9622310956839
           {txt}r(skewness) =  {res}1.954209511053203
           {txt}r(kurtosis) =  {res}10.80543487936791
                {txt}r(sum) =  {res}59215.66666666666
                {txt}r(min) =  {res}11
                {txt}r(max) =  {res}2600
                 {txt}r(p1) =  {res}87
                 {txt}r(p5) =  {res}132
                {txt}r(p10) =  {res}195
                {txt}r(p25) =  {res}311
                {txt}r(p50) =  {res}483.5
                {txt}r(p75) =  {res}711
                {txt}r(p90) =  {res}1042
                {txt}r(p95) =  {res}1123
                {txt}r(p99) =  {res}1320
{txt}
{com}. 
. gen sub_bin=.
{txt}(106 missing values generated)

{com}. bysort bin MAN3 : gen random = uniform()
{txt}
{com}. sort bin MAN3 random
{txt}
{com}. bysort bin: g n = _n 
{txt}
{com}. 
. forvalues i=1/6 {c -(} 
{txt}  2{com}.         count if bin==`i'
{txt}  3{com}.         replace sub_bin= `i'1 if n <= r(N)*(1/2) & bin==`i'
{txt}  4{com}.         replace sub_bin= `i'2 if n > r(N)*(1/2) & bin==`i'
{txt}  5{com}. {c )-}
  {res}18
{txt}(9 real changes made)
(9 real changes made)
  {res}18
{txt}(9 real changes made)
(9 real changes made)
  {res}19
{txt}(9 real changes made)
(10 real changes made)
  {res}17
{txt}(8 real changes made)
(9 real changes made)
  {res}17
{txt}(8 real changes made)
(9 real changes made)
  {res}17
{txt}(8 real changes made)
(9 real changes made)

{com}. 
. tab sub_bin region

           {txt}{c |}        region
   sub_bin {c |} Mid-Hills      Terai {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
        11 {c |}{res}         0          9 {txt}{c |}{res}         9 
{txt}        12 {c |}{res}         0          9 {txt}{c |}{res}         9 
{txt}        21 {c |}{res}         0          9 {txt}{c |}{res}         9 
{txt}        22 {c |}{res}         0          9 {txt}{c |}{res}         9 
{txt}        31 {c |}{res}         0          9 {txt}{c |}{res}         9 
{txt}        32 {c |}{res}         0         10 {txt}{c |}{res}        10 
{txt}        41 {c |}{res}         8          0 {txt}{c |}{res}         8 
{txt}        42 {c |}{res}         9          0 {txt}{c |}{res}         9 
{txt}        51 {c |}{res}         8          0 {txt}{c |}{res}         8 
{txt}        52 {c |}{res}         9          0 {txt}{c |}{res}         9 
{txt}        61 {c |}{res}         8          0 {txt}{c |}{res}         8 
{txt}        62 {c |}{res}         9          0 {txt}{c |}{res}         9 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}        51         55 {txt}{c |}{res}       106 
{txt}
{com}. drop random  n
{txt}
{com}. 
. * Co-op rev
. gen sub_sub_bin=.
{txt}(106 missing values generated)

{com}. bysort sub_bin REV4 : gen random = uniform()
{txt}
{com}. sort sub_bin REV4 random
{txt}
{com}. bysort sub_bin: g n = _n 
{txt}
{com}. 
. levelsof sub_bin, local(levels)
{res}{txt}11 12 21 22 31 32 41 42 51 52 61 62

{com}.         foreach i in `levels' {c -(} 
{txt}  2{com}. 
.         count if sub_bin==`i'
{txt}  3{com}.         replace sub_sub_bin= `i'1 if n <= r(N)*(1/2) & sub_bin==`i'
{txt}  4{com}.         replace sub_sub_bin= `i'2 if n > r(N)*(1/2) & sub_bin==`i'
{txt}  5{com}. {c )-}
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}10
{txt}(5 real changes made)
(5 real changes made)
  {res}8
{txt}(4 real changes made)
(4 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}8
{txt}(4 real changes made)
(4 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)
  {res}8
{txt}(4 real changes made)
(4 real changes made)
  {res}9
{txt}(4 real changes made)
(5 real changes made)

{com}. 
. tab sub_sub_bin region

{txt}sub_sub_bi {c |}        region
         n {c |} Mid-Hills      Terai {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
       111 {c |}{res}         0          4 {txt}{c |}{res}         4 
{txt}       112 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       121 {c |}{res}         0          4 {txt}{c |}{res}         4 
{txt}       122 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       211 {c |}{res}         0          4 {txt}{c |}{res}         4 
{txt}       212 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       221 {c |}{res}         0          4 {txt}{c |}{res}         4 
{txt}       222 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       311 {c |}{res}         0          4 {txt}{c |}{res}         4 
{txt}       312 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       321 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       322 {c |}{res}         0          5 {txt}{c |}{res}         5 
{txt}       411 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       412 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       421 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       422 {c |}{res}         5          0 {txt}{c |}{res}         5 
{txt}       511 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       512 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       521 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       522 {c |}{res}         5          0 {txt}{c |}{res}         5 
{txt}       611 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       612 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       621 {c |}{res}         4          0 {txt}{c |}{res}         4 
{txt}       622 {c |}{res}         5          0 {txt}{c |}{res}         5 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}        51         55 {txt}{c |}{res}       106 
{txt}
{com}. 
. drop random n
{txt}
{com}. 
. rename sub_sub_bin strata 
{res}{txt}
{com}. 
.  * Randomization
.  
. bysort strata: gen random=uniform() // used to assign to treatment and control
{txt}
{com}. sort strata random
{txt}
{com}. 
. bysort strata: gen n=_n
{txt}
{com}.  
. sum n if strata==51, d

                              {txt}n
{hline 61}
no observations

{com}. return list

{txt}scalars:
                  r(N) =  {res}0
              {txt}r(sum_w) =  {res}0
                {txt}r(sum) =  {res}0
{txt}
{com}.  
. bysort strata: gen random2=uniform() // used to randomly assign odd-numbered strata to have 3 treated or 3 control 
{txt}
{com}.  
. levelsof strata, local(stratums) 
{res}{txt}111 112 121 122 211 212 221 222 311 312 321 322 411 412 421 422 511 512 521 522 611 612 621 622

{com}. 
. gen r_treat = 0
{txt}
{com}.  
. foreach i in `stratums' {c -(}
{txt}  2{com}.         count if strata==`i' 
{txt}  3{com}.         if r(N)==4 | r(N)==6 {c -(}
{txt}  4{com}.                 sum n if strata==`i', d
{txt}  5{com}.                 replace r_treat=1 if n <= r(p50) & strata==`i'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         else {c -(}
{txt}  8{com}.                 su random2 if strata == `i'
{txt}  9{com}.                 scalar mu = r(mean) // local macros don't handle decimals well
{txt} 10{com}.                 if mu < 0.5 {c -(}
{txt} 11{com}.                         replace r_treat=1 if n <= 3 & strata==`i'
{txt} 12{com}.                 {c )-}
{txt} 13{com}.                 if mu >= 0.5 {c -(}
{txt} 14{com}.                         replace r_treat=1 if n <= 2 & strata==`i'
{txt} 15{com}.                 {c )-}               
{txt} 16{com}.         {c )-}
{txt} 17{com}. 
. {c )-}
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .5327091    .2692438    .223117    .872942
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .3257319    .2412265   .0632139     .66685
{txt}(3 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .4160317    .3107095   .0490555    .776844
{txt}(3 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5     .331102    .2181646   .1054967   .6708771
{txt}(3 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .6397764    .2542144   .3202303   .9287844
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .5623248    .3162198   .1654857    .892574
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5     .412888    .2033692   .2458108   .7571852
{txt}(3 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .6362264    .2614462   .2539851   .9454201
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5      .44714    .4091718   .0273362   .9281003
{txt}(3 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}4

                              {txt}n
{hline 61}
      Percentiles      Smallest
 1%    {res}        1              1
{txt} 5%    {res}        1              2
{txt}10%    {res}        1              3       {txt}Obs         {res}          4
{txt}25%    {res}      1.5              4       {txt}Sum of Wgt. {res}          4

{txt}50%    {res}      2.5                      {txt}Mean          {res}      2.5
                        {txt}Largest       Std. Dev.     {res} 1.290994
{txt}75%    {res}      3.5              1
{txt}90%    {res}        4              2       {txt}Variance      {res} 1.666667
{txt}95%    {res}        4              3       {txt}Skewness      {res}        0
{txt}99%    {res}        4              4       {txt}Kurtosis      {res}     1.64
{txt}(2 real changes made)
  {res}5

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}random2 {c |}{res}          5    .4512814    .2864937   .1455326   .8782166
{txt}(3 real changes made)

{com}. 
. tab strata r_treat

           {txt}{c |}        r_treat
    strata {c |}         0          1 {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
       111 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       112 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       121 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       122 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       211 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       212 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       221 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       222 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       311 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       312 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       321 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       322 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       411 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       412 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       421 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       422 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       511 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       512 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       521 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       522 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       611 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       612 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       621 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       622 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}        52         54 {txt}{c |}{res}       106 
{txt}
{com}. 
. bysort region: tab strata r_treat

{txt}{hline}
-> region = Mid-Hills

           {c |}        r_treat
    strata {c |}         0          1 {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
       411 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       412 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       421 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       422 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       511 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       512 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       521 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       522 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       611 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       612 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       621 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       622 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}        25         26 {txt}{c |}{res}        51 

{txt}{hline}
-> region = Terai

           {c |}        r_treat
    strata {c |}         0          1 {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
       111 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       112 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       121 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       122 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       211 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       212 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       221 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       222 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}       311 {c |}{res}         2          2 {txt}{c |}{res}         4 
{txt}       312 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       321 {c |}{res}         3          2 {txt}{c |}{res}         5 
{txt}       322 {c |}{res}         2          3 {txt}{c |}{res}         5 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}        27         28 {txt}{c |}{res}        55 

{txt}
{com}. 
{txt}end of do-file

{com}. browse r_treat idx region MAN3 REC2 LS9

. sort idx

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Stata files/Baseline/Randomization" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline" // initial data sets stored here
{txt}
{com}. 
{txt}end of do-file

{com}. clear

. use "$d2/Merged/Baseline_Merged_Str.dta"
{txt}( )

{com}. browse idx role_GMrevenuandcostREV4

. sort idx

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Documents/GitHub/LSIL_PAP" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data" // initial data sets stored here
{txt}
{com}. gl d3 = "$d2/LSIL-DATA_scott/VCC baseline aug 20 2018" // clean data folder - saved separately to preserve original data
{txt}
{com}. 
{txt}end of do-file

{com}. clear

. use "$d3/r_Baseline_Merged_Str.dta"

. browse idx REV4

. sort idx

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Documents/GitHub/LSIL_PAP" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data" // initial data sets stored here
{txt}
{com}. gl d3 = "$d2/LSIL-DATA_scott/VCC baseline aug 20 2018" // clean data folder - saved separately to preserve original data
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. clear
{txt}
{com}. use "$d3/Cooperative.dta"
{txt}
{com}. 
{txt}end of do-file

{com}. browse IDX MAN3 REV4

. sort IDX

. clear 

. use "$d3/Cooperative_collapse.dta"

. browse IDX MAN3 REV4
{err}variable {bf}IDX{sf} not found
{txt}{search r(111), local:r(111);}

{com}. browse idx MAN3 REV4

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Stata files/Baseline/Randomization" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline" // initial data sets stored here
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
{txt}end of do-file

{com}. browse IDX role_CPMgt_and_membershi1 role_GMrevenuandcostREV4
{err}variable {bf}IDX{sf} not found
{txt}{search r(111), local:r(111);}

{com}. browse HH_IDIDX role_CPMgt_and_membershi1 role_GMrevenuandcostREV4
{err}variable {bf}role_CPMgt_and_membershi1{sf} not found
{txt}{search r(111), local:r(111);}

{com}. browse HH_IDIDX role_CPManagement_and_membershi1 role_GMrevenuandcostREV4

. sort HH_IDIDX

. clear

. use "$d2/Co-op/co-op_merged.dta"
{txt}( )

{com}. browse HH_IDIDX role_CPMgt_and_membershi1 role_GMrevenuandcostREV4

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Documents/GitHub/LSIL_PAP" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data" // initial data sets stored here
{txt}
{com}. gl d3 = "$d2/LSIL-DATA_scott/VCC baseline aug 20 2018" // clean data folder - saved separately to preserve original data
{txt}
{com}. 
{txt}end of do-file

{com}. clear

. use "$d3/Livestocksales_collapse.dta"

. clear

. use "$d3/Household_Merged.dta"

. browse IDX region LS9

. sort IDX

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Stata files/Baseline/Randomization" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline" // initial data sets stored here
{txt}
{com}. 
{txt}end of do-file

{com}. clear

. use "$d2/Household/Livestock_sales_collapse.dta"
{txt}( )

{com}. clear

. use "$d2/Household/Household_Collapsed.dta"
{txt}( )

{com}. clear

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. 
. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}. 
. destring ID1, replace
{txt}ID1 already numeric; no {res}replace
{txt}
{com}. *gen region = "Arghakanchhi" if ID1==51
. replace region = "Arghakanchhi" if ID1==51
{txt}(6 real changes made)

{com}. replace region = "Baglung" if ID1==45
{txt}(12 real changes made)

{com}. replace region = "Banke" if ID1==57
{txt}(45 real changes made)

{com}. replace region = "Bardiya" if ID1==58
{txt}(36 real changes made)

{com}. replace region = "Chitwan" if ID1==35
{txt}(15 real changes made)

{com}. replace region = "Dang" if ID1==56
{txt}(18 real changes made)

{com}. replace region = "Dhading" if ID1==30
{txt}(12 real changes made)

{com}. replace region = "Kaski" if ID1==40
{txt}(9 real changes made)

{com}. replace region = "Kapilbastu" if ID1==50
{txt}(3 real changes made)

{com}. replace region = "Lamjung" if ID1==37
{txt}(9 real changes made)

{com}. replace region = "Mahottari" if ID1==18
{txt}(12 real changes made)

{com}. replace region = "Morang" if ID1==5
{txt}(9 real changes made)

{com}. replace region = "Nawalparasi" if ID1==48
{txt}(15 real changes made)

{com}. replace region = "Nuwakot" if ID1==28
{txt}(15 real changes made)

{com}. replace region = "Palpa" if ID1==47
{txt}(48 real changes made)

{com}. replace region = "Parbat" if ID1==44
{txt}(18 real changes made)

{com}. replace region = "Pyuthan" if ID1==52
{txt}(9 real changes made)

{com}. replace region = "Rautahat" if ID1==32
{txt}(9 real changes made)

{com}. replace region = "Rupandehi" if ID1==49
{txt}(6 real changes made)

{com}. replace region = "Salyan" if ID1==55
{txt}(3 real changes made)

{com}. replace region = "Sarlahi" if ID1==19
{txt}(6 real changes made)

{com}. replace region = "Sindhuli" if ID1==20
{txt}(12 real changes made)

{com}. replace region = "Surkhet" if ID1==59
{txt}(15 real changes made)

{com}. replace region = "Tanahu" if ID1==38
{txt}(15 real changes made)

{com}.  
. replace region = "Mid-Hills" if region=="Arghakanchhi" | region=="Baglung" | ///
>         region=="Dhading" | region =="Kaski" | region =="Lamjung" | region=="Nuwakot" | ///
>         region=="Palpa" | region =="Parbat" | region =="Pyuthan" | region =="Salyan" | ///
>         region=="Tanahu" | region =="Sindhuli"
{txt}(168 real changes made)

{com}.          
. replace region = "Terai" if region=="Banke" | region =="Bardiya" | region =="Kapilbastu" | ///
>         region=="Mahottari" | region =="Morang" | region =="Nawalparasi" | ///
>         region=="Rautahat" | region =="Rupandehi" | region=="Sarlahi" | region =="Surkhet" | ///
>         region =="Chitwan" | region =="Dang"
{txt}(189 real changes made)

{com}. 
{txt}end of do-file

{com}. browse IDX region
{err}variable {bf}IDX{sf} not found
{txt}{search r(111), local:r(111);}

{com}. browse idx region
{err}variable {bf}idx{sf} not found
{txt}{search r(111), local:r(111);}

{com}. browse HH_IDIDX region

. sort HH_IDIDX

. clear

. use "$d2/Co-op/co-op_merged.dta"
{txt}( )

{com}. browse idx region

. sort idx

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. use "$d2/Co-op/Cooperative1.dta", clear
{txt}( )

{com}.  
. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. use "$d2/Household/Livestock_Sales_livestock.dta", clear
{txt}( )

{com}. 
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Saleslivestock", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. * Livestock Sales Module
.  
. drop if ___parent_index ==.
{txt}(224 observations deleted)

{com}. save "$d2/Household/Livestock_sales_collapse.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Household/Livestock_sales_collapse.dta saved

{com}.  
. drop Livestock_SalesLS2 Livestock_SalesLS6 ///
>                 Livestock_SalesLS6_1 ___id ___uuid ___submission_time ///
>                 ___index ___parent_table_name ___tags ___notes
{txt}
{com}. 
. drop Livestock_SalesLS4 
{txt}
{com}.                 
. gen co_opsalevalue = Livestock_SalesLS9 if ///
> Livestock_SalesLS3=="1"                         
{txt}(1,380 missing values generated)

{com}. lab var co_opsalevalue "Total revenue, goats sold through co-op"
{txt}
{com}. 
. gen co_opgoatno = Livestock_SalesLS8 if ///
> Livestock_SalesLS3=="1"         
{txt}(1,380 missing values generated)

{com}. lab var co_opgoatno "Total goats sold through co-op"
{txt}
{com}. 
. save "$d2/Household/Livestock_sales_collapse.dta", replace
{txt}file /Users/scottmiller/Dropbox (UFL)/LSIL/Data/Previous Versions/Baseline/Household/Livestock_sales_collapse.dta saved

{com}.  
. destring *, replace             
{txt}Livestock_SalesLS3: all characters numeric; {res}replaced {txt}as {res}byte
{txt}Livestock_SalesLS5: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6A: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6B: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6C: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6D: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS6X: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(426 missing values generated)
{res}{txt}Livestock_SalesLS7: all characters numeric; {res}replaced {txt}as {res}byte
{txt}Livestock_SalesLS8 already numeric; no {res}replace
{txt}Livestock_SalesLS9 already numeric; no {res}replace
{txt}Livestock_SalesLS10 already numeric; no {res}replace
{txt}Livestock_SalesLS12 already numeric; no {res}replace
{txt}Livestock_SalesLS13 already numeric; no {res}replace
{txt}Livestock_SalesLS14 already numeric; no {res}replace
{txt}Livestock_SalesLS15 already numeric; no {res}replace
{txt}Livestock_SalesLS16 already numeric; no {res}replace
{txt}Livestock_SalesLS17 already numeric; no {res}replace
{txt}Livestock_SalesLS25 already numeric; no {res}replace
{txt}Livestock_SalesLS26 already numeric; no {res}replace
{txt}Livestock_SalesLS27 already numeric; no {res}replace
{txt}Livestock_SalesLS28 already numeric; no {res}replace
{txt}Livestock_SalesLS29 already numeric; no {res}replace
{txt}Livestock_SalesLS30 already numeric; no {res}replace
{txt}Livestock_SalesLS31 already numeric; no {res}replace
{txt}Livestock_SalesLS32 already numeric; no {res}replace
{txt}Livestock_SalesLS32_1 already numeric; no {res}replace
{txt}Livestock_SalesLS33 already numeric; no {res}replace
{txt}Livestock_SalesLS34 already numeric; no {res}replace
{txt}Livestock_SalesLS35 already numeric; no {res}replace
{txt}Livestock_SalesLS36 already numeric; no {res}replace
{txt}Livestock_SalesLS37 already numeric; no {res}replace
{txt}Livestock_SalesLS38: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS39: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(978 missing values generated)
{res}{txt}Livestock_SalesLS40 already numeric; no {res}replace
{txt}Livestock_SalesLS41 already numeric; no {res}replace
{txt}Livestock_SalesLS42 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS43 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS40 already numeric; no {res}replace
{txt}Livestock_SalesLS43LS41 already numeric; no {res}replace
{txt}Livestock_SalesLS44: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS45: all characters numeric; {res}replaced {txt}as {res}byte
{txt}(824 missing values generated)
{res}{txt}Livestock_SalesLS46 already numeric; no {res}replace
{txt}Livestock_SalesLS47 already numeric; no {res}replace
{txt}___parent_index already numeric; no {res}replace
{txt}co_opsalevalue already numeric; no {res}replace
{txt}co_opgoatno already numeric; no {res}replace
{txt}
{com}. recode * (99=.) (98=.) (97=.)
{txt}(Livestock_SalesLS3: 0 changes made)
(Livestock_SalesLS5: 0 changes made)
(Livestock_SalesLS6A: 0 changes made)
(Livestock_SalesLS6B: 0 changes made)
(Livestock_SalesLS6C: 0 changes made)
(Livestock_SalesLS6D: 0 changes made)
(Livestock_SalesLS6X: 0 changes made)
(Livestock_SalesLS7: 7 changes made)
(Livestock_SalesLS8: 1 changes made)
(Livestock_SalesLS9: 0 changes made)
(Livestock_SalesLS10: 0 changes made)
(Livestock_SalesLS12: 0 changes made)
(Livestock_SalesLS13: 0 changes made)
(Livestock_SalesLS14: 0 changes made)
(Livestock_SalesLS15: 0 changes made)
(Livestock_SalesLS16: 0 changes made)
(Livestock_SalesLS17: 0 changes made)
(Livestock_SalesLS25: 0 changes made)
(Livestock_SalesLS26: 0 changes made)
(Livestock_SalesLS27: 0 changes made)
(Livestock_SalesLS28: 0 changes made)
(Livestock_SalesLS29: 0 changes made)
(Livestock_SalesLS30: 0 changes made)
(Livestock_SalesLS31: 0 changes made)
(Livestock_SalesLS32: 0 changes made)
(Livestock_SalesLS32_1: 0 changes made)
(Livestock_SalesLS33: 1 changes made)
(Livestock_SalesLS34: 0 changes made)
(Livestock_SalesLS35: 1 changes made)
(Livestock_SalesLS36: 0 changes made)
(Livestock_SalesLS37: 0 changes made)
(Livestock_SalesLS38: 6 changes made)
(Livestock_SalesLS39: 0 changes made)
(Livestock_SalesLS40: 0 changes made)
(Livestock_SalesLS41: 0 changes made)
(Livestock_SalesLS42: 0 changes made)
(Livestock_SalesLS43LS43: 0 changes made)
(Livestock_SalesLS43LS40: 0 changes made)
(Livestock_SalesLS43LS41: 0 changes made)
(Livestock_SalesLS44: 0 changes made)
(Livestock_SalesLS45: 0 changes made)
(Livestock_SalesLS46: 380 changes made)
(Livestock_SalesLS47: 248 changes made)
(___parent_index: 1 changes made)
(co_opsalevalue: 0 changes made)
(co_opgoatno: 1 changes made)

{com}.  
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Sales", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         local l`v' : variable label `v'
{txt}  8{com}.         local ll`v': val lab `v'
{txt}  9{com}.         if `"`l`v''"' == "" {c -(}
{txt} 10{com}.                 local l`v' "`v'"
{txt} 11{com}.         {c )-}
{txt} 12{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. collapse (mean) Livestock_SalesLS3 *Livestock_SalesLS6* ///
>                 Livestock_SalesLS7 (sum) Livestock_SalesLS8 Livestock_SalesLS9 ///
>                 Livestock_SalesLS10 Livestock_SalesLS12 Livestock_SalesLS13 ///
>                 Livestock_SalesLS14 Livestock_SalesLS15 Livestock_SalesLS16 ///
>                 Livestock_SalesLS17 Livestock_SalesLS25 Livestock_SalesLS26 ///
>                 Livestock_SalesLS27 Livestock_SalesLS28 Livestock_SalesLS29 ///
>                 Livestock_SalesLS30 Livestock_SalesLS31 *Livestock_SalesLS32* ///
>             Livestock_SalesLS33 Livestock_SalesLS34 ///
>                 Livestock_SalesLS35 Livestock_SalesLS36 Livestock_SalesLS37 ///
>                 Livestock_SalesLS38 Livestock_SalesLS39 Livestock_SalesLS40 ///
>                 Livestock_SalesLS41 Livestock_SalesLS42 *Livestock_SalesLS43* ///
>                 Livestock_SalesLS44 Livestock_SalesLS45 Livestock_SalesLS46 ///
>                 Livestock_SalesLS47 co_opsalevalue co_opgoatno , by(___parent_index)
{txt}
{com}. 
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}.                 
. * Top coding
. g price = Livestock_SalesLS9/Livestock_SalesLS8
{txt}(58 missing values generated)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. g n = _n
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. *scatter Livestock_SalesLS9 price, mlabel(n)
. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. scatter Livestock_SalesLS9 price, mlabel(n)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. br n Livestock_SalesLS8 Livestock_SalesLS9 price if n == 1035 | n == 10 | n == 11 | n == 1222 | n == 1199
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. su price, d

                            {txt}price
{hline 61}
      Percentiles      Smallest
 1%    {res}     1500              0
{txt} 5%    {res}     3000              0
{txt}10%    {res}     4000       .0001667       {txt}Obs         {res}      1,238
{txt}25%    {res}     6000          .0002       {txt}Sum of Wgt. {res}      1,238

{txt}50%    {res}   8222.5                      {txt}Mean          {res} 8724.892
                        {txt}Largest       Std. Dev.     {res} 4656.123
{txt}75%    {res}    11000          25000
{txt}90%    {res}    13500          26000       {txt}Variance      {res} 2.17e+07
{txt}95%    {res}    15000          65000       {txt}Skewness      {res} 4.158234
{txt}99%    {res}    22000          75000       {txt}Kurtosis      {res} 52.66175
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. replace Livestock_SalesLS9 = r(p50)*Livestock_SalesLS8 if n == 1035 | n == 10 | n == 11 | n == 1222 | n == 1199
{txt}(5 real changes made)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. drop n price
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. su *LS8, d

         {txt}LS8 How many goats were sold in that sale?
{hline 61}
      Percentiles      Smallest
 1%    {res}        0              0
{txt} 5%    {res}        1              0
{txt}10%    {res}        1              0       {txt}Obs         {res}      1,296
{txt}25%    {res}        1              0       {txt}Sum of Wgt. {res}      1,296

{txt}50%    {res}        2                      {txt}Mean          {res} 39.83565
                        {txt}Largest       Std. Dev.     {res} 638.7508
{txt}75%    {res}        3           6000
{txt}90%    {res}        4           6001       {txt}Variance      {res} 408002.6
{txt}95%    {res}        5           9001       {txt}Skewness      {res}  22.4717
{txt}99%    {res}       15          18501       {txt}Kurtosis      {res} 583.9898
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. replace Livestock_SalesLS8 = r(p50) if Livestock_SalesLS8 > 25 & ///
> Livestock_SalesLS8 < . // Replaces outliers with median
{txt}(8 real changes made)

{com}. 
{txt}end of do-file

{com}. browse ___parent_index Livestock_SalesLS9

. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. gl d1 = "/Users/scottmiller/Documents/GitHub/LSIL_PAP" // do files stored here
{txt}
{com}. gl d2 = "/Users/scottmiller/Dropbox (UFL)/LSIL/Pre-Analysis Plan/Stata Files/PAP Data" // initial data sets stored here
{txt}
{com}. gl d3 = "$d2/LSIL-DATA_scott/VCC baseline aug 20 2018" // clean data folder - saved separately to preserve original data
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. 
. * Livestock Sales Module
. clear
{txt}
{com}. use "$d3/Livestocksales.dta"
{txt}
{com}. 
. 
. ** save labels and value labels in macros
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Saleslivestock", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}.  
. * drop data collection notes & time stamps 
. drop LS2 LS6 LS6_1 ___id ___uuid ___submission_time ///
>                 ___parent_table_name ___tags ___notes LS4 
{txt}
{com}.                 
. * total revenue through co-op           
. gen co_opsalevalue = LS9 if LS3==1                      
{txt}(1,565 missing values generated)

{com}. lab var co_opsalevalue "Total revenue, goats sold through co-op"
{txt}
{com}. 
. * goats sold through co-op      
. gen co_opgoatno = LS8 if LS3==1         
{txt}(1,565 missing values generated)

{com}. lab var co_opgoatno "Total goats sold through co-op"
{txt}
{com}. 
. * Change blank cells in string vars to missing values
. ds, has(type string) 
{txt}{col 1}___parent_~x

{com}. quietly foreach v in `r(varlist)' {c -(} 
{txt}
{com}. 
. * destring all variables in module
. destring *, replace
{txt}LS3 already numeric; no {res}replace
{txt}LS5 already numeric; no {res}replace
{txt}LS6A already numeric; no {res}replace
{txt}LS6B already numeric; no {res}replace
{txt}LS6C already numeric; no {res}replace
{txt}LS6D already numeric; no {res}replace
{txt}LS6X already numeric; no {res}replace
{txt}LS7 already numeric; no {res}replace
{txt}LS8 already numeric; no {res}replace
{txt}LS9 already numeric; no {res}replace
{txt}LS10 already numeric; no {res}replace
{txt}LS12 already numeric; no {res}replace
{txt}LS13 already numeric; no {res}replace
{txt}LS14 already numeric; no {res}replace
{txt}LS15 already numeric; no {res}replace
{txt}LS16 already numeric; no {res}replace
{txt}LS17 already numeric; no {res}replace
{txt}LS25 already numeric; no {res}replace
{txt}LS26 already numeric; no {res}replace
{txt}LS27 already numeric; no {res}replace
{txt}LS28 already numeric; no {res}replace
{txt}LS29 already numeric; no {res}replace
{txt}LS30 already numeric; no {res}replace
{txt}LS31 already numeric; no {res}replace
{txt}LS32 already numeric; no {res}replace
{txt}LS32_1 already numeric; no {res}replace
{txt}LS33 already numeric; no {res}replace
{txt}LS34 already numeric; no {res}replace
{txt}LS35 already numeric; no {res}replace
{txt}LS36 already numeric; no {res}replace
{txt}LS37 already numeric; no {res}replace
{txt}LS38 already numeric; no {res}replace
{txt}LS39 already numeric; no {res}replace
{txt}LS40 already numeric; no {res}replace
{txt}LS41 already numeric; no {res}replace
{txt}LS42 already numeric; no {res}replace
{txt}LS43_Head already numeric; no {res}replace
{txt}LS43_a already numeric; no {res}replace
{txt}LS43_b already numeric; no {res}replace
{txt}LS44 already numeric; no {res}replace
{txt}LS45 already numeric; no {res}replace
{txt}LS46 already numeric; no {res}replace
{txt}LS47 already numeric; no {res}replace
{txt}___index already numeric; no {res}replace
{txt}___parent_index: contains nonnumeric characters; no {res}replace
{txt}co_opsalevalue already numeric; no {res}replace
{txt}co_opgoatno already numeric; no {res}replace
{txt}
{com}. ds *, has(type numeric)
{txt}{col 1}LS3{col 15}LS8{col 29}LS17{col 43}LS32{col 57}LS39{col 71}LS45
{col 1}LS5{col 15}LS9{col 29}LS25{col 43}LS32_1{col 57}LS40{col 71}LS46
{col 1}LS6A{col 15}LS10{col 29}LS26{col 43}LS33{col 57}LS41{col 71}LS47
{col 1}LS6B{col 15}LS12{col 29}LS27{col 43}LS34{col 57}LS42{col 71}___index
{col 1}LS6C{col 15}LS13{col 29}LS28{col 43}LS35{col 57}LS43_Head{col 71}co_opsalev~e
{col 1}LS6D{col 15}LS14{col 29}LS29{col 43}LS36{col 57}LS43_a{col 71}co_opgoatno
{col 1}LS6X{col 15}LS15{col 29}LS30{col 43}LS37{col 57}LS43_b
{col 1}LS7{col 15}LS16{col 29}LS31{col 43}LS38{col 57}LS44

{com}. local numeric = "`r(varlist)'"          
{txt}
{com}. recode `numeric' (99=.) (98=.) (97=.)
{txt}(LS3: 0 changes made)
(LS5: 0 changes made)
(LS6A: 0 changes made)
(LS6B: 0 changes made)
(LS6C: 0 changes made)
(LS6D: 0 changes made)
(LS6X: 0 changes made)
(LS7: 10 changes made)
(LS8: 1 changes made)
(LS9: 0 changes made)
(LS10: 0 changes made)
(LS12: 0 changes made)
(LS13: 0 changes made)
(LS14: 0 changes made)
(LS15: 0 changes made)
(LS16: 0 changes made)
(LS17: 0 changes made)
(LS25: 1 changes made)
(LS26: 0 changes made)
(LS27: 0 changes made)
(LS28: 0 changes made)
(LS29: 0 changes made)
(LS30: 0 changes made)
(LS31: 0 changes made)
(LS32: 0 changes made)
(LS32_1: 0 changes made)
(LS33: 1 changes made)
(LS34: 0 changes made)
(LS35: 1 changes made)
(LS36: 0 changes made)
(LS37: 0 changes made)
(LS38: 8 changes made)
(LS39: 0 changes made)
(LS40: 0 changes made)
(LS41: 1 changes made)
(LS42: 0 changes made)
(LS43_Head: 0 changes made)
(LS43_a: 1 changes made)
(LS43_b: 1 changes made)
(LS44: 0 changes made)
(LS45: 0 changes made)
(LS46: 437 changes made)
(LS47: 308 changes made)
(___index: 6 changes made)
(co_opsalevalue: 0 changes made)
(co_opgoatno: 1 changes made)

{com}. 
. * make 1/2 variables binary
. foreach v of varlist LS3 ///
>                 LS39 LS44 ///
>                 LS45 {c -(}
{txt}  2{com}.         quietly replace `v'=. if `v'==99
{txt}  3{com}.         quietly replace `v'=. if `v'==97
{txt}  4{com}.         quietly replace `v'=0 if `v'==2
{txt}  5{com}. {c )-}
{txt}
{com}.  
. ** save labels and value labels in macros 
. foreach v of var * {c -(}
{txt}  2{com}.         cap local vv = subinstr("`v'", "Livestock_Sales", "Livestock_Sales",.) // names too long for macros
{txt}  3{com}.         if _rc == 0 {c -(}
{txt}  4{com}.                 rename `v' `vv'
{txt}  5{com}.                 local v `vv'
{txt}  6{com}.         {c )-}
{txt}  7{com}.         local l`v' : variable label `v'
{txt}  8{com}.         local ll`v': val lab `v'
{txt}  9{com}.         if `"`l`v''"' == "" {c -(}
{txt} 10{com}.                 local l`v' "`v'"
{txt} 11{com}.         {c )-}
{txt} 12{com}. {c )-}
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})
{res}{txt}  (all {it:newnames}=={it:oldnames})

{com}. 
. * # of sales
. bysort ___parent_index: egen LS_n_sales=count(___parent_index)
{txt}
{com}. 
. collapse (firstnm) LS_n_sales (mean) LS3 *LS6* LS7 (sum) LS8 LS9 LS10 LS12 LS13 LS14 LS15 LS16 ///
>                 LS17 LS25 LS26 LS27 LS28 LS29 LS30 LS31 *LS32* LS33 LS34 LS35 LS36 LS37 ///
>                 LS38 LS39 LS40 LS41 LS42 *LS43* LS44 LS45 LS46 ///
>                 LS47 co_opsalevalue co_opgoatno , by(___parent_index)
{txt}
{com}. 
. ** save labels and value labels in macros
. foreach v of var * {c -(}
{txt}  2{com}.         label var `v' "`l`v''"
{txt}  3{com}.         cap label val `v' "`ll`v''"
{txt}  4{com}. {c )-}
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. *******************************************             
. * Top code LS9 -- obvious outliers
. g price = LS9/LS8
{txt}(66 missing values generated)

{com}. 
. g n = _n
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. su price, d

                            {txt}price
{hline 61}
      Percentiles      Smallest
 1%    {res}     1400              0
{txt} 5%    {res}     3000              0
{txt}10%    {res}     4000       .0001667       {txt}Obs         {res}      1,384
{txt}25%    {res}     6000          .0002       {txt}Sum of Wgt. {res}      1,384

{txt}50%    {res}  8213.75                      {txt}Mean          {res} 8736.413
                        {txt}Largest       Std. Dev.     {res} 4588.313
{txt}75%    {res}    11000          25000
{txt}90%    {res}    13600          26000       {txt}Variance      {res} 2.11e+07
{txt}95%    {res}    15000          65000       {txt}Skewness      {res} 3.938644
{txt}99%    {res}    22000          75000       {txt}Kurtosis      {res} 50.15303
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. scatter LS9 price, mlabel(n)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/_d/jk4yrpt11pbc34dyw8cg5kjm0000gn/T//SD03062.000000"
{txt}
{com}. clear
{txt}
{com}. use "$d3/Livestocksales.dta"
{txt}
{com}. 
{txt}end of do-file

{com}. 